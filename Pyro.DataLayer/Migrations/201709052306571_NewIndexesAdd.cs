namespace Pyro.DataLayer.Migrations
{
  using System;
  using System.Collections.Generic;
  using System.Data.Entity.Infrastructure.Annotations;
  using System.Data.Entity.Migrations;

  public partial class NewIndexesAdd : DbMigration
  {
    public override void Up()
    {
      CreateTable(
          "dbo.AccountResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AccountResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AccountResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AccountResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AccountResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ActivityDefinitionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ActivityDefinitionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ActivityDefinitionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ActivityDefinitionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ActivityDefinitionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AdverseEventResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AdverseEventResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AdverseEventResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AdverseEventResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AdverseEventResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AllergyIntoleranceResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AllergyIntoleranceResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AllergyIntoleranceResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AllergyIntoleranceResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AllergyIntoleranceResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AppointmentResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AppointmentResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AppointmentResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AppointmentResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AppointmentResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AppointmentResponseResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AppointmentResponseResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AppointmentResponseResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AppointmentResponseResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AppointmentResponseResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AuditEventResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AuditEventResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AuditEventResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AuditEventResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.AuditEventResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BasicResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BasicResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BasicResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BasicResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BasicResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BinaryResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BinaryResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BinaryResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BinaryResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BinaryResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BodySiteResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BodySiteRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BodySiteResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BodySiteRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BodySiteResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BodySiteRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BodySiteResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BodySiteRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BodySiteResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BodySiteRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BundleResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BundleResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BundleResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BundleResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.BundleResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CapabilityStatementResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CapabilityStatementResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CapabilityStatementResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CapabilityStatementResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CapabilityStatementResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CarePlanResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CarePlanResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CarePlanResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CarePlanResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CarePlanResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CareTeamResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CareTeamResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CareTeamResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CareTeamResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CareTeamResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ChargeItemResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ChargeItemResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ChargeItemResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ChargeItemResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ChargeItemResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClaimResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClaimResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClaimResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClaimResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClaimResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClaimResponseResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClaimResponseResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClaimResponseResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClaimResponseResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClaimResponseResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClinicalImpressionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClinicalImpressionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClinicalImpressionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClinicalImpressionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ClinicalImpressionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CodeSystemResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CodeSystemResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CodeSystemResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CodeSystemResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CodeSystemResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CommunicationResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CommunicationResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CommunicationResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CommunicationResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CommunicationResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CommunicationRequestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CommunicationRequestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CommunicationRequestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CommunicationRequestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CommunicationRequestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CompartmentDefinitionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CompartmentDefinitionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CompartmentDefinitionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CompartmentDefinitionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CompartmentDefinitionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CompositionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CompositionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CompositionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CompositionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CompositionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConceptMapResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConceptMapResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConceptMapResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConceptMapResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConceptMapResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConditionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConditionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConditionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConditionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConditionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConsentResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConsentResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConsentResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConsentResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ConsentResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ContractResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ContractResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ContractResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ContractResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ContractResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CoverageResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CoverageResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CoverageResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CoverageResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.CoverageResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DataElementResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DataElementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DataElementResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DataElementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DataElementResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DataElementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DataElementResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DataElementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DataElementResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DataElementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DetectedIssueResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DetectedIssueResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DetectedIssueResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DetectedIssueResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DetectedIssueResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceComponentResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceComponentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceComponentResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceComponentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceComponentResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceComponentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceComponentResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceComponentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceComponentResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceComponentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceMetricResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceMetricResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceMetricResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceMetricResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceMetricResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceRequestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceRequestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceRequestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceRequestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceRequestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceUseStatementResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceUseStatementResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceUseStatementResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceUseStatementResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DeviceUseStatementResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DiagnosticReportResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DiagnosticReportResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DiagnosticReportResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DiagnosticReportResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DiagnosticReportResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DocumentManifestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DocumentManifestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DocumentManifestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DocumentManifestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DocumentManifestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DocumentReferenceResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DocumentReferenceResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DocumentReferenceResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DocumentReferenceResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.DocumentReferenceResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EligibilityRequestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EligibilityRequestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EligibilityRequestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EligibilityRequestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EligibilityRequestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EligibilityResponseResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EligibilityResponseResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EligibilityResponseResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EligibilityResponseResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EligibilityResponseResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EncounterResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EncounterResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EncounterResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EncounterResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EncounterResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EndpointResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EndpointResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EndpointResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EndpointResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EndpointResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EnrollmentRequestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EnrollmentRequestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EnrollmentRequestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EnrollmentRequestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EnrollmentRequestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EnrollmentResponseResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EnrollmentResponseResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EnrollmentResponseResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EnrollmentResponseResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EnrollmentResponseResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EpisodeOfCareResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EpisodeOfCareResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EpisodeOfCareResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EpisodeOfCareResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.EpisodeOfCareResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ExpansionProfileResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ExpansionProfileRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ExpansionProfileResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ExpansionProfileRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ExpansionProfileResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ExpansionProfileRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ExpansionProfileResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ExpansionProfileRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ExpansionProfileResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ExpansionProfileRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ExplanationOfBenefitResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ExplanationOfBenefitResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ExplanationOfBenefitResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ExplanationOfBenefitResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ExplanationOfBenefitResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.FamilyMemberHistoryResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.FamilyMemberHistoryResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.FamilyMemberHistoryResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.FamilyMemberHistoryResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.FamilyMemberHistoryResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.FlagResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.FlagResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.FlagResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.FlagResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.FlagResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GoalResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GoalResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GoalResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GoalResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GoalResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GraphDefinitionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GraphDefinitionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GraphDefinitionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GraphDefinitionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GraphDefinitionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GroupResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GroupResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GroupResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GroupResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GroupResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GuidanceResponseResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GuidanceResponseResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GuidanceResponseResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GuidanceResponseResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.GuidanceResponseResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.HealthcareServiceResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.HealthcareServiceResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.HealthcareServiceResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.HealthcareServiceResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.HealthcareServiceResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImagingManifestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImagingManifestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImagingManifestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImagingManifestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImagingManifestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImagingManifestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImagingManifestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImagingManifestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImagingManifestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImagingManifestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImagingStudyResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImagingStudyResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImagingStudyResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImagingStudyResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImagingStudyResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImmunizationResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImmunizationResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImmunizationResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImmunizationResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImmunizationResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImmunizationRecommendationResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImmunizationRecommendationResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImmunizationRecommendationResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImmunizationRecommendationResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImmunizationRecommendationResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImplementationGuideResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImplementationGuideResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImplementationGuideResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImplementationGuideResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ImplementationGuideResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LibraryResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LibraryResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LibraryResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LibraryResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LibraryResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LinkageResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LinkageResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LinkageResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LinkageResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LinkageResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ListResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ListResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ListResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ListResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ListResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LocationResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LocationResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LocationResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LocationResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.LocationResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MeasureResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MeasureResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MeasureResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MeasureResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MeasureResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MeasureReportResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MeasureReportResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MeasureReportResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MeasureReportResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MeasureReportResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MediaResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MediaResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MediaResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MediaResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MediaResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationAdministrationResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationAdministrationResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationAdministrationResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationAdministrationResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationAdministrationResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationDispenseResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationDispenseResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationDispenseResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationDispenseResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationDispenseResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationRequestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationRequestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationRequestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationRequestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationRequestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationStatementResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationStatementResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationStatementResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationStatementResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MedicationStatementResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MessageDefinitionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MessageDefinitionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MessageDefinitionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MessageDefinitionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MessageDefinitionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MessageHeaderResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MessageHeaderResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MessageHeaderResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MessageHeaderResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.MessageHeaderResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.NamingSystemResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.NamingSystemResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.NamingSystemResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.NamingSystemResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.NamingSystemResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.NutritionOrderResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.NutritionOrderResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.NutritionOrderResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.NutritionOrderResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.NutritionOrderResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ObservationResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ObservationResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ObservationResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ObservationResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ObservationResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OperationDefinitionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OperationDefinitionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OperationDefinitionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OperationDefinitionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OperationDefinitionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OperationOutcomeResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OperationOutcomeResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OperationOutcomeResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OperationOutcomeResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OperationOutcomeResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OrganizationResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OrganizationResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OrganizationResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OrganizationResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.OrganizationResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ParametersResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ParametersResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ParametersResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ParametersResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ParametersResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PatientResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PatientResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PatientResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PatientResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PatientResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PaymentNoticeResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PaymentNoticeResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PaymentNoticeResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PaymentNoticeResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PaymentNoticeResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PaymentReconciliationResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PaymentReconciliationResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PaymentReconciliationResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PaymentReconciliationResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PaymentReconciliationResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PersonResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PersonResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PersonResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PersonResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PersonResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PlanDefinitionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PlanDefinitionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PlanDefinitionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PlanDefinitionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PlanDefinitionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PractitionerResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PractitionerResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PractitionerResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PractitionerResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PractitionerResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PractitionerRoleResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PractitionerRoleResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PractitionerRoleResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PractitionerRoleResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.PractitionerRoleResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcedureResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcedureResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcedureResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcedureResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcedureResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcedureRequestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcedureRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcedureRequestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcedureRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcedureRequestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcedureRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcedureRequestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcedureRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcedureRequestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcedureRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcessRequestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcessRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcessRequestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcessRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcessRequestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcessRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcessRequestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcessRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcessRequestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcessRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcessResponseResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcessResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcessResponseResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcessResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcessResponseResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcessResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcessResponseResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcessResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProcessResponseResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProcessResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProvenanceResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProvenanceResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProvenanceResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProvenanceResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ProvenanceResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.QuestionnaireResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.QuestionnaireResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.QuestionnaireResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.QuestionnaireResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.QuestionnaireResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.QuestionnaireResponseResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.QuestionnaireResponseResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.QuestionnaireResponseResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.QuestionnaireResponseResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.QuestionnaireResponseResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ReferralRequestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ReferralRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ReferralRequestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ReferralRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ReferralRequestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ReferralRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ReferralRequestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ReferralRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ReferralRequestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ReferralRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RelatedPersonResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RelatedPersonResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RelatedPersonResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RelatedPersonResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RelatedPersonResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RequestGroupResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RequestGroupResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RequestGroupResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RequestGroupResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RequestGroupResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ResearchStudyResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ResearchStudyResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ResearchStudyResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ResearchStudyResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ResearchStudyResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ResearchSubjectResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ResearchSubjectResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ResearchSubjectResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ResearchSubjectResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ResearchSubjectResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RiskAssessmentResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RiskAssessmentResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RiskAssessmentResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RiskAssessmentResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.RiskAssessmentResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ScheduleResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ScheduleResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ScheduleResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ScheduleResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ScheduleResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SearchParameterResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SearchParameterResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SearchParameterResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SearchParameterResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SearchParameterResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SequenceResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SequenceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SequenceResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SequenceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SequenceResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SequenceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SequenceResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SequenceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SequenceResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SequenceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ServiceDefinitionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ServiceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ServiceDefinitionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ServiceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ServiceDefinitionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ServiceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ServiceDefinitionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ServiceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ServiceDefinitionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ServiceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SlotResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SlotResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SlotResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SlotResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SlotResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SpecimenResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SpecimenResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SpecimenResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SpecimenResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SpecimenResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.StructureDefinitionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.StructureDefinitionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.StructureDefinitionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.StructureDefinitionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.StructureDefinitionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.StructureMapResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.StructureMapResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.StructureMapResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.StructureMapResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.StructureMapResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SubscriptionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SubscriptionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SubscriptionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SubscriptionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SubscriptionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SubstanceResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SubstanceResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SubstanceResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SubstanceResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SubstanceResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SupplyDeliveryResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SupplyDeliveryResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SupplyDeliveryResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SupplyDeliveryResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SupplyDeliveryResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SupplyRequestResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SupplyRequestResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SupplyRequestResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SupplyRequestResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.SupplyRequestResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TaskResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TaskResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TaskResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TaskResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TaskResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TestReportResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TestReportResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TestReportResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TestReportResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TestReportResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TestScriptResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TestScriptResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TestScriptResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TestScriptResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.TestScriptResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ValueSetResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ValueSetResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ValueSetResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ValueSetResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.ValueSetResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.VisionPrescriptionResIndexDateTime",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            DateTimeOffsetHigh = c.DateTimeOffset(precision: 3),
            DateTimeOffsetLow = c.DateTimeOffset(precision: 3),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.DateTimeOffsetHigh, name: "ix_DateTimeOffsetHigh")
          .Index(t => t.DateTimeOffsetLow, name: "ix_DateTimeOffsetLow")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.VisionPrescriptionResIndexQuantity",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Comparator = c.Int(),
            Quantity = c.Decimal(precision: 28, scale: 14),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            Unit = c.String(maxLength: 450),
            ComparatorHigh = c.Int(),
            QuantityHigh = c.Decimal(precision: 28, scale: 14),
            CodeHigh = c.String(maxLength: 128),
            SystemHigh = c.String(maxLength: 450),
            UnitHigh = c.String(maxLength: 64),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.VisionPrescriptionResIndexReference",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            ReferenceFhirId = c.String(nullable: false, maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ReferenceResourceType = c.String(nullable: false, maxLength: 50),
            ReferenceServiceBaseUrlId = c.Int(),
            ReferenceVersionId = c.String(maxLength: 128,
                      annotations: new Dictionary<string, AnnotationValues>
                      {
                                {
                                    "CaseSensitive",
                                    new AnnotationValues(oldValue: null, newValue: "True")
                                },
                      }),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceBaseUrl", t => t.ReferenceServiceBaseUrlId)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.ReferenceFhirId, name: "ix_ReferenceFhirId")
          .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_ReferenceServiceBaseUrlId")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.VisionPrescriptionResIndexToken",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Code = c.String(maxLength: 128),
            System = c.String(maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Code, name: "ix_Code")
          .Index(t => t.System, name: "ix_System")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);

      CreateTable(
          "dbo.VisionPrescriptionResIndexUri",
          c => new
          {
            Id = c.Int(nullable: false, identity: true),
            Uri = c.String(nullable: false, maxLength: 450),
            ServiceSearchParameterId = c.Int(nullable: false),
            ResourceId = c.Int(nullable: false),
          })
          .PrimaryKey(t => t.Id)
          .ForeignKey("dbo.ServiceSearchParameter", t => t.ServiceSearchParameterId, cascadeDelete: true)
          .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
          .Index(t => t.Uri, name: "ix_Uri")
          .Index(t => t.ServiceSearchParameterId, name: "ix_ServiceSearchParameterId")
          .Index(t => t.ResourceId);




      //Manually added insert statements
      //ResIndexString - already done in last migration
      //ResIndexDateTime
      //ResIndexQuantity
      //ResIndexReference
      //ResIndexToken
      //ResIndeUri
      //foreach (string ResourceName in Hl7.Fhir.Model.ModelInfo.SupportedResources)
      //{
      //  //DateTime = 1
      //  string Query = string.Empty;
      //  Query = $"INSERT INTO dbo.{ResourceName}ResIndexDateTime (ServiceSearchParameterId, DateTimeOffsetLow, DateTimeOffsetHigh, ResourceId) ";
      //  Query += "SELECT ServiceSearchParameterId ,DateTimeOffsetLow ,DateTimeOffsetHigh, ResourceId ";
      //  Query += $"FROM dbo.{ResourceName}ResIndex i ";
      //  Query += "JOIN dbo.ServiceSearchParameter s ";
      //  Query += "ON i.ServiceSearchParameterId = s.Id ";
      //  Query += "WHERE s.Type = 1";
      //  Sql(Query);

      //  //Quantity = 6 or Number = 0
      //  Query = string.Empty;
      //  Query = $"INSERT INTO dbo.{ResourceName}ResIndexQuantity (ServiceSearchParameterId, Comparator, Quantity, Code, System, Unit, ComparatorHigh, QuantityHigh, CodeHigh, SystemHigh, UnitHigh, ResourceId) ";
      //  Query += "SELECT ServiceSearchParameterId, Comparator, Quantity, Code, System, Unit, ComparatorHigh, QuantityHigh, CodeHigh, SystemHigh, UnitHigh, ResourceId ";
      //  Query += $"FROM dbo.{ResourceName}ResIndex i ";
      //  Query += "JOIN dbo.ServiceSearchParameter s ";
      //  Query += "ON i.ServiceSearchParameterId = s.Id ";
      //  Query += "WHERE s.Type = 6 or s.Type = 0";
      //  Sql(Query);

      //  //Reference = 4
      //  Query = string.Empty;
      //  Query = $"INSERT INTO dbo.{ResourceName}ResIndexReference (ServiceSearchParameterId, ReferenceFhirId, ReferenceResourceType, ReferenceServiceBaseUrlId, ReferenceVersionId, ResourceId) ";
      //  Query += "SELECT ServiceSearchParameterId, ReferenceFhirId, ReferenceResourceType, ReferenceServiceBaseUrlId, ReferenceVersionId, ResourceId ";
      //  Query += $"FROM dbo.{ResourceName}ResIndex i ";
      //  Query += "JOIN dbo.ServiceSearchParameter s ";
      //  Query += "ON i.ServiceSearchParameterId = s.Id ";
      //  Query += "WHERE s.Type = 4";
      //  Sql(Query);

      //  //Token = 3
      //  Query = string.Empty;
      //  Query = $"INSERT INTO dbo.{ResourceName}ResIndexToken (ServiceSearchParameterId, Code, System, ResourceId) ";
      //  Query += "SELECT ServiceSearchParameterId, Code, System, ResourceId ";
      //  Query += $"FROM dbo.{ResourceName}ResIndex i ";
      //  Query += "JOIN dbo.ServiceSearchParameter s ";
      //  Query += "ON i.ServiceSearchParameterId = s.Id ";
      //  Query += "WHERE s.Type = 3 ";
      //  Sql(Query);

      //  //Uri = 7
      //  Query = string.Empty;
      //  Query = $"INSERT INTO dbo.{ResourceName}ResIndexUri (ServiceSearchParameterId, Uri, ResourceId) ";
      //  Query += "SELECT ServiceSearchParameterId, Uri, ResourceId ";
      //  Query += $"FROM dbo.{ResourceName}ResIndex i ";
      //  Query += "JOIN dbo.ServiceSearchParameter s ";
      //  Query += "ON i.ServiceSearchParameterId = s.Id ";
      //  Query += "WHERE s.Type = 7";
      //  Sql(Query);
      //}




    }

    public override void Down()
    {
      DropForeignKey("dbo.VisionPrescriptionResIndexUri", "ResourceId", "dbo.VisionPrescriptionRes");
      DropForeignKey("dbo.VisionPrescriptionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.VisionPrescriptionResIndexToken", "ResourceId", "dbo.VisionPrescriptionRes");
      DropForeignKey("dbo.VisionPrescriptionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.VisionPrescriptionResIndexReference", "ResourceId", "dbo.VisionPrescriptionRes");
      DropForeignKey("dbo.VisionPrescriptionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.VisionPrescriptionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.VisionPrescriptionResIndexQuantity", "ResourceId", "dbo.VisionPrescriptionRes");
      DropForeignKey("dbo.VisionPrescriptionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.VisionPrescriptionResIndexDateTime", "ResourceId", "dbo.VisionPrescriptionRes");
      DropForeignKey("dbo.VisionPrescriptionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ValueSetResIndexUri", "ResourceId", "dbo.ValueSetRes");
      DropForeignKey("dbo.ValueSetResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ValueSetResIndexToken", "ResourceId", "dbo.ValueSetRes");
      DropForeignKey("dbo.ValueSetResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ValueSetResIndexReference", "ResourceId", "dbo.ValueSetRes");
      DropForeignKey("dbo.ValueSetResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ValueSetResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ValueSetResIndexQuantity", "ResourceId", "dbo.ValueSetRes");
      DropForeignKey("dbo.ValueSetResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ValueSetResIndexDateTime", "ResourceId", "dbo.ValueSetRes");
      DropForeignKey("dbo.ValueSetResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TestScriptResIndexUri", "ResourceId", "dbo.TestScriptRes");
      DropForeignKey("dbo.TestScriptResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TestScriptResIndexToken", "ResourceId", "dbo.TestScriptRes");
      DropForeignKey("dbo.TestScriptResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TestScriptResIndexReference", "ResourceId", "dbo.TestScriptRes");
      DropForeignKey("dbo.TestScriptResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TestScriptResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.TestScriptResIndexQuantity", "ResourceId", "dbo.TestScriptRes");
      DropForeignKey("dbo.TestScriptResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TestScriptResIndexDateTime", "ResourceId", "dbo.TestScriptRes");
      DropForeignKey("dbo.TestScriptResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TestReportResIndexUri", "ResourceId", "dbo.TestReportRes");
      DropForeignKey("dbo.TestReportResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TestReportResIndexToken", "ResourceId", "dbo.TestReportRes");
      DropForeignKey("dbo.TestReportResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TestReportResIndexReference", "ResourceId", "dbo.TestReportRes");
      DropForeignKey("dbo.TestReportResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TestReportResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.TestReportResIndexQuantity", "ResourceId", "dbo.TestReportRes");
      DropForeignKey("dbo.TestReportResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TestReportResIndexDateTime", "ResourceId", "dbo.TestReportRes");
      DropForeignKey("dbo.TestReportResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TaskResIndexUri", "ResourceId", "dbo.TaskRes");
      DropForeignKey("dbo.TaskResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TaskResIndexToken", "ResourceId", "dbo.TaskRes");
      DropForeignKey("dbo.TaskResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TaskResIndexReference", "ResourceId", "dbo.TaskRes");
      DropForeignKey("dbo.TaskResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TaskResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.TaskResIndexQuantity", "ResourceId", "dbo.TaskRes");
      DropForeignKey("dbo.TaskResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.TaskResIndexDateTime", "ResourceId", "dbo.TaskRes");
      DropForeignKey("dbo.TaskResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SupplyRequestResIndexUri", "ResourceId", "dbo.SupplyRequestRes");
      DropForeignKey("dbo.SupplyRequestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SupplyRequestResIndexToken", "ResourceId", "dbo.SupplyRequestRes");
      DropForeignKey("dbo.SupplyRequestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SupplyRequestResIndexReference", "ResourceId", "dbo.SupplyRequestRes");
      DropForeignKey("dbo.SupplyRequestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SupplyRequestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.SupplyRequestResIndexQuantity", "ResourceId", "dbo.SupplyRequestRes");
      DropForeignKey("dbo.SupplyRequestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SupplyRequestResIndexDateTime", "ResourceId", "dbo.SupplyRequestRes");
      DropForeignKey("dbo.SupplyRequestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SupplyDeliveryResIndexUri", "ResourceId", "dbo.SupplyDeliveryRes");
      DropForeignKey("dbo.SupplyDeliveryResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SupplyDeliveryResIndexToken", "ResourceId", "dbo.SupplyDeliveryRes");
      DropForeignKey("dbo.SupplyDeliveryResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SupplyDeliveryResIndexReference", "ResourceId", "dbo.SupplyDeliveryRes");
      DropForeignKey("dbo.SupplyDeliveryResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SupplyDeliveryResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.SupplyDeliveryResIndexQuantity", "ResourceId", "dbo.SupplyDeliveryRes");
      DropForeignKey("dbo.SupplyDeliveryResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SupplyDeliveryResIndexDateTime", "ResourceId", "dbo.SupplyDeliveryRes");
      DropForeignKey("dbo.SupplyDeliveryResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SubstanceResIndexUri", "ResourceId", "dbo.SubstanceRes");
      DropForeignKey("dbo.SubstanceResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SubstanceResIndexToken", "ResourceId", "dbo.SubstanceRes");
      DropForeignKey("dbo.SubstanceResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SubstanceResIndexReference", "ResourceId", "dbo.SubstanceRes");
      DropForeignKey("dbo.SubstanceResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SubstanceResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.SubstanceResIndexQuantity", "ResourceId", "dbo.SubstanceRes");
      DropForeignKey("dbo.SubstanceResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SubstanceResIndexDateTime", "ResourceId", "dbo.SubstanceRes");
      DropForeignKey("dbo.SubstanceResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SubscriptionResIndexUri", "ResourceId", "dbo.SubscriptionRes");
      DropForeignKey("dbo.SubscriptionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SubscriptionResIndexToken", "ResourceId", "dbo.SubscriptionRes");
      DropForeignKey("dbo.SubscriptionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SubscriptionResIndexReference", "ResourceId", "dbo.SubscriptionRes");
      DropForeignKey("dbo.SubscriptionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SubscriptionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.SubscriptionResIndexQuantity", "ResourceId", "dbo.SubscriptionRes");
      DropForeignKey("dbo.SubscriptionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SubscriptionResIndexDateTime", "ResourceId", "dbo.SubscriptionRes");
      DropForeignKey("dbo.SubscriptionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.StructureMapResIndexUri", "ResourceId", "dbo.StructureMapRes");
      DropForeignKey("dbo.StructureMapResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.StructureMapResIndexToken", "ResourceId", "dbo.StructureMapRes");
      DropForeignKey("dbo.StructureMapResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.StructureMapResIndexReference", "ResourceId", "dbo.StructureMapRes");
      DropForeignKey("dbo.StructureMapResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.StructureMapResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.StructureMapResIndexQuantity", "ResourceId", "dbo.StructureMapRes");
      DropForeignKey("dbo.StructureMapResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.StructureMapResIndexDateTime", "ResourceId", "dbo.StructureMapRes");
      DropForeignKey("dbo.StructureMapResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.StructureDefinitionResIndexUri", "ResourceId", "dbo.StructureDefinitionRes");
      DropForeignKey("dbo.StructureDefinitionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.StructureDefinitionResIndexToken", "ResourceId", "dbo.StructureDefinitionRes");
      DropForeignKey("dbo.StructureDefinitionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.StructureDefinitionResIndexReference", "ResourceId", "dbo.StructureDefinitionRes");
      DropForeignKey("dbo.StructureDefinitionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.StructureDefinitionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.StructureDefinitionResIndexQuantity", "ResourceId", "dbo.StructureDefinitionRes");
      DropForeignKey("dbo.StructureDefinitionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.StructureDefinitionResIndexDateTime", "ResourceId", "dbo.StructureDefinitionRes");
      DropForeignKey("dbo.StructureDefinitionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SpecimenResIndexUri", "ResourceId", "dbo.SpecimenRes");
      DropForeignKey("dbo.SpecimenResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SpecimenResIndexToken", "ResourceId", "dbo.SpecimenRes");
      DropForeignKey("dbo.SpecimenResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SpecimenResIndexReference", "ResourceId", "dbo.SpecimenRes");
      DropForeignKey("dbo.SpecimenResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SpecimenResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.SpecimenResIndexQuantity", "ResourceId", "dbo.SpecimenRes");
      DropForeignKey("dbo.SpecimenResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SpecimenResIndexDateTime", "ResourceId", "dbo.SpecimenRes");
      DropForeignKey("dbo.SpecimenResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SlotResIndexUri", "ResourceId", "dbo.SlotRes");
      DropForeignKey("dbo.SlotResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SlotResIndexToken", "ResourceId", "dbo.SlotRes");
      DropForeignKey("dbo.SlotResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SlotResIndexReference", "ResourceId", "dbo.SlotRes");
      DropForeignKey("dbo.SlotResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SlotResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.SlotResIndexQuantity", "ResourceId", "dbo.SlotRes");
      DropForeignKey("dbo.SlotResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SlotResIndexDateTime", "ResourceId", "dbo.SlotRes");
      DropForeignKey("dbo.SlotResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ServiceDefinitionResIndexUri", "ResourceId", "dbo.ServiceDefinitionRes");
      DropForeignKey("dbo.ServiceDefinitionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ServiceDefinitionResIndexToken", "ResourceId", "dbo.ServiceDefinitionRes");
      DropForeignKey("dbo.ServiceDefinitionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ServiceDefinitionResIndexReference", "ResourceId", "dbo.ServiceDefinitionRes");
      DropForeignKey("dbo.ServiceDefinitionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ServiceDefinitionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ServiceDefinitionResIndexQuantity", "ResourceId", "dbo.ServiceDefinitionRes");
      DropForeignKey("dbo.ServiceDefinitionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ServiceDefinitionResIndexDateTime", "ResourceId", "dbo.ServiceDefinitionRes");
      DropForeignKey("dbo.ServiceDefinitionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SequenceResIndexUri", "ResourceId", "dbo.SequenceRes");
      DropForeignKey("dbo.SequenceResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SequenceResIndexToken", "ResourceId", "dbo.SequenceRes");
      DropForeignKey("dbo.SequenceResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SequenceResIndexReference", "ResourceId", "dbo.SequenceRes");
      DropForeignKey("dbo.SequenceResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SequenceResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.SequenceResIndexQuantity", "ResourceId", "dbo.SequenceRes");
      DropForeignKey("dbo.SequenceResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SequenceResIndexDateTime", "ResourceId", "dbo.SequenceRes");
      DropForeignKey("dbo.SequenceResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SearchParameterResIndexUri", "ResourceId", "dbo.SearchParameterRes");
      DropForeignKey("dbo.SearchParameterResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SearchParameterResIndexToken", "ResourceId", "dbo.SearchParameterRes");
      DropForeignKey("dbo.SearchParameterResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SearchParameterResIndexReference", "ResourceId", "dbo.SearchParameterRes");
      DropForeignKey("dbo.SearchParameterResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SearchParameterResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.SearchParameterResIndexQuantity", "ResourceId", "dbo.SearchParameterRes");
      DropForeignKey("dbo.SearchParameterResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.SearchParameterResIndexDateTime", "ResourceId", "dbo.SearchParameterRes");
      DropForeignKey("dbo.SearchParameterResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ScheduleResIndexUri", "ResourceId", "dbo.ScheduleRes");
      DropForeignKey("dbo.ScheduleResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ScheduleResIndexToken", "ResourceId", "dbo.ScheduleRes");
      DropForeignKey("dbo.ScheduleResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ScheduleResIndexReference", "ResourceId", "dbo.ScheduleRes");
      DropForeignKey("dbo.ScheduleResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ScheduleResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ScheduleResIndexQuantity", "ResourceId", "dbo.ScheduleRes");
      DropForeignKey("dbo.ScheduleResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ScheduleResIndexDateTime", "ResourceId", "dbo.ScheduleRes");
      DropForeignKey("dbo.ScheduleResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RiskAssessmentResIndexUri", "ResourceId", "dbo.RiskAssessmentRes");
      DropForeignKey("dbo.RiskAssessmentResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RiskAssessmentResIndexToken", "ResourceId", "dbo.RiskAssessmentRes");
      DropForeignKey("dbo.RiskAssessmentResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RiskAssessmentResIndexReference", "ResourceId", "dbo.RiskAssessmentRes");
      DropForeignKey("dbo.RiskAssessmentResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RiskAssessmentResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.RiskAssessmentResIndexQuantity", "ResourceId", "dbo.RiskAssessmentRes");
      DropForeignKey("dbo.RiskAssessmentResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RiskAssessmentResIndexDateTime", "ResourceId", "dbo.RiskAssessmentRes");
      DropForeignKey("dbo.RiskAssessmentResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ResearchSubjectResIndexUri", "ResourceId", "dbo.ResearchSubjectRes");
      DropForeignKey("dbo.ResearchSubjectResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ResearchSubjectResIndexToken", "ResourceId", "dbo.ResearchSubjectRes");
      DropForeignKey("dbo.ResearchSubjectResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ResearchSubjectResIndexReference", "ResourceId", "dbo.ResearchSubjectRes");
      DropForeignKey("dbo.ResearchSubjectResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ResearchSubjectResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ResearchSubjectResIndexQuantity", "ResourceId", "dbo.ResearchSubjectRes");
      DropForeignKey("dbo.ResearchSubjectResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ResearchSubjectResIndexDateTime", "ResourceId", "dbo.ResearchSubjectRes");
      DropForeignKey("dbo.ResearchSubjectResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ResearchStudyResIndexUri", "ResourceId", "dbo.ResearchStudyRes");
      DropForeignKey("dbo.ResearchStudyResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ResearchStudyResIndexToken", "ResourceId", "dbo.ResearchStudyRes");
      DropForeignKey("dbo.ResearchStudyResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ResearchStudyResIndexReference", "ResourceId", "dbo.ResearchStudyRes");
      DropForeignKey("dbo.ResearchStudyResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ResearchStudyResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ResearchStudyResIndexQuantity", "ResourceId", "dbo.ResearchStudyRes");
      DropForeignKey("dbo.ResearchStudyResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ResearchStudyResIndexDateTime", "ResourceId", "dbo.ResearchStudyRes");
      DropForeignKey("dbo.ResearchStudyResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RequestGroupResIndexUri", "ResourceId", "dbo.RequestGroupRes");
      DropForeignKey("dbo.RequestGroupResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RequestGroupResIndexToken", "ResourceId", "dbo.RequestGroupRes");
      DropForeignKey("dbo.RequestGroupResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RequestGroupResIndexReference", "ResourceId", "dbo.RequestGroupRes");
      DropForeignKey("dbo.RequestGroupResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RequestGroupResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.RequestGroupResIndexQuantity", "ResourceId", "dbo.RequestGroupRes");
      DropForeignKey("dbo.RequestGroupResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RequestGroupResIndexDateTime", "ResourceId", "dbo.RequestGroupRes");
      DropForeignKey("dbo.RequestGroupResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RelatedPersonResIndexUri", "ResourceId", "dbo.RelatedPersonRes");
      DropForeignKey("dbo.RelatedPersonResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RelatedPersonResIndexToken", "ResourceId", "dbo.RelatedPersonRes");
      DropForeignKey("dbo.RelatedPersonResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RelatedPersonResIndexReference", "ResourceId", "dbo.RelatedPersonRes");
      DropForeignKey("dbo.RelatedPersonResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RelatedPersonResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.RelatedPersonResIndexQuantity", "ResourceId", "dbo.RelatedPersonRes");
      DropForeignKey("dbo.RelatedPersonResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.RelatedPersonResIndexDateTime", "ResourceId", "dbo.RelatedPersonRes");
      DropForeignKey("dbo.RelatedPersonResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ReferralRequestResIndexUri", "ResourceId", "dbo.ReferralRequestRes");
      DropForeignKey("dbo.ReferralRequestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ReferralRequestResIndexToken", "ResourceId", "dbo.ReferralRequestRes");
      DropForeignKey("dbo.ReferralRequestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ReferralRequestResIndexReference", "ResourceId", "dbo.ReferralRequestRes");
      DropForeignKey("dbo.ReferralRequestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ReferralRequestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ReferralRequestResIndexQuantity", "ResourceId", "dbo.ReferralRequestRes");
      DropForeignKey("dbo.ReferralRequestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ReferralRequestResIndexDateTime", "ResourceId", "dbo.ReferralRequestRes");
      DropForeignKey("dbo.ReferralRequestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.QuestionnaireResponseResIndexUri", "ResourceId", "dbo.QuestionnaireResponseRes");
      DropForeignKey("dbo.QuestionnaireResponseResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.QuestionnaireResponseResIndexToken", "ResourceId", "dbo.QuestionnaireResponseRes");
      DropForeignKey("dbo.QuestionnaireResponseResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.QuestionnaireResponseResIndexReference", "ResourceId", "dbo.QuestionnaireResponseRes");
      DropForeignKey("dbo.QuestionnaireResponseResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.QuestionnaireResponseResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.QuestionnaireResponseResIndexQuantity", "ResourceId", "dbo.QuestionnaireResponseRes");
      DropForeignKey("dbo.QuestionnaireResponseResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.QuestionnaireResponseResIndexDateTime", "ResourceId", "dbo.QuestionnaireResponseRes");
      DropForeignKey("dbo.QuestionnaireResponseResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.QuestionnaireResIndexUri", "ResourceId", "dbo.QuestionnaireRes");
      DropForeignKey("dbo.QuestionnaireResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.QuestionnaireResIndexToken", "ResourceId", "dbo.QuestionnaireRes");
      DropForeignKey("dbo.QuestionnaireResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.QuestionnaireResIndexReference", "ResourceId", "dbo.QuestionnaireRes");
      DropForeignKey("dbo.QuestionnaireResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.QuestionnaireResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.QuestionnaireResIndexQuantity", "ResourceId", "dbo.QuestionnaireRes");
      DropForeignKey("dbo.QuestionnaireResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.QuestionnaireResIndexDateTime", "ResourceId", "dbo.QuestionnaireRes");
      DropForeignKey("dbo.QuestionnaireResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProvenanceResIndexUri", "ResourceId", "dbo.ProvenanceRes");
      DropForeignKey("dbo.ProvenanceResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProvenanceResIndexToken", "ResourceId", "dbo.ProvenanceRes");
      DropForeignKey("dbo.ProvenanceResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProvenanceResIndexReference", "ResourceId", "dbo.ProvenanceRes");
      DropForeignKey("dbo.ProvenanceResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProvenanceResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ProvenanceResIndexQuantity", "ResourceId", "dbo.ProvenanceRes");
      DropForeignKey("dbo.ProvenanceResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProvenanceResIndexDateTime", "ResourceId", "dbo.ProvenanceRes");
      DropForeignKey("dbo.ProvenanceResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcessResponseResIndexUri", "ResourceId", "dbo.ProcessResponseRes");
      DropForeignKey("dbo.ProcessResponseResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcessResponseResIndexToken", "ResourceId", "dbo.ProcessResponseRes");
      DropForeignKey("dbo.ProcessResponseResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcessResponseResIndexReference", "ResourceId", "dbo.ProcessResponseRes");
      DropForeignKey("dbo.ProcessResponseResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcessResponseResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ProcessResponseResIndexQuantity", "ResourceId", "dbo.ProcessResponseRes");
      DropForeignKey("dbo.ProcessResponseResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcessResponseResIndexDateTime", "ResourceId", "dbo.ProcessResponseRes");
      DropForeignKey("dbo.ProcessResponseResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcessRequestResIndexUri", "ResourceId", "dbo.ProcessRequestRes");
      DropForeignKey("dbo.ProcessRequestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcessRequestResIndexToken", "ResourceId", "dbo.ProcessRequestRes");
      DropForeignKey("dbo.ProcessRequestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcessRequestResIndexReference", "ResourceId", "dbo.ProcessRequestRes");
      DropForeignKey("dbo.ProcessRequestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcessRequestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ProcessRequestResIndexQuantity", "ResourceId", "dbo.ProcessRequestRes");
      DropForeignKey("dbo.ProcessRequestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcessRequestResIndexDateTime", "ResourceId", "dbo.ProcessRequestRes");
      DropForeignKey("dbo.ProcessRequestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcedureRequestResIndexUri", "ResourceId", "dbo.ProcedureRequestRes");
      DropForeignKey("dbo.ProcedureRequestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcedureRequestResIndexToken", "ResourceId", "dbo.ProcedureRequestRes");
      DropForeignKey("dbo.ProcedureRequestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcedureRequestResIndexReference", "ResourceId", "dbo.ProcedureRequestRes");
      DropForeignKey("dbo.ProcedureRequestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcedureRequestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ProcedureRequestResIndexQuantity", "ResourceId", "dbo.ProcedureRequestRes");
      DropForeignKey("dbo.ProcedureRequestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcedureRequestResIndexDateTime", "ResourceId", "dbo.ProcedureRequestRes");
      DropForeignKey("dbo.ProcedureRequestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcedureResIndexUri", "ResourceId", "dbo.ProcedureRes");
      DropForeignKey("dbo.ProcedureResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcedureResIndexToken", "ResourceId", "dbo.ProcedureRes");
      DropForeignKey("dbo.ProcedureResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcedureResIndexReference", "ResourceId", "dbo.ProcedureRes");
      DropForeignKey("dbo.ProcedureResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcedureResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ProcedureResIndexQuantity", "ResourceId", "dbo.ProcedureRes");
      DropForeignKey("dbo.ProcedureResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ProcedureResIndexDateTime", "ResourceId", "dbo.ProcedureRes");
      DropForeignKey("dbo.ProcedureResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PractitionerRoleResIndexUri", "ResourceId", "dbo.PractitionerRoleRes");
      DropForeignKey("dbo.PractitionerRoleResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PractitionerRoleResIndexToken", "ResourceId", "dbo.PractitionerRoleRes");
      DropForeignKey("dbo.PractitionerRoleResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PractitionerRoleResIndexReference", "ResourceId", "dbo.PractitionerRoleRes");
      DropForeignKey("dbo.PractitionerRoleResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PractitionerRoleResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.PractitionerRoleResIndexQuantity", "ResourceId", "dbo.PractitionerRoleRes");
      DropForeignKey("dbo.PractitionerRoleResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PractitionerRoleResIndexDateTime", "ResourceId", "dbo.PractitionerRoleRes");
      DropForeignKey("dbo.PractitionerRoleResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PractitionerResIndexUri", "ResourceId", "dbo.PractitionerRes");
      DropForeignKey("dbo.PractitionerResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PractitionerResIndexToken", "ResourceId", "dbo.PractitionerRes");
      DropForeignKey("dbo.PractitionerResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PractitionerResIndexReference", "ResourceId", "dbo.PractitionerRes");
      DropForeignKey("dbo.PractitionerResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PractitionerResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.PractitionerResIndexQuantity", "ResourceId", "dbo.PractitionerRes");
      DropForeignKey("dbo.PractitionerResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PractitionerResIndexDateTime", "ResourceId", "dbo.PractitionerRes");
      DropForeignKey("dbo.PractitionerResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PlanDefinitionResIndexUri", "ResourceId", "dbo.PlanDefinitionRes");
      DropForeignKey("dbo.PlanDefinitionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PlanDefinitionResIndexToken", "ResourceId", "dbo.PlanDefinitionRes");
      DropForeignKey("dbo.PlanDefinitionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PlanDefinitionResIndexReference", "ResourceId", "dbo.PlanDefinitionRes");
      DropForeignKey("dbo.PlanDefinitionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PlanDefinitionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.PlanDefinitionResIndexQuantity", "ResourceId", "dbo.PlanDefinitionRes");
      DropForeignKey("dbo.PlanDefinitionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PlanDefinitionResIndexDateTime", "ResourceId", "dbo.PlanDefinitionRes");
      DropForeignKey("dbo.PlanDefinitionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PersonResIndexUri", "ResourceId", "dbo.PersonRes");
      DropForeignKey("dbo.PersonResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PersonResIndexToken", "ResourceId", "dbo.PersonRes");
      DropForeignKey("dbo.PersonResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PersonResIndexReference", "ResourceId", "dbo.PersonRes");
      DropForeignKey("dbo.PersonResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PersonResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.PersonResIndexQuantity", "ResourceId", "dbo.PersonRes");
      DropForeignKey("dbo.PersonResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PersonResIndexDateTime", "ResourceId", "dbo.PersonRes");
      DropForeignKey("dbo.PersonResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PaymentReconciliationResIndexUri", "ResourceId", "dbo.PaymentReconciliationRes");
      DropForeignKey("dbo.PaymentReconciliationResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PaymentReconciliationResIndexToken", "ResourceId", "dbo.PaymentReconciliationRes");
      DropForeignKey("dbo.PaymentReconciliationResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PaymentReconciliationResIndexReference", "ResourceId", "dbo.PaymentReconciliationRes");
      DropForeignKey("dbo.PaymentReconciliationResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PaymentReconciliationResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.PaymentReconciliationResIndexQuantity", "ResourceId", "dbo.PaymentReconciliationRes");
      DropForeignKey("dbo.PaymentReconciliationResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PaymentReconciliationResIndexDateTime", "ResourceId", "dbo.PaymentReconciliationRes");
      DropForeignKey("dbo.PaymentReconciliationResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PaymentNoticeResIndexUri", "ResourceId", "dbo.PaymentNoticeRes");
      DropForeignKey("dbo.PaymentNoticeResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PaymentNoticeResIndexToken", "ResourceId", "dbo.PaymentNoticeRes");
      DropForeignKey("dbo.PaymentNoticeResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PaymentNoticeResIndexReference", "ResourceId", "dbo.PaymentNoticeRes");
      DropForeignKey("dbo.PaymentNoticeResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PaymentNoticeResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.PaymentNoticeResIndexQuantity", "ResourceId", "dbo.PaymentNoticeRes");
      DropForeignKey("dbo.PaymentNoticeResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PaymentNoticeResIndexDateTime", "ResourceId", "dbo.PaymentNoticeRes");
      DropForeignKey("dbo.PaymentNoticeResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PatientResIndexUri", "ResourceId", "dbo.PatientRes");
      DropForeignKey("dbo.PatientResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PatientResIndexToken", "ResourceId", "dbo.PatientRes");
      DropForeignKey("dbo.PatientResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PatientResIndexReference", "ResourceId", "dbo.PatientRes");
      DropForeignKey("dbo.PatientResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PatientResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.PatientResIndexQuantity", "ResourceId", "dbo.PatientRes");
      DropForeignKey("dbo.PatientResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.PatientResIndexDateTime", "ResourceId", "dbo.PatientRes");
      DropForeignKey("dbo.PatientResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ParametersResIndexUri", "ResourceId", "dbo.ParametersRes");
      DropForeignKey("dbo.ParametersResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ParametersResIndexToken", "ResourceId", "dbo.ParametersRes");
      DropForeignKey("dbo.ParametersResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ParametersResIndexReference", "ResourceId", "dbo.ParametersRes");
      DropForeignKey("dbo.ParametersResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ParametersResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ParametersResIndexQuantity", "ResourceId", "dbo.ParametersRes");
      DropForeignKey("dbo.ParametersResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ParametersResIndexDateTime", "ResourceId", "dbo.ParametersRes");
      DropForeignKey("dbo.ParametersResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OrganizationResIndexUri", "ResourceId", "dbo.OrganizationRes");
      DropForeignKey("dbo.OrganizationResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OrganizationResIndexToken", "ResourceId", "dbo.OrganizationRes");
      DropForeignKey("dbo.OrganizationResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OrganizationResIndexReference", "ResourceId", "dbo.OrganizationRes");
      DropForeignKey("dbo.OrganizationResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OrganizationResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.OrganizationResIndexQuantity", "ResourceId", "dbo.OrganizationRes");
      DropForeignKey("dbo.OrganizationResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OrganizationResIndexDateTime", "ResourceId", "dbo.OrganizationRes");
      DropForeignKey("dbo.OrganizationResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OperationOutcomeResIndexUri", "ResourceId", "dbo.OperationOutcomeRes");
      DropForeignKey("dbo.OperationOutcomeResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OperationOutcomeResIndexToken", "ResourceId", "dbo.OperationOutcomeRes");
      DropForeignKey("dbo.OperationOutcomeResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OperationOutcomeResIndexReference", "ResourceId", "dbo.OperationOutcomeRes");
      DropForeignKey("dbo.OperationOutcomeResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OperationOutcomeResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.OperationOutcomeResIndexQuantity", "ResourceId", "dbo.OperationOutcomeRes");
      DropForeignKey("dbo.OperationOutcomeResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OperationOutcomeResIndexDateTime", "ResourceId", "dbo.OperationOutcomeRes");
      DropForeignKey("dbo.OperationOutcomeResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OperationDefinitionResIndexUri", "ResourceId", "dbo.OperationDefinitionRes");
      DropForeignKey("dbo.OperationDefinitionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OperationDefinitionResIndexToken", "ResourceId", "dbo.OperationDefinitionRes");
      DropForeignKey("dbo.OperationDefinitionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OperationDefinitionResIndexReference", "ResourceId", "dbo.OperationDefinitionRes");
      DropForeignKey("dbo.OperationDefinitionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OperationDefinitionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.OperationDefinitionResIndexQuantity", "ResourceId", "dbo.OperationDefinitionRes");
      DropForeignKey("dbo.OperationDefinitionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.OperationDefinitionResIndexDateTime", "ResourceId", "dbo.OperationDefinitionRes");
      DropForeignKey("dbo.OperationDefinitionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ObservationResIndexUri", "ResourceId", "dbo.ObservationRes");
      DropForeignKey("dbo.ObservationResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ObservationResIndexToken", "ResourceId", "dbo.ObservationRes");
      DropForeignKey("dbo.ObservationResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ObservationResIndexReference", "ResourceId", "dbo.ObservationRes");
      DropForeignKey("dbo.ObservationResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ObservationResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ObservationResIndexQuantity", "ResourceId", "dbo.ObservationRes");
      DropForeignKey("dbo.ObservationResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ObservationResIndexDateTime", "ResourceId", "dbo.ObservationRes");
      DropForeignKey("dbo.ObservationResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.NutritionOrderResIndexUri", "ResourceId", "dbo.NutritionOrderRes");
      DropForeignKey("dbo.NutritionOrderResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.NutritionOrderResIndexToken", "ResourceId", "dbo.NutritionOrderRes");
      DropForeignKey("dbo.NutritionOrderResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.NutritionOrderResIndexReference", "ResourceId", "dbo.NutritionOrderRes");
      DropForeignKey("dbo.NutritionOrderResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.NutritionOrderResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.NutritionOrderResIndexQuantity", "ResourceId", "dbo.NutritionOrderRes");
      DropForeignKey("dbo.NutritionOrderResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.NutritionOrderResIndexDateTime", "ResourceId", "dbo.NutritionOrderRes");
      DropForeignKey("dbo.NutritionOrderResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.NamingSystemResIndexUri", "ResourceId", "dbo.NamingSystemRes");
      DropForeignKey("dbo.NamingSystemResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.NamingSystemResIndexToken", "ResourceId", "dbo.NamingSystemRes");
      DropForeignKey("dbo.NamingSystemResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.NamingSystemResIndexReference", "ResourceId", "dbo.NamingSystemRes");
      DropForeignKey("dbo.NamingSystemResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.NamingSystemResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.NamingSystemResIndexQuantity", "ResourceId", "dbo.NamingSystemRes");
      DropForeignKey("dbo.NamingSystemResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.NamingSystemResIndexDateTime", "ResourceId", "dbo.NamingSystemRes");
      DropForeignKey("dbo.NamingSystemResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MessageHeaderResIndexUri", "ResourceId", "dbo.MessageHeaderRes");
      DropForeignKey("dbo.MessageHeaderResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MessageHeaderResIndexToken", "ResourceId", "dbo.MessageHeaderRes");
      DropForeignKey("dbo.MessageHeaderResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MessageHeaderResIndexReference", "ResourceId", "dbo.MessageHeaderRes");
      DropForeignKey("dbo.MessageHeaderResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MessageHeaderResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.MessageHeaderResIndexQuantity", "ResourceId", "dbo.MessageHeaderRes");
      DropForeignKey("dbo.MessageHeaderResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MessageHeaderResIndexDateTime", "ResourceId", "dbo.MessageHeaderRes");
      DropForeignKey("dbo.MessageHeaderResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MessageDefinitionResIndexUri", "ResourceId", "dbo.MessageDefinitionRes");
      DropForeignKey("dbo.MessageDefinitionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MessageDefinitionResIndexToken", "ResourceId", "dbo.MessageDefinitionRes");
      DropForeignKey("dbo.MessageDefinitionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MessageDefinitionResIndexReference", "ResourceId", "dbo.MessageDefinitionRes");
      DropForeignKey("dbo.MessageDefinitionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MessageDefinitionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.MessageDefinitionResIndexQuantity", "ResourceId", "dbo.MessageDefinitionRes");
      DropForeignKey("dbo.MessageDefinitionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MessageDefinitionResIndexDateTime", "ResourceId", "dbo.MessageDefinitionRes");
      DropForeignKey("dbo.MessageDefinitionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationStatementResIndexUri", "ResourceId", "dbo.MedicationStatementRes");
      DropForeignKey("dbo.MedicationStatementResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationStatementResIndexToken", "ResourceId", "dbo.MedicationStatementRes");
      DropForeignKey("dbo.MedicationStatementResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationStatementResIndexReference", "ResourceId", "dbo.MedicationStatementRes");
      DropForeignKey("dbo.MedicationStatementResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationStatementResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.MedicationStatementResIndexQuantity", "ResourceId", "dbo.MedicationStatementRes");
      DropForeignKey("dbo.MedicationStatementResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationStatementResIndexDateTime", "ResourceId", "dbo.MedicationStatementRes");
      DropForeignKey("dbo.MedicationStatementResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationRequestResIndexUri", "ResourceId", "dbo.MedicationRequestRes");
      DropForeignKey("dbo.MedicationRequestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationRequestResIndexToken", "ResourceId", "dbo.MedicationRequestRes");
      DropForeignKey("dbo.MedicationRequestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationRequestResIndexReference", "ResourceId", "dbo.MedicationRequestRes");
      DropForeignKey("dbo.MedicationRequestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationRequestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.MedicationRequestResIndexQuantity", "ResourceId", "dbo.MedicationRequestRes");
      DropForeignKey("dbo.MedicationRequestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationRequestResIndexDateTime", "ResourceId", "dbo.MedicationRequestRes");
      DropForeignKey("dbo.MedicationRequestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationDispenseResIndexUri", "ResourceId", "dbo.MedicationDispenseRes");
      DropForeignKey("dbo.MedicationDispenseResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationDispenseResIndexToken", "ResourceId", "dbo.MedicationDispenseRes");
      DropForeignKey("dbo.MedicationDispenseResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationDispenseResIndexReference", "ResourceId", "dbo.MedicationDispenseRes");
      DropForeignKey("dbo.MedicationDispenseResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationDispenseResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.MedicationDispenseResIndexQuantity", "ResourceId", "dbo.MedicationDispenseRes");
      DropForeignKey("dbo.MedicationDispenseResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationDispenseResIndexDateTime", "ResourceId", "dbo.MedicationDispenseRes");
      DropForeignKey("dbo.MedicationDispenseResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationAdministrationResIndexUri", "ResourceId", "dbo.MedicationAdministrationRes");
      DropForeignKey("dbo.MedicationAdministrationResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationAdministrationResIndexToken", "ResourceId", "dbo.MedicationAdministrationRes");
      DropForeignKey("dbo.MedicationAdministrationResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationAdministrationResIndexReference", "ResourceId", "dbo.MedicationAdministrationRes");
      DropForeignKey("dbo.MedicationAdministrationResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationAdministrationResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.MedicationAdministrationResIndexQuantity", "ResourceId", "dbo.MedicationAdministrationRes");
      DropForeignKey("dbo.MedicationAdministrationResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationAdministrationResIndexDateTime", "ResourceId", "dbo.MedicationAdministrationRes");
      DropForeignKey("dbo.MedicationAdministrationResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationResIndexUri", "ResourceId", "dbo.MedicationRes");
      DropForeignKey("dbo.MedicationResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationResIndexToken", "ResourceId", "dbo.MedicationRes");
      DropForeignKey("dbo.MedicationResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationResIndexReference", "ResourceId", "dbo.MedicationRes");
      DropForeignKey("dbo.MedicationResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.MedicationResIndexQuantity", "ResourceId", "dbo.MedicationRes");
      DropForeignKey("dbo.MedicationResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MedicationResIndexDateTime", "ResourceId", "dbo.MedicationRes");
      DropForeignKey("dbo.MedicationResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MediaResIndexUri", "ResourceId", "dbo.MediaRes");
      DropForeignKey("dbo.MediaResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MediaResIndexToken", "ResourceId", "dbo.MediaRes");
      DropForeignKey("dbo.MediaResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MediaResIndexReference", "ResourceId", "dbo.MediaRes");
      DropForeignKey("dbo.MediaResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MediaResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.MediaResIndexQuantity", "ResourceId", "dbo.MediaRes");
      DropForeignKey("dbo.MediaResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MediaResIndexDateTime", "ResourceId", "dbo.MediaRes");
      DropForeignKey("dbo.MediaResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MeasureReportResIndexUri", "ResourceId", "dbo.MeasureReportRes");
      DropForeignKey("dbo.MeasureReportResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MeasureReportResIndexToken", "ResourceId", "dbo.MeasureReportRes");
      DropForeignKey("dbo.MeasureReportResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MeasureReportResIndexReference", "ResourceId", "dbo.MeasureReportRes");
      DropForeignKey("dbo.MeasureReportResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MeasureReportResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.MeasureReportResIndexQuantity", "ResourceId", "dbo.MeasureReportRes");
      DropForeignKey("dbo.MeasureReportResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MeasureReportResIndexDateTime", "ResourceId", "dbo.MeasureReportRes");
      DropForeignKey("dbo.MeasureReportResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MeasureResIndexUri", "ResourceId", "dbo.MeasureRes");
      DropForeignKey("dbo.MeasureResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MeasureResIndexToken", "ResourceId", "dbo.MeasureRes");
      DropForeignKey("dbo.MeasureResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MeasureResIndexReference", "ResourceId", "dbo.MeasureRes");
      DropForeignKey("dbo.MeasureResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MeasureResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.MeasureResIndexQuantity", "ResourceId", "dbo.MeasureRes");
      DropForeignKey("dbo.MeasureResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.MeasureResIndexDateTime", "ResourceId", "dbo.MeasureRes");
      DropForeignKey("dbo.MeasureResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LocationResIndexUri", "ResourceId", "dbo.LocationRes");
      DropForeignKey("dbo.LocationResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LocationResIndexToken", "ResourceId", "dbo.LocationRes");
      DropForeignKey("dbo.LocationResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LocationResIndexReference", "ResourceId", "dbo.LocationRes");
      DropForeignKey("dbo.LocationResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LocationResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.LocationResIndexQuantity", "ResourceId", "dbo.LocationRes");
      DropForeignKey("dbo.LocationResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LocationResIndexDateTime", "ResourceId", "dbo.LocationRes");
      DropForeignKey("dbo.LocationResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ListResIndexUri", "ResourceId", "dbo.ListRes");
      DropForeignKey("dbo.ListResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ListResIndexToken", "ResourceId", "dbo.ListRes");
      DropForeignKey("dbo.ListResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ListResIndexReference", "ResourceId", "dbo.ListRes");
      DropForeignKey("dbo.ListResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ListResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ListResIndexQuantity", "ResourceId", "dbo.ListRes");
      DropForeignKey("dbo.ListResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ListResIndexDateTime", "ResourceId", "dbo.ListRes");
      DropForeignKey("dbo.ListResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LinkageResIndexUri", "ResourceId", "dbo.LinkageRes");
      DropForeignKey("dbo.LinkageResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LinkageResIndexToken", "ResourceId", "dbo.LinkageRes");
      DropForeignKey("dbo.LinkageResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LinkageResIndexReference", "ResourceId", "dbo.LinkageRes");
      DropForeignKey("dbo.LinkageResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LinkageResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.LinkageResIndexQuantity", "ResourceId", "dbo.LinkageRes");
      DropForeignKey("dbo.LinkageResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LinkageResIndexDateTime", "ResourceId", "dbo.LinkageRes");
      DropForeignKey("dbo.LinkageResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LibraryResIndexUri", "ResourceId", "dbo.LibraryRes");
      DropForeignKey("dbo.LibraryResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LibraryResIndexToken", "ResourceId", "dbo.LibraryRes");
      DropForeignKey("dbo.LibraryResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LibraryResIndexReference", "ResourceId", "dbo.LibraryRes");
      DropForeignKey("dbo.LibraryResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LibraryResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.LibraryResIndexQuantity", "ResourceId", "dbo.LibraryRes");
      DropForeignKey("dbo.LibraryResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.LibraryResIndexDateTime", "ResourceId", "dbo.LibraryRes");
      DropForeignKey("dbo.LibraryResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImplementationGuideResIndexUri", "ResourceId", "dbo.ImplementationGuideRes");
      DropForeignKey("dbo.ImplementationGuideResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImplementationGuideResIndexToken", "ResourceId", "dbo.ImplementationGuideRes");
      DropForeignKey("dbo.ImplementationGuideResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImplementationGuideResIndexReference", "ResourceId", "dbo.ImplementationGuideRes");
      DropForeignKey("dbo.ImplementationGuideResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImplementationGuideResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ImplementationGuideResIndexQuantity", "ResourceId", "dbo.ImplementationGuideRes");
      DropForeignKey("dbo.ImplementationGuideResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImplementationGuideResIndexDateTime", "ResourceId", "dbo.ImplementationGuideRes");
      DropForeignKey("dbo.ImplementationGuideResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexUri", "ResourceId", "dbo.ImmunizationRecommendationRes");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexToken", "ResourceId", "dbo.ImmunizationRecommendationRes");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexReference", "ResourceId", "dbo.ImmunizationRecommendationRes");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexQuantity", "ResourceId", "dbo.ImmunizationRecommendationRes");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexDateTime", "ResourceId", "dbo.ImmunizationRecommendationRes");
      DropForeignKey("dbo.ImmunizationRecommendationResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImmunizationResIndexUri", "ResourceId", "dbo.ImmunizationRes");
      DropForeignKey("dbo.ImmunizationResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImmunizationResIndexToken", "ResourceId", "dbo.ImmunizationRes");
      DropForeignKey("dbo.ImmunizationResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImmunizationResIndexReference", "ResourceId", "dbo.ImmunizationRes");
      DropForeignKey("dbo.ImmunizationResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImmunizationResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ImmunizationResIndexQuantity", "ResourceId", "dbo.ImmunizationRes");
      DropForeignKey("dbo.ImmunizationResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImmunizationResIndexDateTime", "ResourceId", "dbo.ImmunizationRes");
      DropForeignKey("dbo.ImmunizationResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImagingStudyResIndexUri", "ResourceId", "dbo.ImagingStudyRes");
      DropForeignKey("dbo.ImagingStudyResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImagingStudyResIndexToken", "ResourceId", "dbo.ImagingStudyRes");
      DropForeignKey("dbo.ImagingStudyResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImagingStudyResIndexReference", "ResourceId", "dbo.ImagingStudyRes");
      DropForeignKey("dbo.ImagingStudyResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImagingStudyResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ImagingStudyResIndexQuantity", "ResourceId", "dbo.ImagingStudyRes");
      DropForeignKey("dbo.ImagingStudyResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImagingStudyResIndexDateTime", "ResourceId", "dbo.ImagingStudyRes");
      DropForeignKey("dbo.ImagingStudyResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImagingManifestResIndexUri", "ResourceId", "dbo.ImagingManifestRes");
      DropForeignKey("dbo.ImagingManifestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImagingManifestResIndexToken", "ResourceId", "dbo.ImagingManifestRes");
      DropForeignKey("dbo.ImagingManifestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImagingManifestResIndexReference", "ResourceId", "dbo.ImagingManifestRes");
      DropForeignKey("dbo.ImagingManifestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImagingManifestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ImagingManifestResIndexQuantity", "ResourceId", "dbo.ImagingManifestRes");
      DropForeignKey("dbo.ImagingManifestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ImagingManifestResIndexDateTime", "ResourceId", "dbo.ImagingManifestRes");
      DropForeignKey("dbo.ImagingManifestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.HealthcareServiceResIndexUri", "ResourceId", "dbo.HealthcareServiceRes");
      DropForeignKey("dbo.HealthcareServiceResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.HealthcareServiceResIndexToken", "ResourceId", "dbo.HealthcareServiceRes");
      DropForeignKey("dbo.HealthcareServiceResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.HealthcareServiceResIndexReference", "ResourceId", "dbo.HealthcareServiceRes");
      DropForeignKey("dbo.HealthcareServiceResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.HealthcareServiceResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.HealthcareServiceResIndexQuantity", "ResourceId", "dbo.HealthcareServiceRes");
      DropForeignKey("dbo.HealthcareServiceResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.HealthcareServiceResIndexDateTime", "ResourceId", "dbo.HealthcareServiceRes");
      DropForeignKey("dbo.HealthcareServiceResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GuidanceResponseResIndexUri", "ResourceId", "dbo.GuidanceResponseRes");
      DropForeignKey("dbo.GuidanceResponseResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GuidanceResponseResIndexToken", "ResourceId", "dbo.GuidanceResponseRes");
      DropForeignKey("dbo.GuidanceResponseResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GuidanceResponseResIndexReference", "ResourceId", "dbo.GuidanceResponseRes");
      DropForeignKey("dbo.GuidanceResponseResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GuidanceResponseResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.GuidanceResponseResIndexQuantity", "ResourceId", "dbo.GuidanceResponseRes");
      DropForeignKey("dbo.GuidanceResponseResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GuidanceResponseResIndexDateTime", "ResourceId", "dbo.GuidanceResponseRes");
      DropForeignKey("dbo.GuidanceResponseResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GroupResIndexUri", "ResourceId", "dbo.GroupRes");
      DropForeignKey("dbo.GroupResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GroupResIndexToken", "ResourceId", "dbo.GroupRes");
      DropForeignKey("dbo.GroupResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GroupResIndexReference", "ResourceId", "dbo.GroupRes");
      DropForeignKey("dbo.GroupResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GroupResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.GroupResIndexQuantity", "ResourceId", "dbo.GroupRes");
      DropForeignKey("dbo.GroupResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GroupResIndexDateTime", "ResourceId", "dbo.GroupRes");
      DropForeignKey("dbo.GroupResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GraphDefinitionResIndexUri", "ResourceId", "dbo.GraphDefinitionRes");
      DropForeignKey("dbo.GraphDefinitionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GraphDefinitionResIndexToken", "ResourceId", "dbo.GraphDefinitionRes");
      DropForeignKey("dbo.GraphDefinitionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GraphDefinitionResIndexReference", "ResourceId", "dbo.GraphDefinitionRes");
      DropForeignKey("dbo.GraphDefinitionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GraphDefinitionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.GraphDefinitionResIndexQuantity", "ResourceId", "dbo.GraphDefinitionRes");
      DropForeignKey("dbo.GraphDefinitionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GraphDefinitionResIndexDateTime", "ResourceId", "dbo.GraphDefinitionRes");
      DropForeignKey("dbo.GraphDefinitionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GoalResIndexUri", "ResourceId", "dbo.GoalRes");
      DropForeignKey("dbo.GoalResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GoalResIndexToken", "ResourceId", "dbo.GoalRes");
      DropForeignKey("dbo.GoalResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GoalResIndexReference", "ResourceId", "dbo.GoalRes");
      DropForeignKey("dbo.GoalResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GoalResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.GoalResIndexQuantity", "ResourceId", "dbo.GoalRes");
      DropForeignKey("dbo.GoalResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.GoalResIndexDateTime", "ResourceId", "dbo.GoalRes");
      DropForeignKey("dbo.GoalResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.FlagResIndexUri", "ResourceId", "dbo.FlagRes");
      DropForeignKey("dbo.FlagResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.FlagResIndexToken", "ResourceId", "dbo.FlagRes");
      DropForeignKey("dbo.FlagResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.FlagResIndexReference", "ResourceId", "dbo.FlagRes");
      DropForeignKey("dbo.FlagResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.FlagResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.FlagResIndexQuantity", "ResourceId", "dbo.FlagRes");
      DropForeignKey("dbo.FlagResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.FlagResIndexDateTime", "ResourceId", "dbo.FlagRes");
      DropForeignKey("dbo.FlagResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexUri", "ResourceId", "dbo.FamilyMemberHistoryRes");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexToken", "ResourceId", "dbo.FamilyMemberHistoryRes");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexReference", "ResourceId", "dbo.FamilyMemberHistoryRes");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexQuantity", "ResourceId", "dbo.FamilyMemberHistoryRes");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexDateTime", "ResourceId", "dbo.FamilyMemberHistoryRes");
      DropForeignKey("dbo.FamilyMemberHistoryResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexUri", "ResourceId", "dbo.ExplanationOfBenefitRes");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexToken", "ResourceId", "dbo.ExplanationOfBenefitRes");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexReference", "ResourceId", "dbo.ExplanationOfBenefitRes");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexQuantity", "ResourceId", "dbo.ExplanationOfBenefitRes");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexDateTime", "ResourceId", "dbo.ExplanationOfBenefitRes");
      DropForeignKey("dbo.ExplanationOfBenefitResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ExpansionProfileResIndexUri", "ResourceId", "dbo.ExpansionProfileRes");
      DropForeignKey("dbo.ExpansionProfileResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ExpansionProfileResIndexToken", "ResourceId", "dbo.ExpansionProfileRes");
      DropForeignKey("dbo.ExpansionProfileResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ExpansionProfileResIndexReference", "ResourceId", "dbo.ExpansionProfileRes");
      DropForeignKey("dbo.ExpansionProfileResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ExpansionProfileResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ExpansionProfileResIndexQuantity", "ResourceId", "dbo.ExpansionProfileRes");
      DropForeignKey("dbo.ExpansionProfileResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ExpansionProfileResIndexDateTime", "ResourceId", "dbo.ExpansionProfileRes");
      DropForeignKey("dbo.ExpansionProfileResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EpisodeOfCareResIndexUri", "ResourceId", "dbo.EpisodeOfCareRes");
      DropForeignKey("dbo.EpisodeOfCareResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EpisodeOfCareResIndexToken", "ResourceId", "dbo.EpisodeOfCareRes");
      DropForeignKey("dbo.EpisodeOfCareResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EpisodeOfCareResIndexReference", "ResourceId", "dbo.EpisodeOfCareRes");
      DropForeignKey("dbo.EpisodeOfCareResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EpisodeOfCareResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.EpisodeOfCareResIndexQuantity", "ResourceId", "dbo.EpisodeOfCareRes");
      DropForeignKey("dbo.EpisodeOfCareResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EpisodeOfCareResIndexDateTime", "ResourceId", "dbo.EpisodeOfCareRes");
      DropForeignKey("dbo.EpisodeOfCareResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EnrollmentResponseResIndexUri", "ResourceId", "dbo.EnrollmentResponseRes");
      DropForeignKey("dbo.EnrollmentResponseResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EnrollmentResponseResIndexToken", "ResourceId", "dbo.EnrollmentResponseRes");
      DropForeignKey("dbo.EnrollmentResponseResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EnrollmentResponseResIndexReference", "ResourceId", "dbo.EnrollmentResponseRes");
      DropForeignKey("dbo.EnrollmentResponseResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EnrollmentResponseResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.EnrollmentResponseResIndexQuantity", "ResourceId", "dbo.EnrollmentResponseRes");
      DropForeignKey("dbo.EnrollmentResponseResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EnrollmentResponseResIndexDateTime", "ResourceId", "dbo.EnrollmentResponseRes");
      DropForeignKey("dbo.EnrollmentResponseResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EnrollmentRequestResIndexUri", "ResourceId", "dbo.EnrollmentRequestRes");
      DropForeignKey("dbo.EnrollmentRequestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EnrollmentRequestResIndexToken", "ResourceId", "dbo.EnrollmentRequestRes");
      DropForeignKey("dbo.EnrollmentRequestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EnrollmentRequestResIndexReference", "ResourceId", "dbo.EnrollmentRequestRes");
      DropForeignKey("dbo.EnrollmentRequestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EnrollmentRequestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.EnrollmentRequestResIndexQuantity", "ResourceId", "dbo.EnrollmentRequestRes");
      DropForeignKey("dbo.EnrollmentRequestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EnrollmentRequestResIndexDateTime", "ResourceId", "dbo.EnrollmentRequestRes");
      DropForeignKey("dbo.EnrollmentRequestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EndpointResIndexUri", "ResourceId", "dbo.EndpointRes");
      DropForeignKey("dbo.EndpointResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EndpointResIndexToken", "ResourceId", "dbo.EndpointRes");
      DropForeignKey("dbo.EndpointResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EndpointResIndexReference", "ResourceId", "dbo.EndpointRes");
      DropForeignKey("dbo.EndpointResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EndpointResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.EndpointResIndexQuantity", "ResourceId", "dbo.EndpointRes");
      DropForeignKey("dbo.EndpointResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EndpointResIndexDateTime", "ResourceId", "dbo.EndpointRes");
      DropForeignKey("dbo.EndpointResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EncounterResIndexUri", "ResourceId", "dbo.EncounterRes");
      DropForeignKey("dbo.EncounterResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EncounterResIndexToken", "ResourceId", "dbo.EncounterRes");
      DropForeignKey("dbo.EncounterResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EncounterResIndexReference", "ResourceId", "dbo.EncounterRes");
      DropForeignKey("dbo.EncounterResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EncounterResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.EncounterResIndexQuantity", "ResourceId", "dbo.EncounterRes");
      DropForeignKey("dbo.EncounterResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EncounterResIndexDateTime", "ResourceId", "dbo.EncounterRes");
      DropForeignKey("dbo.EncounterResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EligibilityResponseResIndexUri", "ResourceId", "dbo.EligibilityResponseRes");
      DropForeignKey("dbo.EligibilityResponseResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EligibilityResponseResIndexToken", "ResourceId", "dbo.EligibilityResponseRes");
      DropForeignKey("dbo.EligibilityResponseResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EligibilityResponseResIndexReference", "ResourceId", "dbo.EligibilityResponseRes");
      DropForeignKey("dbo.EligibilityResponseResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EligibilityResponseResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.EligibilityResponseResIndexQuantity", "ResourceId", "dbo.EligibilityResponseRes");
      DropForeignKey("dbo.EligibilityResponseResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EligibilityResponseResIndexDateTime", "ResourceId", "dbo.EligibilityResponseRes");
      DropForeignKey("dbo.EligibilityResponseResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EligibilityRequestResIndexUri", "ResourceId", "dbo.EligibilityRequestRes");
      DropForeignKey("dbo.EligibilityRequestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EligibilityRequestResIndexToken", "ResourceId", "dbo.EligibilityRequestRes");
      DropForeignKey("dbo.EligibilityRequestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EligibilityRequestResIndexReference", "ResourceId", "dbo.EligibilityRequestRes");
      DropForeignKey("dbo.EligibilityRequestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EligibilityRequestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.EligibilityRequestResIndexQuantity", "ResourceId", "dbo.EligibilityRequestRes");
      DropForeignKey("dbo.EligibilityRequestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.EligibilityRequestResIndexDateTime", "ResourceId", "dbo.EligibilityRequestRes");
      DropForeignKey("dbo.EligibilityRequestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DocumentReferenceResIndexUri", "ResourceId", "dbo.DocumentReferenceRes");
      DropForeignKey("dbo.DocumentReferenceResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DocumentReferenceResIndexToken", "ResourceId", "dbo.DocumentReferenceRes");
      DropForeignKey("dbo.DocumentReferenceResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DocumentReferenceResIndexReference", "ResourceId", "dbo.DocumentReferenceRes");
      DropForeignKey("dbo.DocumentReferenceResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DocumentReferenceResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.DocumentReferenceResIndexQuantity", "ResourceId", "dbo.DocumentReferenceRes");
      DropForeignKey("dbo.DocumentReferenceResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DocumentReferenceResIndexDateTime", "ResourceId", "dbo.DocumentReferenceRes");
      DropForeignKey("dbo.DocumentReferenceResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DocumentManifestResIndexUri", "ResourceId", "dbo.DocumentManifestRes");
      DropForeignKey("dbo.DocumentManifestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DocumentManifestResIndexToken", "ResourceId", "dbo.DocumentManifestRes");
      DropForeignKey("dbo.DocumentManifestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DocumentManifestResIndexReference", "ResourceId", "dbo.DocumentManifestRes");
      DropForeignKey("dbo.DocumentManifestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DocumentManifestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.DocumentManifestResIndexQuantity", "ResourceId", "dbo.DocumentManifestRes");
      DropForeignKey("dbo.DocumentManifestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DocumentManifestResIndexDateTime", "ResourceId", "dbo.DocumentManifestRes");
      DropForeignKey("dbo.DocumentManifestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DiagnosticReportResIndexUri", "ResourceId", "dbo.DiagnosticReportRes");
      DropForeignKey("dbo.DiagnosticReportResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DiagnosticReportResIndexToken", "ResourceId", "dbo.DiagnosticReportRes");
      DropForeignKey("dbo.DiagnosticReportResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DiagnosticReportResIndexReference", "ResourceId", "dbo.DiagnosticReportRes");
      DropForeignKey("dbo.DiagnosticReportResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DiagnosticReportResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.DiagnosticReportResIndexQuantity", "ResourceId", "dbo.DiagnosticReportRes");
      DropForeignKey("dbo.DiagnosticReportResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DiagnosticReportResIndexDateTime", "ResourceId", "dbo.DiagnosticReportRes");
      DropForeignKey("dbo.DiagnosticReportResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceUseStatementResIndexUri", "ResourceId", "dbo.DeviceUseStatementRes");
      DropForeignKey("dbo.DeviceUseStatementResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceUseStatementResIndexToken", "ResourceId", "dbo.DeviceUseStatementRes");
      DropForeignKey("dbo.DeviceUseStatementResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceUseStatementResIndexReference", "ResourceId", "dbo.DeviceUseStatementRes");
      DropForeignKey("dbo.DeviceUseStatementResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceUseStatementResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.DeviceUseStatementResIndexQuantity", "ResourceId", "dbo.DeviceUseStatementRes");
      DropForeignKey("dbo.DeviceUseStatementResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceUseStatementResIndexDateTime", "ResourceId", "dbo.DeviceUseStatementRes");
      DropForeignKey("dbo.DeviceUseStatementResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceRequestResIndexUri", "ResourceId", "dbo.DeviceRequestRes");
      DropForeignKey("dbo.DeviceRequestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceRequestResIndexToken", "ResourceId", "dbo.DeviceRequestRes");
      DropForeignKey("dbo.DeviceRequestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceRequestResIndexReference", "ResourceId", "dbo.DeviceRequestRes");
      DropForeignKey("dbo.DeviceRequestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceRequestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.DeviceRequestResIndexQuantity", "ResourceId", "dbo.DeviceRequestRes");
      DropForeignKey("dbo.DeviceRequestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceRequestResIndexDateTime", "ResourceId", "dbo.DeviceRequestRes");
      DropForeignKey("dbo.DeviceRequestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceMetricResIndexUri", "ResourceId", "dbo.DeviceMetricRes");
      DropForeignKey("dbo.DeviceMetricResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceMetricResIndexToken", "ResourceId", "dbo.DeviceMetricRes");
      DropForeignKey("dbo.DeviceMetricResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceMetricResIndexReference", "ResourceId", "dbo.DeviceMetricRes");
      DropForeignKey("dbo.DeviceMetricResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceMetricResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.DeviceMetricResIndexQuantity", "ResourceId", "dbo.DeviceMetricRes");
      DropForeignKey("dbo.DeviceMetricResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceMetricResIndexDateTime", "ResourceId", "dbo.DeviceMetricRes");
      DropForeignKey("dbo.DeviceMetricResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceComponentResIndexUri", "ResourceId", "dbo.DeviceComponentRes");
      DropForeignKey("dbo.DeviceComponentResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceComponentResIndexToken", "ResourceId", "dbo.DeviceComponentRes");
      DropForeignKey("dbo.DeviceComponentResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceComponentResIndexReference", "ResourceId", "dbo.DeviceComponentRes");
      DropForeignKey("dbo.DeviceComponentResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceComponentResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.DeviceComponentResIndexQuantity", "ResourceId", "dbo.DeviceComponentRes");
      DropForeignKey("dbo.DeviceComponentResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceComponentResIndexDateTime", "ResourceId", "dbo.DeviceComponentRes");
      DropForeignKey("dbo.DeviceComponentResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceResIndexUri", "ResourceId", "dbo.DeviceRes");
      DropForeignKey("dbo.DeviceResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceResIndexToken", "ResourceId", "dbo.DeviceRes");
      DropForeignKey("dbo.DeviceResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceResIndexReference", "ResourceId", "dbo.DeviceRes");
      DropForeignKey("dbo.DeviceResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.DeviceResIndexQuantity", "ResourceId", "dbo.DeviceRes");
      DropForeignKey("dbo.DeviceResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DeviceResIndexDateTime", "ResourceId", "dbo.DeviceRes");
      DropForeignKey("dbo.DeviceResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DetectedIssueResIndexUri", "ResourceId", "dbo.DetectedIssueRes");
      DropForeignKey("dbo.DetectedIssueResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DetectedIssueResIndexToken", "ResourceId", "dbo.DetectedIssueRes");
      DropForeignKey("dbo.DetectedIssueResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DetectedIssueResIndexReference", "ResourceId", "dbo.DetectedIssueRes");
      DropForeignKey("dbo.DetectedIssueResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DetectedIssueResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.DetectedIssueResIndexQuantity", "ResourceId", "dbo.DetectedIssueRes");
      DropForeignKey("dbo.DetectedIssueResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DetectedIssueResIndexDateTime", "ResourceId", "dbo.DetectedIssueRes");
      DropForeignKey("dbo.DetectedIssueResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DataElementResIndexUri", "ResourceId", "dbo.DataElementRes");
      DropForeignKey("dbo.DataElementResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DataElementResIndexToken", "ResourceId", "dbo.DataElementRes");
      DropForeignKey("dbo.DataElementResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DataElementResIndexReference", "ResourceId", "dbo.DataElementRes");
      DropForeignKey("dbo.DataElementResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DataElementResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.DataElementResIndexQuantity", "ResourceId", "dbo.DataElementRes");
      DropForeignKey("dbo.DataElementResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.DataElementResIndexDateTime", "ResourceId", "dbo.DataElementRes");
      DropForeignKey("dbo.DataElementResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CoverageResIndexUri", "ResourceId", "dbo.CoverageRes");
      DropForeignKey("dbo.CoverageResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CoverageResIndexToken", "ResourceId", "dbo.CoverageRes");
      DropForeignKey("dbo.CoverageResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CoverageResIndexReference", "ResourceId", "dbo.CoverageRes");
      DropForeignKey("dbo.CoverageResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CoverageResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.CoverageResIndexQuantity", "ResourceId", "dbo.CoverageRes");
      DropForeignKey("dbo.CoverageResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CoverageResIndexDateTime", "ResourceId", "dbo.CoverageRes");
      DropForeignKey("dbo.CoverageResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ContractResIndexUri", "ResourceId", "dbo.ContractRes");
      DropForeignKey("dbo.ContractResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ContractResIndexToken", "ResourceId", "dbo.ContractRes");
      DropForeignKey("dbo.ContractResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ContractResIndexReference", "ResourceId", "dbo.ContractRes");
      DropForeignKey("dbo.ContractResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ContractResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ContractResIndexQuantity", "ResourceId", "dbo.ContractRes");
      DropForeignKey("dbo.ContractResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ContractResIndexDateTime", "ResourceId", "dbo.ContractRes");
      DropForeignKey("dbo.ContractResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConsentResIndexUri", "ResourceId", "dbo.ConsentRes");
      DropForeignKey("dbo.ConsentResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConsentResIndexToken", "ResourceId", "dbo.ConsentRes");
      DropForeignKey("dbo.ConsentResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConsentResIndexReference", "ResourceId", "dbo.ConsentRes");
      DropForeignKey("dbo.ConsentResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConsentResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ConsentResIndexQuantity", "ResourceId", "dbo.ConsentRes");
      DropForeignKey("dbo.ConsentResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConsentResIndexDateTime", "ResourceId", "dbo.ConsentRes");
      DropForeignKey("dbo.ConsentResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConditionResIndexUri", "ResourceId", "dbo.ConditionRes");
      DropForeignKey("dbo.ConditionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConditionResIndexToken", "ResourceId", "dbo.ConditionRes");
      DropForeignKey("dbo.ConditionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConditionResIndexReference", "ResourceId", "dbo.ConditionRes");
      DropForeignKey("dbo.ConditionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConditionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ConditionResIndexQuantity", "ResourceId", "dbo.ConditionRes");
      DropForeignKey("dbo.ConditionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConditionResIndexDateTime", "ResourceId", "dbo.ConditionRes");
      DropForeignKey("dbo.ConditionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConceptMapResIndexUri", "ResourceId", "dbo.ConceptMapRes");
      DropForeignKey("dbo.ConceptMapResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConceptMapResIndexToken", "ResourceId", "dbo.ConceptMapRes");
      DropForeignKey("dbo.ConceptMapResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConceptMapResIndexReference", "ResourceId", "dbo.ConceptMapRes");
      DropForeignKey("dbo.ConceptMapResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConceptMapResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ConceptMapResIndexQuantity", "ResourceId", "dbo.ConceptMapRes");
      DropForeignKey("dbo.ConceptMapResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ConceptMapResIndexDateTime", "ResourceId", "dbo.ConceptMapRes");
      DropForeignKey("dbo.ConceptMapResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CompositionResIndexUri", "ResourceId", "dbo.CompositionRes");
      DropForeignKey("dbo.CompositionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CompositionResIndexToken", "ResourceId", "dbo.CompositionRes");
      DropForeignKey("dbo.CompositionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CompositionResIndexReference", "ResourceId", "dbo.CompositionRes");
      DropForeignKey("dbo.CompositionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CompositionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.CompositionResIndexQuantity", "ResourceId", "dbo.CompositionRes");
      DropForeignKey("dbo.CompositionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CompositionResIndexDateTime", "ResourceId", "dbo.CompositionRes");
      DropForeignKey("dbo.CompositionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CompartmentDefinitionResIndexUri", "ResourceId", "dbo.CompartmentDefinitionRes");
      DropForeignKey("dbo.CompartmentDefinitionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CompartmentDefinitionResIndexToken", "ResourceId", "dbo.CompartmentDefinitionRes");
      DropForeignKey("dbo.CompartmentDefinitionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CompartmentDefinitionResIndexReference", "ResourceId", "dbo.CompartmentDefinitionRes");
      DropForeignKey("dbo.CompartmentDefinitionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CompartmentDefinitionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.CompartmentDefinitionResIndexQuantity", "ResourceId", "dbo.CompartmentDefinitionRes");
      DropForeignKey("dbo.CompartmentDefinitionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CompartmentDefinitionResIndexDateTime", "ResourceId", "dbo.CompartmentDefinitionRes");
      DropForeignKey("dbo.CompartmentDefinitionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CommunicationRequestResIndexUri", "ResourceId", "dbo.CommunicationRequestRes");
      DropForeignKey("dbo.CommunicationRequestResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CommunicationRequestResIndexToken", "ResourceId", "dbo.CommunicationRequestRes");
      DropForeignKey("dbo.CommunicationRequestResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CommunicationRequestResIndexReference", "ResourceId", "dbo.CommunicationRequestRes");
      DropForeignKey("dbo.CommunicationRequestResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CommunicationRequestResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.CommunicationRequestResIndexQuantity", "ResourceId", "dbo.CommunicationRequestRes");
      DropForeignKey("dbo.CommunicationRequestResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CommunicationRequestResIndexDateTime", "ResourceId", "dbo.CommunicationRequestRes");
      DropForeignKey("dbo.CommunicationRequestResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CommunicationResIndexUri", "ResourceId", "dbo.CommunicationRes");
      DropForeignKey("dbo.CommunicationResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CommunicationResIndexToken", "ResourceId", "dbo.CommunicationRes");
      DropForeignKey("dbo.CommunicationResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CommunicationResIndexReference", "ResourceId", "dbo.CommunicationRes");
      DropForeignKey("dbo.CommunicationResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CommunicationResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.CommunicationResIndexQuantity", "ResourceId", "dbo.CommunicationRes");
      DropForeignKey("dbo.CommunicationResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CommunicationResIndexDateTime", "ResourceId", "dbo.CommunicationRes");
      DropForeignKey("dbo.CommunicationResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CodeSystemResIndexUri", "ResourceId", "dbo.CodeSystemRes");
      DropForeignKey("dbo.CodeSystemResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CodeSystemResIndexToken", "ResourceId", "dbo.CodeSystemRes");
      DropForeignKey("dbo.CodeSystemResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CodeSystemResIndexReference", "ResourceId", "dbo.CodeSystemRes");
      DropForeignKey("dbo.CodeSystemResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CodeSystemResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.CodeSystemResIndexQuantity", "ResourceId", "dbo.CodeSystemRes");
      DropForeignKey("dbo.CodeSystemResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CodeSystemResIndexDateTime", "ResourceId", "dbo.CodeSystemRes");
      DropForeignKey("dbo.CodeSystemResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClinicalImpressionResIndexUri", "ResourceId", "dbo.ClinicalImpressionRes");
      DropForeignKey("dbo.ClinicalImpressionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClinicalImpressionResIndexToken", "ResourceId", "dbo.ClinicalImpressionRes");
      DropForeignKey("dbo.ClinicalImpressionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClinicalImpressionResIndexReference", "ResourceId", "dbo.ClinicalImpressionRes");
      DropForeignKey("dbo.ClinicalImpressionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClinicalImpressionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ClinicalImpressionResIndexQuantity", "ResourceId", "dbo.ClinicalImpressionRes");
      DropForeignKey("dbo.ClinicalImpressionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClinicalImpressionResIndexDateTime", "ResourceId", "dbo.ClinicalImpressionRes");
      DropForeignKey("dbo.ClinicalImpressionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClaimResponseResIndexUri", "ResourceId", "dbo.ClaimResponseRes");
      DropForeignKey("dbo.ClaimResponseResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClaimResponseResIndexToken", "ResourceId", "dbo.ClaimResponseRes");
      DropForeignKey("dbo.ClaimResponseResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClaimResponseResIndexReference", "ResourceId", "dbo.ClaimResponseRes");
      DropForeignKey("dbo.ClaimResponseResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClaimResponseResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ClaimResponseResIndexQuantity", "ResourceId", "dbo.ClaimResponseRes");
      DropForeignKey("dbo.ClaimResponseResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClaimResponseResIndexDateTime", "ResourceId", "dbo.ClaimResponseRes");
      DropForeignKey("dbo.ClaimResponseResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClaimResIndexUri", "ResourceId", "dbo.ClaimRes");
      DropForeignKey("dbo.ClaimResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClaimResIndexToken", "ResourceId", "dbo.ClaimRes");
      DropForeignKey("dbo.ClaimResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClaimResIndexReference", "ResourceId", "dbo.ClaimRes");
      DropForeignKey("dbo.ClaimResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClaimResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ClaimResIndexQuantity", "ResourceId", "dbo.ClaimRes");
      DropForeignKey("dbo.ClaimResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ClaimResIndexDateTime", "ResourceId", "dbo.ClaimRes");
      DropForeignKey("dbo.ClaimResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ChargeItemResIndexUri", "ResourceId", "dbo.ChargeItemRes");
      DropForeignKey("dbo.ChargeItemResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ChargeItemResIndexToken", "ResourceId", "dbo.ChargeItemRes");
      DropForeignKey("dbo.ChargeItemResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ChargeItemResIndexReference", "ResourceId", "dbo.ChargeItemRes");
      DropForeignKey("dbo.ChargeItemResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ChargeItemResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ChargeItemResIndexQuantity", "ResourceId", "dbo.ChargeItemRes");
      DropForeignKey("dbo.ChargeItemResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ChargeItemResIndexDateTime", "ResourceId", "dbo.ChargeItemRes");
      DropForeignKey("dbo.ChargeItemResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CareTeamResIndexUri", "ResourceId", "dbo.CareTeamRes");
      DropForeignKey("dbo.CareTeamResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CareTeamResIndexToken", "ResourceId", "dbo.CareTeamRes");
      DropForeignKey("dbo.CareTeamResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CareTeamResIndexReference", "ResourceId", "dbo.CareTeamRes");
      DropForeignKey("dbo.CareTeamResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CareTeamResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.CareTeamResIndexQuantity", "ResourceId", "dbo.CareTeamRes");
      DropForeignKey("dbo.CareTeamResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CareTeamResIndexDateTime", "ResourceId", "dbo.CareTeamRes");
      DropForeignKey("dbo.CareTeamResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CarePlanResIndexUri", "ResourceId", "dbo.CarePlanRes");
      DropForeignKey("dbo.CarePlanResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CarePlanResIndexToken", "ResourceId", "dbo.CarePlanRes");
      DropForeignKey("dbo.CarePlanResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CarePlanResIndexReference", "ResourceId", "dbo.CarePlanRes");
      DropForeignKey("dbo.CarePlanResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CarePlanResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.CarePlanResIndexQuantity", "ResourceId", "dbo.CarePlanRes");
      DropForeignKey("dbo.CarePlanResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CarePlanResIndexDateTime", "ResourceId", "dbo.CarePlanRes");
      DropForeignKey("dbo.CarePlanResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CapabilityStatementResIndexUri", "ResourceId", "dbo.CapabilityStatementRes");
      DropForeignKey("dbo.CapabilityStatementResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CapabilityStatementResIndexToken", "ResourceId", "dbo.CapabilityStatementRes");
      DropForeignKey("dbo.CapabilityStatementResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CapabilityStatementResIndexReference", "ResourceId", "dbo.CapabilityStatementRes");
      DropForeignKey("dbo.CapabilityStatementResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CapabilityStatementResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.CapabilityStatementResIndexQuantity", "ResourceId", "dbo.CapabilityStatementRes");
      DropForeignKey("dbo.CapabilityStatementResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.CapabilityStatementResIndexDateTime", "ResourceId", "dbo.CapabilityStatementRes");
      DropForeignKey("dbo.CapabilityStatementResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BundleResIndexUri", "ResourceId", "dbo.BundleRes");
      DropForeignKey("dbo.BundleResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BundleResIndexToken", "ResourceId", "dbo.BundleRes");
      DropForeignKey("dbo.BundleResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BundleResIndexReference", "ResourceId", "dbo.BundleRes");
      DropForeignKey("dbo.BundleResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BundleResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.BundleResIndexQuantity", "ResourceId", "dbo.BundleRes");
      DropForeignKey("dbo.BundleResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BundleResIndexDateTime", "ResourceId", "dbo.BundleRes");
      DropForeignKey("dbo.BundleResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BodySiteResIndexUri", "ResourceId", "dbo.BodySiteRes");
      DropForeignKey("dbo.BodySiteResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BodySiteResIndexToken", "ResourceId", "dbo.BodySiteRes");
      DropForeignKey("dbo.BodySiteResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BodySiteResIndexReference", "ResourceId", "dbo.BodySiteRes");
      DropForeignKey("dbo.BodySiteResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BodySiteResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.BodySiteResIndexQuantity", "ResourceId", "dbo.BodySiteRes");
      DropForeignKey("dbo.BodySiteResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BodySiteResIndexDateTime", "ResourceId", "dbo.BodySiteRes");
      DropForeignKey("dbo.BodySiteResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BinaryResIndexUri", "ResourceId", "dbo.BinaryRes");
      DropForeignKey("dbo.BinaryResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BinaryResIndexToken", "ResourceId", "dbo.BinaryRes");
      DropForeignKey("dbo.BinaryResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BinaryResIndexReference", "ResourceId", "dbo.BinaryRes");
      DropForeignKey("dbo.BinaryResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BinaryResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.BinaryResIndexQuantity", "ResourceId", "dbo.BinaryRes");
      DropForeignKey("dbo.BinaryResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BinaryResIndexDateTime", "ResourceId", "dbo.BinaryRes");
      DropForeignKey("dbo.BinaryResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BasicResIndexUri", "ResourceId", "dbo.BasicRes");
      DropForeignKey("dbo.BasicResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BasicResIndexToken", "ResourceId", "dbo.BasicRes");
      DropForeignKey("dbo.BasicResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BasicResIndexReference", "ResourceId", "dbo.BasicRes");
      DropForeignKey("dbo.BasicResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BasicResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.BasicResIndexQuantity", "ResourceId", "dbo.BasicRes");
      DropForeignKey("dbo.BasicResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.BasicResIndexDateTime", "ResourceId", "dbo.BasicRes");
      DropForeignKey("dbo.BasicResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AuditEventResIndexUri", "ResourceId", "dbo.AuditEventRes");
      DropForeignKey("dbo.AuditEventResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AuditEventResIndexToken", "ResourceId", "dbo.AuditEventRes");
      DropForeignKey("dbo.AuditEventResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AuditEventResIndexReference", "ResourceId", "dbo.AuditEventRes");
      DropForeignKey("dbo.AuditEventResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AuditEventResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.AuditEventResIndexQuantity", "ResourceId", "dbo.AuditEventRes");
      DropForeignKey("dbo.AuditEventResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AuditEventResIndexDateTime", "ResourceId", "dbo.AuditEventRes");
      DropForeignKey("dbo.AuditEventResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AppointmentResponseResIndexUri", "ResourceId", "dbo.AppointmentResponseRes");
      DropForeignKey("dbo.AppointmentResponseResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AppointmentResponseResIndexToken", "ResourceId", "dbo.AppointmentResponseRes");
      DropForeignKey("dbo.AppointmentResponseResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AppointmentResponseResIndexReference", "ResourceId", "dbo.AppointmentResponseRes");
      DropForeignKey("dbo.AppointmentResponseResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AppointmentResponseResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.AppointmentResponseResIndexQuantity", "ResourceId", "dbo.AppointmentResponseRes");
      DropForeignKey("dbo.AppointmentResponseResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AppointmentResponseResIndexDateTime", "ResourceId", "dbo.AppointmentResponseRes");
      DropForeignKey("dbo.AppointmentResponseResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AppointmentResIndexUri", "ResourceId", "dbo.AppointmentRes");
      DropForeignKey("dbo.AppointmentResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AppointmentResIndexToken", "ResourceId", "dbo.AppointmentRes");
      DropForeignKey("dbo.AppointmentResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AppointmentResIndexReference", "ResourceId", "dbo.AppointmentRes");
      DropForeignKey("dbo.AppointmentResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AppointmentResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.AppointmentResIndexQuantity", "ResourceId", "dbo.AppointmentRes");
      DropForeignKey("dbo.AppointmentResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AppointmentResIndexDateTime", "ResourceId", "dbo.AppointmentRes");
      DropForeignKey("dbo.AppointmentResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AllergyIntoleranceResIndexUri", "ResourceId", "dbo.AllergyIntoleranceRes");
      DropForeignKey("dbo.AllergyIntoleranceResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AllergyIntoleranceResIndexToken", "ResourceId", "dbo.AllergyIntoleranceRes");
      DropForeignKey("dbo.AllergyIntoleranceResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AllergyIntoleranceResIndexReference", "ResourceId", "dbo.AllergyIntoleranceRes");
      DropForeignKey("dbo.AllergyIntoleranceResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AllergyIntoleranceResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.AllergyIntoleranceResIndexQuantity", "ResourceId", "dbo.AllergyIntoleranceRes");
      DropForeignKey("dbo.AllergyIntoleranceResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AllergyIntoleranceResIndexDateTime", "ResourceId", "dbo.AllergyIntoleranceRes");
      DropForeignKey("dbo.AllergyIntoleranceResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AdverseEventResIndexUri", "ResourceId", "dbo.AdverseEventRes");
      DropForeignKey("dbo.AdverseEventResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AdverseEventResIndexToken", "ResourceId", "dbo.AdverseEventRes");
      DropForeignKey("dbo.AdverseEventResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AdverseEventResIndexReference", "ResourceId", "dbo.AdverseEventRes");
      DropForeignKey("dbo.AdverseEventResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AdverseEventResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.AdverseEventResIndexQuantity", "ResourceId", "dbo.AdverseEventRes");
      DropForeignKey("dbo.AdverseEventResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AdverseEventResIndexDateTime", "ResourceId", "dbo.AdverseEventRes");
      DropForeignKey("dbo.AdverseEventResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ActivityDefinitionResIndexUri", "ResourceId", "dbo.ActivityDefinitionRes");
      DropForeignKey("dbo.ActivityDefinitionResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ActivityDefinitionResIndexToken", "ResourceId", "dbo.ActivityDefinitionRes");
      DropForeignKey("dbo.ActivityDefinitionResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ActivityDefinitionResIndexReference", "ResourceId", "dbo.ActivityDefinitionRes");
      DropForeignKey("dbo.ActivityDefinitionResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ActivityDefinitionResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.ActivityDefinitionResIndexQuantity", "ResourceId", "dbo.ActivityDefinitionRes");
      DropForeignKey("dbo.ActivityDefinitionResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.ActivityDefinitionResIndexDateTime", "ResourceId", "dbo.ActivityDefinitionRes");
      DropForeignKey("dbo.ActivityDefinitionResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AccountResIndexUri", "ResourceId", "dbo.AccountRes");
      DropForeignKey("dbo.AccountResIndexUri", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AccountResIndexToken", "ResourceId", "dbo.AccountRes");
      DropForeignKey("dbo.AccountResIndexToken", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AccountResIndexReference", "ResourceId", "dbo.AccountRes");
      DropForeignKey("dbo.AccountResIndexReference", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AccountResIndexReference", "ReferenceServiceBaseUrlId", "dbo.ServiceBaseUrl");
      DropForeignKey("dbo.AccountResIndexQuantity", "ResourceId", "dbo.AccountRes");
      DropForeignKey("dbo.AccountResIndexQuantity", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropForeignKey("dbo.AccountResIndexDateTime", "ResourceId", "dbo.AccountRes");
      DropForeignKey("dbo.AccountResIndexDateTime", "ServiceSearchParameterId", "dbo.ServiceSearchParameter");
      DropIndex("dbo.VisionPrescriptionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.VisionPrescriptionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.VisionPrescriptionResIndexUri", "ix_Uri");
      DropIndex("dbo.VisionPrescriptionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.VisionPrescriptionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.VisionPrescriptionResIndexToken", "ix_System");
      DropIndex("dbo.VisionPrescriptionResIndexToken", "ix_Code");
      DropIndex("dbo.VisionPrescriptionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.VisionPrescriptionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.VisionPrescriptionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.VisionPrescriptionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.VisionPrescriptionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.VisionPrescriptionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.VisionPrescriptionResIndexQuantity", "ix_System");
      DropIndex("dbo.VisionPrescriptionResIndexQuantity", "ix_Code");
      DropIndex("dbo.VisionPrescriptionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.VisionPrescriptionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.VisionPrescriptionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.VisionPrescriptionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ValueSetResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ValueSetResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ValueSetResIndexUri", "ix_Uri");
      DropIndex("dbo.ValueSetResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ValueSetResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ValueSetResIndexToken", "ix_System");
      DropIndex("dbo.ValueSetResIndexToken", "ix_Code");
      DropIndex("dbo.ValueSetResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ValueSetResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ValueSetResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ValueSetResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ValueSetResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ValueSetResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ValueSetResIndexQuantity", "ix_System");
      DropIndex("dbo.ValueSetResIndexQuantity", "ix_Code");
      DropIndex("dbo.ValueSetResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ValueSetResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ValueSetResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ValueSetResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.TestScriptResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.TestScriptResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TestScriptResIndexUri", "ix_Uri");
      DropIndex("dbo.TestScriptResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.TestScriptResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TestScriptResIndexToken", "ix_System");
      DropIndex("dbo.TestScriptResIndexToken", "ix_Code");
      DropIndex("dbo.TestScriptResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.TestScriptResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TestScriptResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.TestScriptResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.TestScriptResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.TestScriptResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TestScriptResIndexQuantity", "ix_System");
      DropIndex("dbo.TestScriptResIndexQuantity", "ix_Code");
      DropIndex("dbo.TestScriptResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.TestScriptResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TestScriptResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.TestScriptResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.TestReportResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.TestReportResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TestReportResIndexUri", "ix_Uri");
      DropIndex("dbo.TestReportResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.TestReportResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TestReportResIndexToken", "ix_System");
      DropIndex("dbo.TestReportResIndexToken", "ix_Code");
      DropIndex("dbo.TestReportResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.TestReportResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TestReportResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.TestReportResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.TestReportResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.TestReportResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TestReportResIndexQuantity", "ix_System");
      DropIndex("dbo.TestReportResIndexQuantity", "ix_Code");
      DropIndex("dbo.TestReportResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.TestReportResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TestReportResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.TestReportResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.TaskResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.TaskResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TaskResIndexUri", "ix_Uri");
      DropIndex("dbo.TaskResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.TaskResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TaskResIndexToken", "ix_System");
      DropIndex("dbo.TaskResIndexToken", "ix_Code");
      DropIndex("dbo.TaskResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.TaskResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TaskResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.TaskResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.TaskResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.TaskResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TaskResIndexQuantity", "ix_System");
      DropIndex("dbo.TaskResIndexQuantity", "ix_Code");
      DropIndex("dbo.TaskResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.TaskResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.TaskResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.TaskResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.SupplyRequestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.SupplyRequestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SupplyRequestResIndexUri", "ix_Uri");
      DropIndex("dbo.SupplyRequestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.SupplyRequestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SupplyRequestResIndexToken", "ix_System");
      DropIndex("dbo.SupplyRequestResIndexToken", "ix_Code");
      DropIndex("dbo.SupplyRequestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.SupplyRequestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SupplyRequestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.SupplyRequestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.SupplyRequestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.SupplyRequestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SupplyRequestResIndexQuantity", "ix_System");
      DropIndex("dbo.SupplyRequestResIndexQuantity", "ix_Code");
      DropIndex("dbo.SupplyRequestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.SupplyRequestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SupplyRequestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.SupplyRequestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.SupplyDeliveryResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.SupplyDeliveryResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SupplyDeliveryResIndexUri", "ix_Uri");
      DropIndex("dbo.SupplyDeliveryResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.SupplyDeliveryResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SupplyDeliveryResIndexToken", "ix_System");
      DropIndex("dbo.SupplyDeliveryResIndexToken", "ix_Code");
      DropIndex("dbo.SupplyDeliveryResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.SupplyDeliveryResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SupplyDeliveryResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.SupplyDeliveryResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.SupplyDeliveryResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.SupplyDeliveryResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SupplyDeliveryResIndexQuantity", "ix_System");
      DropIndex("dbo.SupplyDeliveryResIndexQuantity", "ix_Code");
      DropIndex("dbo.SupplyDeliveryResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.SupplyDeliveryResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SupplyDeliveryResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.SupplyDeliveryResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.SubstanceResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.SubstanceResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SubstanceResIndexUri", "ix_Uri");
      DropIndex("dbo.SubstanceResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.SubstanceResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SubstanceResIndexToken", "ix_System");
      DropIndex("dbo.SubstanceResIndexToken", "ix_Code");
      DropIndex("dbo.SubstanceResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.SubstanceResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SubstanceResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.SubstanceResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.SubstanceResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.SubstanceResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SubstanceResIndexQuantity", "ix_System");
      DropIndex("dbo.SubstanceResIndexQuantity", "ix_Code");
      DropIndex("dbo.SubstanceResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.SubstanceResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SubstanceResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.SubstanceResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.SubscriptionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.SubscriptionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SubscriptionResIndexUri", "ix_Uri");
      DropIndex("dbo.SubscriptionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.SubscriptionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SubscriptionResIndexToken", "ix_System");
      DropIndex("dbo.SubscriptionResIndexToken", "ix_Code");
      DropIndex("dbo.SubscriptionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.SubscriptionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SubscriptionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.SubscriptionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.SubscriptionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.SubscriptionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SubscriptionResIndexQuantity", "ix_System");
      DropIndex("dbo.SubscriptionResIndexQuantity", "ix_Code");
      DropIndex("dbo.SubscriptionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.SubscriptionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SubscriptionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.SubscriptionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.StructureMapResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.StructureMapResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.StructureMapResIndexUri", "ix_Uri");
      DropIndex("dbo.StructureMapResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.StructureMapResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.StructureMapResIndexToken", "ix_System");
      DropIndex("dbo.StructureMapResIndexToken", "ix_Code");
      DropIndex("dbo.StructureMapResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.StructureMapResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.StructureMapResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.StructureMapResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.StructureMapResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.StructureMapResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.StructureMapResIndexQuantity", "ix_System");
      DropIndex("dbo.StructureMapResIndexQuantity", "ix_Code");
      DropIndex("dbo.StructureMapResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.StructureMapResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.StructureMapResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.StructureMapResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.StructureDefinitionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.StructureDefinitionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.StructureDefinitionResIndexUri", "ix_Uri");
      DropIndex("dbo.StructureDefinitionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.StructureDefinitionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.StructureDefinitionResIndexToken", "ix_System");
      DropIndex("dbo.StructureDefinitionResIndexToken", "ix_Code");
      DropIndex("dbo.StructureDefinitionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.StructureDefinitionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.StructureDefinitionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.StructureDefinitionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.StructureDefinitionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.StructureDefinitionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.StructureDefinitionResIndexQuantity", "ix_System");
      DropIndex("dbo.StructureDefinitionResIndexQuantity", "ix_Code");
      DropIndex("dbo.StructureDefinitionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.StructureDefinitionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.StructureDefinitionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.StructureDefinitionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.SpecimenResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.SpecimenResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SpecimenResIndexUri", "ix_Uri");
      DropIndex("dbo.SpecimenResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.SpecimenResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SpecimenResIndexToken", "ix_System");
      DropIndex("dbo.SpecimenResIndexToken", "ix_Code");
      DropIndex("dbo.SpecimenResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.SpecimenResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SpecimenResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.SpecimenResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.SpecimenResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.SpecimenResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SpecimenResIndexQuantity", "ix_System");
      DropIndex("dbo.SpecimenResIndexQuantity", "ix_Code");
      DropIndex("dbo.SpecimenResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.SpecimenResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SpecimenResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.SpecimenResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.SlotResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.SlotResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SlotResIndexUri", "ix_Uri");
      DropIndex("dbo.SlotResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.SlotResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SlotResIndexToken", "ix_System");
      DropIndex("dbo.SlotResIndexToken", "ix_Code");
      DropIndex("dbo.SlotResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.SlotResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SlotResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.SlotResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.SlotResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.SlotResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SlotResIndexQuantity", "ix_System");
      DropIndex("dbo.SlotResIndexQuantity", "ix_Code");
      DropIndex("dbo.SlotResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.SlotResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SlotResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.SlotResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ServiceDefinitionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ServiceDefinitionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ServiceDefinitionResIndexUri", "ix_Uri");
      DropIndex("dbo.ServiceDefinitionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ServiceDefinitionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ServiceDefinitionResIndexToken", "ix_System");
      DropIndex("dbo.ServiceDefinitionResIndexToken", "ix_Code");
      DropIndex("dbo.ServiceDefinitionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ServiceDefinitionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ServiceDefinitionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ServiceDefinitionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ServiceDefinitionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ServiceDefinitionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ServiceDefinitionResIndexQuantity", "ix_System");
      DropIndex("dbo.ServiceDefinitionResIndexQuantity", "ix_Code");
      DropIndex("dbo.ServiceDefinitionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ServiceDefinitionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ServiceDefinitionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ServiceDefinitionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.SequenceResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.SequenceResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SequenceResIndexUri", "ix_Uri");
      DropIndex("dbo.SequenceResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.SequenceResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SequenceResIndexToken", "ix_System");
      DropIndex("dbo.SequenceResIndexToken", "ix_Code");
      DropIndex("dbo.SequenceResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.SequenceResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SequenceResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.SequenceResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.SequenceResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.SequenceResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SequenceResIndexQuantity", "ix_System");
      DropIndex("dbo.SequenceResIndexQuantity", "ix_Code");
      DropIndex("dbo.SequenceResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.SequenceResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SequenceResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.SequenceResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.SearchParameterResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.SearchParameterResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SearchParameterResIndexUri", "ix_Uri");
      DropIndex("dbo.SearchParameterResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.SearchParameterResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SearchParameterResIndexToken", "ix_System");
      DropIndex("dbo.SearchParameterResIndexToken", "ix_Code");
      DropIndex("dbo.SearchParameterResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.SearchParameterResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SearchParameterResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.SearchParameterResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.SearchParameterResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.SearchParameterResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SearchParameterResIndexQuantity", "ix_System");
      DropIndex("dbo.SearchParameterResIndexQuantity", "ix_Code");
      DropIndex("dbo.SearchParameterResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.SearchParameterResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.SearchParameterResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.SearchParameterResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ScheduleResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ScheduleResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ScheduleResIndexUri", "ix_Uri");
      DropIndex("dbo.ScheduleResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ScheduleResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ScheduleResIndexToken", "ix_System");
      DropIndex("dbo.ScheduleResIndexToken", "ix_Code");
      DropIndex("dbo.ScheduleResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ScheduleResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ScheduleResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ScheduleResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ScheduleResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ScheduleResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ScheduleResIndexQuantity", "ix_System");
      DropIndex("dbo.ScheduleResIndexQuantity", "ix_Code");
      DropIndex("dbo.ScheduleResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ScheduleResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ScheduleResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ScheduleResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.RiskAssessmentResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.RiskAssessmentResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RiskAssessmentResIndexUri", "ix_Uri");
      DropIndex("dbo.RiskAssessmentResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.RiskAssessmentResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RiskAssessmentResIndexToken", "ix_System");
      DropIndex("dbo.RiskAssessmentResIndexToken", "ix_Code");
      DropIndex("dbo.RiskAssessmentResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.RiskAssessmentResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RiskAssessmentResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.RiskAssessmentResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.RiskAssessmentResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.RiskAssessmentResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RiskAssessmentResIndexQuantity", "ix_System");
      DropIndex("dbo.RiskAssessmentResIndexQuantity", "ix_Code");
      DropIndex("dbo.RiskAssessmentResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.RiskAssessmentResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RiskAssessmentResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.RiskAssessmentResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ResearchSubjectResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ResearchSubjectResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ResearchSubjectResIndexUri", "ix_Uri");
      DropIndex("dbo.ResearchSubjectResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ResearchSubjectResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ResearchSubjectResIndexToken", "ix_System");
      DropIndex("dbo.ResearchSubjectResIndexToken", "ix_Code");
      DropIndex("dbo.ResearchSubjectResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ResearchSubjectResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ResearchSubjectResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ResearchSubjectResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ResearchSubjectResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ResearchSubjectResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ResearchSubjectResIndexQuantity", "ix_System");
      DropIndex("dbo.ResearchSubjectResIndexQuantity", "ix_Code");
      DropIndex("dbo.ResearchSubjectResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ResearchSubjectResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ResearchSubjectResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ResearchSubjectResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ResearchStudyResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ResearchStudyResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ResearchStudyResIndexUri", "ix_Uri");
      DropIndex("dbo.ResearchStudyResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ResearchStudyResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ResearchStudyResIndexToken", "ix_System");
      DropIndex("dbo.ResearchStudyResIndexToken", "ix_Code");
      DropIndex("dbo.ResearchStudyResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ResearchStudyResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ResearchStudyResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ResearchStudyResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ResearchStudyResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ResearchStudyResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ResearchStudyResIndexQuantity", "ix_System");
      DropIndex("dbo.ResearchStudyResIndexQuantity", "ix_Code");
      DropIndex("dbo.ResearchStudyResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ResearchStudyResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ResearchStudyResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ResearchStudyResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.RequestGroupResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.RequestGroupResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RequestGroupResIndexUri", "ix_Uri");
      DropIndex("dbo.RequestGroupResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.RequestGroupResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RequestGroupResIndexToken", "ix_System");
      DropIndex("dbo.RequestGroupResIndexToken", "ix_Code");
      DropIndex("dbo.RequestGroupResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.RequestGroupResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RequestGroupResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.RequestGroupResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.RequestGroupResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.RequestGroupResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RequestGroupResIndexQuantity", "ix_System");
      DropIndex("dbo.RequestGroupResIndexQuantity", "ix_Code");
      DropIndex("dbo.RequestGroupResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.RequestGroupResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RequestGroupResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.RequestGroupResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.RelatedPersonResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.RelatedPersonResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RelatedPersonResIndexUri", "ix_Uri");
      DropIndex("dbo.RelatedPersonResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.RelatedPersonResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RelatedPersonResIndexToken", "ix_System");
      DropIndex("dbo.RelatedPersonResIndexToken", "ix_Code");
      DropIndex("dbo.RelatedPersonResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.RelatedPersonResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RelatedPersonResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.RelatedPersonResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.RelatedPersonResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.RelatedPersonResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RelatedPersonResIndexQuantity", "ix_System");
      DropIndex("dbo.RelatedPersonResIndexQuantity", "ix_Code");
      DropIndex("dbo.RelatedPersonResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.RelatedPersonResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.RelatedPersonResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.RelatedPersonResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ReferralRequestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ReferralRequestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ReferralRequestResIndexUri", "ix_Uri");
      DropIndex("dbo.ReferralRequestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ReferralRequestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ReferralRequestResIndexToken", "ix_System");
      DropIndex("dbo.ReferralRequestResIndexToken", "ix_Code");
      DropIndex("dbo.ReferralRequestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ReferralRequestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ReferralRequestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ReferralRequestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ReferralRequestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ReferralRequestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ReferralRequestResIndexQuantity", "ix_System");
      DropIndex("dbo.ReferralRequestResIndexQuantity", "ix_Code");
      DropIndex("dbo.ReferralRequestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ReferralRequestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ReferralRequestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ReferralRequestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.QuestionnaireResponseResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.QuestionnaireResponseResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.QuestionnaireResponseResIndexUri", "ix_Uri");
      DropIndex("dbo.QuestionnaireResponseResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.QuestionnaireResponseResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.QuestionnaireResponseResIndexToken", "ix_System");
      DropIndex("dbo.QuestionnaireResponseResIndexToken", "ix_Code");
      DropIndex("dbo.QuestionnaireResponseResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.QuestionnaireResponseResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.QuestionnaireResponseResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.QuestionnaireResponseResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.QuestionnaireResponseResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.QuestionnaireResponseResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.QuestionnaireResponseResIndexQuantity", "ix_System");
      DropIndex("dbo.QuestionnaireResponseResIndexQuantity", "ix_Code");
      DropIndex("dbo.QuestionnaireResponseResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.QuestionnaireResponseResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.QuestionnaireResponseResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.QuestionnaireResponseResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.QuestionnaireResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.QuestionnaireResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.QuestionnaireResIndexUri", "ix_Uri");
      DropIndex("dbo.QuestionnaireResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.QuestionnaireResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.QuestionnaireResIndexToken", "ix_System");
      DropIndex("dbo.QuestionnaireResIndexToken", "ix_Code");
      DropIndex("dbo.QuestionnaireResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.QuestionnaireResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.QuestionnaireResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.QuestionnaireResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.QuestionnaireResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.QuestionnaireResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.QuestionnaireResIndexQuantity", "ix_System");
      DropIndex("dbo.QuestionnaireResIndexQuantity", "ix_Code");
      DropIndex("dbo.QuestionnaireResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.QuestionnaireResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.QuestionnaireResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.QuestionnaireResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ProvenanceResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ProvenanceResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProvenanceResIndexUri", "ix_Uri");
      DropIndex("dbo.ProvenanceResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ProvenanceResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProvenanceResIndexToken", "ix_System");
      DropIndex("dbo.ProvenanceResIndexToken", "ix_Code");
      DropIndex("dbo.ProvenanceResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ProvenanceResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProvenanceResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ProvenanceResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ProvenanceResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ProvenanceResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProvenanceResIndexQuantity", "ix_System");
      DropIndex("dbo.ProvenanceResIndexQuantity", "ix_Code");
      DropIndex("dbo.ProvenanceResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ProvenanceResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProvenanceResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ProvenanceResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ProcessResponseResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ProcessResponseResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcessResponseResIndexUri", "ix_Uri");
      DropIndex("dbo.ProcessResponseResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ProcessResponseResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcessResponseResIndexToken", "ix_System");
      DropIndex("dbo.ProcessResponseResIndexToken", "ix_Code");
      DropIndex("dbo.ProcessResponseResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ProcessResponseResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcessResponseResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ProcessResponseResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ProcessResponseResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ProcessResponseResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcessResponseResIndexQuantity", "ix_System");
      DropIndex("dbo.ProcessResponseResIndexQuantity", "ix_Code");
      DropIndex("dbo.ProcessResponseResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ProcessResponseResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcessResponseResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ProcessResponseResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ProcessRequestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ProcessRequestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcessRequestResIndexUri", "ix_Uri");
      DropIndex("dbo.ProcessRequestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ProcessRequestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcessRequestResIndexToken", "ix_System");
      DropIndex("dbo.ProcessRequestResIndexToken", "ix_Code");
      DropIndex("dbo.ProcessRequestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ProcessRequestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcessRequestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ProcessRequestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ProcessRequestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ProcessRequestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcessRequestResIndexQuantity", "ix_System");
      DropIndex("dbo.ProcessRequestResIndexQuantity", "ix_Code");
      DropIndex("dbo.ProcessRequestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ProcessRequestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcessRequestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ProcessRequestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ProcedureRequestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ProcedureRequestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcedureRequestResIndexUri", "ix_Uri");
      DropIndex("dbo.ProcedureRequestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ProcedureRequestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcedureRequestResIndexToken", "ix_System");
      DropIndex("dbo.ProcedureRequestResIndexToken", "ix_Code");
      DropIndex("dbo.ProcedureRequestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ProcedureRequestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcedureRequestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ProcedureRequestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ProcedureRequestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ProcedureRequestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcedureRequestResIndexQuantity", "ix_System");
      DropIndex("dbo.ProcedureRequestResIndexQuantity", "ix_Code");
      DropIndex("dbo.ProcedureRequestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ProcedureRequestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcedureRequestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ProcedureRequestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ProcedureResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ProcedureResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcedureResIndexUri", "ix_Uri");
      DropIndex("dbo.ProcedureResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ProcedureResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcedureResIndexToken", "ix_System");
      DropIndex("dbo.ProcedureResIndexToken", "ix_Code");
      DropIndex("dbo.ProcedureResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ProcedureResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcedureResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ProcedureResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ProcedureResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ProcedureResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcedureResIndexQuantity", "ix_System");
      DropIndex("dbo.ProcedureResIndexQuantity", "ix_Code");
      DropIndex("dbo.ProcedureResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ProcedureResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ProcedureResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ProcedureResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.PractitionerRoleResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.PractitionerRoleResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PractitionerRoleResIndexUri", "ix_Uri");
      DropIndex("dbo.PractitionerRoleResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.PractitionerRoleResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PractitionerRoleResIndexToken", "ix_System");
      DropIndex("dbo.PractitionerRoleResIndexToken", "ix_Code");
      DropIndex("dbo.PractitionerRoleResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.PractitionerRoleResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PractitionerRoleResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.PractitionerRoleResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.PractitionerRoleResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.PractitionerRoleResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PractitionerRoleResIndexQuantity", "ix_System");
      DropIndex("dbo.PractitionerRoleResIndexQuantity", "ix_Code");
      DropIndex("dbo.PractitionerRoleResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.PractitionerRoleResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PractitionerRoleResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.PractitionerRoleResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.PractitionerResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.PractitionerResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PractitionerResIndexUri", "ix_Uri");
      DropIndex("dbo.PractitionerResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.PractitionerResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PractitionerResIndexToken", "ix_System");
      DropIndex("dbo.PractitionerResIndexToken", "ix_Code");
      DropIndex("dbo.PractitionerResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.PractitionerResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PractitionerResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.PractitionerResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.PractitionerResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.PractitionerResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PractitionerResIndexQuantity", "ix_System");
      DropIndex("dbo.PractitionerResIndexQuantity", "ix_Code");
      DropIndex("dbo.PractitionerResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.PractitionerResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PractitionerResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.PractitionerResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.PlanDefinitionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.PlanDefinitionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PlanDefinitionResIndexUri", "ix_Uri");
      DropIndex("dbo.PlanDefinitionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.PlanDefinitionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PlanDefinitionResIndexToken", "ix_System");
      DropIndex("dbo.PlanDefinitionResIndexToken", "ix_Code");
      DropIndex("dbo.PlanDefinitionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.PlanDefinitionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PlanDefinitionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.PlanDefinitionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.PlanDefinitionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.PlanDefinitionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PlanDefinitionResIndexQuantity", "ix_System");
      DropIndex("dbo.PlanDefinitionResIndexQuantity", "ix_Code");
      DropIndex("dbo.PlanDefinitionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.PlanDefinitionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PlanDefinitionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.PlanDefinitionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.PersonResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.PersonResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PersonResIndexUri", "ix_Uri");
      DropIndex("dbo.PersonResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.PersonResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PersonResIndexToken", "ix_System");
      DropIndex("dbo.PersonResIndexToken", "ix_Code");
      DropIndex("dbo.PersonResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.PersonResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PersonResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.PersonResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.PersonResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.PersonResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PersonResIndexQuantity", "ix_System");
      DropIndex("dbo.PersonResIndexQuantity", "ix_Code");
      DropIndex("dbo.PersonResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.PersonResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PersonResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.PersonResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.PaymentReconciliationResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.PaymentReconciliationResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PaymentReconciliationResIndexUri", "ix_Uri");
      DropIndex("dbo.PaymentReconciliationResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.PaymentReconciliationResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PaymentReconciliationResIndexToken", "ix_System");
      DropIndex("dbo.PaymentReconciliationResIndexToken", "ix_Code");
      DropIndex("dbo.PaymentReconciliationResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.PaymentReconciliationResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PaymentReconciliationResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.PaymentReconciliationResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.PaymentReconciliationResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.PaymentReconciliationResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PaymentReconciliationResIndexQuantity", "ix_System");
      DropIndex("dbo.PaymentReconciliationResIndexQuantity", "ix_Code");
      DropIndex("dbo.PaymentReconciliationResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.PaymentReconciliationResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PaymentReconciliationResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.PaymentReconciliationResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.PaymentNoticeResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.PaymentNoticeResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PaymentNoticeResIndexUri", "ix_Uri");
      DropIndex("dbo.PaymentNoticeResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.PaymentNoticeResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PaymentNoticeResIndexToken", "ix_System");
      DropIndex("dbo.PaymentNoticeResIndexToken", "ix_Code");
      DropIndex("dbo.PaymentNoticeResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.PaymentNoticeResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PaymentNoticeResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.PaymentNoticeResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.PaymentNoticeResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.PaymentNoticeResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PaymentNoticeResIndexQuantity", "ix_System");
      DropIndex("dbo.PaymentNoticeResIndexQuantity", "ix_Code");
      DropIndex("dbo.PaymentNoticeResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.PaymentNoticeResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PaymentNoticeResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.PaymentNoticeResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.PatientResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.PatientResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PatientResIndexUri", "ix_Uri");
      DropIndex("dbo.PatientResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.PatientResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PatientResIndexToken", "ix_System");
      DropIndex("dbo.PatientResIndexToken", "ix_Code");
      DropIndex("dbo.PatientResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.PatientResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PatientResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.PatientResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.PatientResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.PatientResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PatientResIndexQuantity", "ix_System");
      DropIndex("dbo.PatientResIndexQuantity", "ix_Code");
      DropIndex("dbo.PatientResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.PatientResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.PatientResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.PatientResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ParametersResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ParametersResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ParametersResIndexUri", "ix_Uri");
      DropIndex("dbo.ParametersResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ParametersResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ParametersResIndexToken", "ix_System");
      DropIndex("dbo.ParametersResIndexToken", "ix_Code");
      DropIndex("dbo.ParametersResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ParametersResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ParametersResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ParametersResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ParametersResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ParametersResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ParametersResIndexQuantity", "ix_System");
      DropIndex("dbo.ParametersResIndexQuantity", "ix_Code");
      DropIndex("dbo.ParametersResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ParametersResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ParametersResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ParametersResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.OrganizationResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.OrganizationResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OrganizationResIndexUri", "ix_Uri");
      DropIndex("dbo.OrganizationResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.OrganizationResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OrganizationResIndexToken", "ix_System");
      DropIndex("dbo.OrganizationResIndexToken", "ix_Code");
      DropIndex("dbo.OrganizationResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.OrganizationResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OrganizationResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.OrganizationResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.OrganizationResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.OrganizationResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OrganizationResIndexQuantity", "ix_System");
      DropIndex("dbo.OrganizationResIndexQuantity", "ix_Code");
      DropIndex("dbo.OrganizationResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.OrganizationResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OrganizationResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.OrganizationResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.OperationOutcomeResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.OperationOutcomeResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OperationOutcomeResIndexUri", "ix_Uri");
      DropIndex("dbo.OperationOutcomeResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.OperationOutcomeResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OperationOutcomeResIndexToken", "ix_System");
      DropIndex("dbo.OperationOutcomeResIndexToken", "ix_Code");
      DropIndex("dbo.OperationOutcomeResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.OperationOutcomeResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OperationOutcomeResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.OperationOutcomeResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.OperationOutcomeResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.OperationOutcomeResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OperationOutcomeResIndexQuantity", "ix_System");
      DropIndex("dbo.OperationOutcomeResIndexQuantity", "ix_Code");
      DropIndex("dbo.OperationOutcomeResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.OperationOutcomeResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OperationOutcomeResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.OperationOutcomeResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.OperationDefinitionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.OperationDefinitionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OperationDefinitionResIndexUri", "ix_Uri");
      DropIndex("dbo.OperationDefinitionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.OperationDefinitionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OperationDefinitionResIndexToken", "ix_System");
      DropIndex("dbo.OperationDefinitionResIndexToken", "ix_Code");
      DropIndex("dbo.OperationDefinitionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.OperationDefinitionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OperationDefinitionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.OperationDefinitionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.OperationDefinitionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.OperationDefinitionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OperationDefinitionResIndexQuantity", "ix_System");
      DropIndex("dbo.OperationDefinitionResIndexQuantity", "ix_Code");
      DropIndex("dbo.OperationDefinitionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.OperationDefinitionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.OperationDefinitionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.OperationDefinitionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ObservationResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ObservationResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ObservationResIndexUri", "ix_Uri");
      DropIndex("dbo.ObservationResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ObservationResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ObservationResIndexToken", "ix_System");
      DropIndex("dbo.ObservationResIndexToken", "ix_Code");
      DropIndex("dbo.ObservationResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ObservationResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ObservationResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ObservationResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ObservationResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ObservationResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ObservationResIndexQuantity", "ix_System");
      DropIndex("dbo.ObservationResIndexQuantity", "ix_Code");
      DropIndex("dbo.ObservationResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ObservationResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ObservationResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ObservationResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.NutritionOrderResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.NutritionOrderResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.NutritionOrderResIndexUri", "ix_Uri");
      DropIndex("dbo.NutritionOrderResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.NutritionOrderResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.NutritionOrderResIndexToken", "ix_System");
      DropIndex("dbo.NutritionOrderResIndexToken", "ix_Code");
      DropIndex("dbo.NutritionOrderResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.NutritionOrderResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.NutritionOrderResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.NutritionOrderResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.NutritionOrderResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.NutritionOrderResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.NutritionOrderResIndexQuantity", "ix_System");
      DropIndex("dbo.NutritionOrderResIndexQuantity", "ix_Code");
      DropIndex("dbo.NutritionOrderResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.NutritionOrderResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.NutritionOrderResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.NutritionOrderResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.NamingSystemResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.NamingSystemResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.NamingSystemResIndexUri", "ix_Uri");
      DropIndex("dbo.NamingSystemResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.NamingSystemResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.NamingSystemResIndexToken", "ix_System");
      DropIndex("dbo.NamingSystemResIndexToken", "ix_Code");
      DropIndex("dbo.NamingSystemResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.NamingSystemResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.NamingSystemResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.NamingSystemResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.NamingSystemResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.NamingSystemResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.NamingSystemResIndexQuantity", "ix_System");
      DropIndex("dbo.NamingSystemResIndexQuantity", "ix_Code");
      DropIndex("dbo.NamingSystemResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.NamingSystemResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.NamingSystemResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.NamingSystemResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.MessageHeaderResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.MessageHeaderResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MessageHeaderResIndexUri", "ix_Uri");
      DropIndex("dbo.MessageHeaderResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.MessageHeaderResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MessageHeaderResIndexToken", "ix_System");
      DropIndex("dbo.MessageHeaderResIndexToken", "ix_Code");
      DropIndex("dbo.MessageHeaderResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.MessageHeaderResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MessageHeaderResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.MessageHeaderResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.MessageHeaderResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.MessageHeaderResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MessageHeaderResIndexQuantity", "ix_System");
      DropIndex("dbo.MessageHeaderResIndexQuantity", "ix_Code");
      DropIndex("dbo.MessageHeaderResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.MessageHeaderResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MessageHeaderResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.MessageHeaderResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.MessageDefinitionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.MessageDefinitionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MessageDefinitionResIndexUri", "ix_Uri");
      DropIndex("dbo.MessageDefinitionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.MessageDefinitionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MessageDefinitionResIndexToken", "ix_System");
      DropIndex("dbo.MessageDefinitionResIndexToken", "ix_Code");
      DropIndex("dbo.MessageDefinitionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.MessageDefinitionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MessageDefinitionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.MessageDefinitionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.MessageDefinitionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.MessageDefinitionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MessageDefinitionResIndexQuantity", "ix_System");
      DropIndex("dbo.MessageDefinitionResIndexQuantity", "ix_Code");
      DropIndex("dbo.MessageDefinitionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.MessageDefinitionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MessageDefinitionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.MessageDefinitionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.MedicationStatementResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.MedicationStatementResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationStatementResIndexUri", "ix_Uri");
      DropIndex("dbo.MedicationStatementResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.MedicationStatementResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationStatementResIndexToken", "ix_System");
      DropIndex("dbo.MedicationStatementResIndexToken", "ix_Code");
      DropIndex("dbo.MedicationStatementResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.MedicationStatementResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationStatementResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.MedicationStatementResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.MedicationStatementResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.MedicationStatementResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationStatementResIndexQuantity", "ix_System");
      DropIndex("dbo.MedicationStatementResIndexQuantity", "ix_Code");
      DropIndex("dbo.MedicationStatementResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.MedicationStatementResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationStatementResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.MedicationStatementResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.MedicationRequestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.MedicationRequestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationRequestResIndexUri", "ix_Uri");
      DropIndex("dbo.MedicationRequestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.MedicationRequestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationRequestResIndexToken", "ix_System");
      DropIndex("dbo.MedicationRequestResIndexToken", "ix_Code");
      DropIndex("dbo.MedicationRequestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.MedicationRequestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationRequestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.MedicationRequestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.MedicationRequestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.MedicationRequestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationRequestResIndexQuantity", "ix_System");
      DropIndex("dbo.MedicationRequestResIndexQuantity", "ix_Code");
      DropIndex("dbo.MedicationRequestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.MedicationRequestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationRequestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.MedicationRequestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.MedicationDispenseResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.MedicationDispenseResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationDispenseResIndexUri", "ix_Uri");
      DropIndex("dbo.MedicationDispenseResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.MedicationDispenseResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationDispenseResIndexToken", "ix_System");
      DropIndex("dbo.MedicationDispenseResIndexToken", "ix_Code");
      DropIndex("dbo.MedicationDispenseResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.MedicationDispenseResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationDispenseResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.MedicationDispenseResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.MedicationDispenseResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.MedicationDispenseResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationDispenseResIndexQuantity", "ix_System");
      DropIndex("dbo.MedicationDispenseResIndexQuantity", "ix_Code");
      DropIndex("dbo.MedicationDispenseResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.MedicationDispenseResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationDispenseResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.MedicationDispenseResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.MedicationAdministrationResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.MedicationAdministrationResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationAdministrationResIndexUri", "ix_Uri");
      DropIndex("dbo.MedicationAdministrationResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.MedicationAdministrationResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationAdministrationResIndexToken", "ix_System");
      DropIndex("dbo.MedicationAdministrationResIndexToken", "ix_Code");
      DropIndex("dbo.MedicationAdministrationResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.MedicationAdministrationResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationAdministrationResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.MedicationAdministrationResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.MedicationAdministrationResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.MedicationAdministrationResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationAdministrationResIndexQuantity", "ix_System");
      DropIndex("dbo.MedicationAdministrationResIndexQuantity", "ix_Code");
      DropIndex("dbo.MedicationAdministrationResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.MedicationAdministrationResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationAdministrationResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.MedicationAdministrationResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.MedicationResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.MedicationResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationResIndexUri", "ix_Uri");
      DropIndex("dbo.MedicationResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.MedicationResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationResIndexToken", "ix_System");
      DropIndex("dbo.MedicationResIndexToken", "ix_Code");
      DropIndex("dbo.MedicationResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.MedicationResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.MedicationResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.MedicationResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.MedicationResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationResIndexQuantity", "ix_System");
      DropIndex("dbo.MedicationResIndexQuantity", "ix_Code");
      DropIndex("dbo.MedicationResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.MedicationResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MedicationResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.MedicationResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.MediaResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.MediaResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MediaResIndexUri", "ix_Uri");
      DropIndex("dbo.MediaResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.MediaResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MediaResIndexToken", "ix_System");
      DropIndex("dbo.MediaResIndexToken", "ix_Code");
      DropIndex("dbo.MediaResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.MediaResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MediaResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.MediaResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.MediaResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.MediaResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MediaResIndexQuantity", "ix_System");
      DropIndex("dbo.MediaResIndexQuantity", "ix_Code");
      DropIndex("dbo.MediaResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.MediaResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MediaResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.MediaResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.MeasureReportResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.MeasureReportResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MeasureReportResIndexUri", "ix_Uri");
      DropIndex("dbo.MeasureReportResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.MeasureReportResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MeasureReportResIndexToken", "ix_System");
      DropIndex("dbo.MeasureReportResIndexToken", "ix_Code");
      DropIndex("dbo.MeasureReportResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.MeasureReportResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MeasureReportResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.MeasureReportResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.MeasureReportResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.MeasureReportResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MeasureReportResIndexQuantity", "ix_System");
      DropIndex("dbo.MeasureReportResIndexQuantity", "ix_Code");
      DropIndex("dbo.MeasureReportResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.MeasureReportResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MeasureReportResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.MeasureReportResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.MeasureResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.MeasureResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MeasureResIndexUri", "ix_Uri");
      DropIndex("dbo.MeasureResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.MeasureResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MeasureResIndexToken", "ix_System");
      DropIndex("dbo.MeasureResIndexToken", "ix_Code");
      DropIndex("dbo.MeasureResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.MeasureResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MeasureResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.MeasureResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.MeasureResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.MeasureResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MeasureResIndexQuantity", "ix_System");
      DropIndex("dbo.MeasureResIndexQuantity", "ix_Code");
      DropIndex("dbo.MeasureResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.MeasureResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.MeasureResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.MeasureResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.LocationResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.LocationResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LocationResIndexUri", "ix_Uri");
      DropIndex("dbo.LocationResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.LocationResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LocationResIndexToken", "ix_System");
      DropIndex("dbo.LocationResIndexToken", "ix_Code");
      DropIndex("dbo.LocationResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.LocationResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LocationResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.LocationResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.LocationResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.LocationResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LocationResIndexQuantity", "ix_System");
      DropIndex("dbo.LocationResIndexQuantity", "ix_Code");
      DropIndex("dbo.LocationResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.LocationResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LocationResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.LocationResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ListResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ListResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ListResIndexUri", "ix_Uri");
      DropIndex("dbo.ListResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ListResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ListResIndexToken", "ix_System");
      DropIndex("dbo.ListResIndexToken", "ix_Code");
      DropIndex("dbo.ListResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ListResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ListResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ListResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ListResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ListResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ListResIndexQuantity", "ix_System");
      DropIndex("dbo.ListResIndexQuantity", "ix_Code");
      DropIndex("dbo.ListResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ListResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ListResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ListResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.LinkageResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.LinkageResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LinkageResIndexUri", "ix_Uri");
      DropIndex("dbo.LinkageResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.LinkageResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LinkageResIndexToken", "ix_System");
      DropIndex("dbo.LinkageResIndexToken", "ix_Code");
      DropIndex("dbo.LinkageResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.LinkageResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LinkageResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.LinkageResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.LinkageResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.LinkageResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LinkageResIndexQuantity", "ix_System");
      DropIndex("dbo.LinkageResIndexQuantity", "ix_Code");
      DropIndex("dbo.LinkageResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.LinkageResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LinkageResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.LinkageResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.LibraryResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.LibraryResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LibraryResIndexUri", "ix_Uri");
      DropIndex("dbo.LibraryResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.LibraryResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LibraryResIndexToken", "ix_System");
      DropIndex("dbo.LibraryResIndexToken", "ix_Code");
      DropIndex("dbo.LibraryResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.LibraryResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LibraryResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.LibraryResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.LibraryResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.LibraryResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LibraryResIndexQuantity", "ix_System");
      DropIndex("dbo.LibraryResIndexQuantity", "ix_Code");
      DropIndex("dbo.LibraryResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.LibraryResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.LibraryResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.LibraryResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ImplementationGuideResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ImplementationGuideResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImplementationGuideResIndexUri", "ix_Uri");
      DropIndex("dbo.ImplementationGuideResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ImplementationGuideResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImplementationGuideResIndexToken", "ix_System");
      DropIndex("dbo.ImplementationGuideResIndexToken", "ix_Code");
      DropIndex("dbo.ImplementationGuideResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ImplementationGuideResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImplementationGuideResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ImplementationGuideResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ImplementationGuideResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ImplementationGuideResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImplementationGuideResIndexQuantity", "ix_System");
      DropIndex("dbo.ImplementationGuideResIndexQuantity", "ix_Code");
      DropIndex("dbo.ImplementationGuideResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ImplementationGuideResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImplementationGuideResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ImplementationGuideResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ImmunizationRecommendationResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ImmunizationRecommendationResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImmunizationRecommendationResIndexUri", "ix_Uri");
      DropIndex("dbo.ImmunizationRecommendationResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ImmunizationRecommendationResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImmunizationRecommendationResIndexToken", "ix_System");
      DropIndex("dbo.ImmunizationRecommendationResIndexToken", "ix_Code");
      DropIndex("dbo.ImmunizationRecommendationResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ImmunizationRecommendationResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImmunizationRecommendationResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ImmunizationRecommendationResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ImmunizationRecommendationResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ImmunizationRecommendationResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImmunizationRecommendationResIndexQuantity", "ix_System");
      DropIndex("dbo.ImmunizationRecommendationResIndexQuantity", "ix_Code");
      DropIndex("dbo.ImmunizationRecommendationResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ImmunizationRecommendationResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImmunizationRecommendationResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ImmunizationRecommendationResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ImmunizationResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ImmunizationResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImmunizationResIndexUri", "ix_Uri");
      DropIndex("dbo.ImmunizationResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ImmunizationResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImmunizationResIndexToken", "ix_System");
      DropIndex("dbo.ImmunizationResIndexToken", "ix_Code");
      DropIndex("dbo.ImmunizationResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ImmunizationResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImmunizationResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ImmunizationResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ImmunizationResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ImmunizationResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImmunizationResIndexQuantity", "ix_System");
      DropIndex("dbo.ImmunizationResIndexQuantity", "ix_Code");
      DropIndex("dbo.ImmunizationResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ImmunizationResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImmunizationResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ImmunizationResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ImagingStudyResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ImagingStudyResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImagingStudyResIndexUri", "ix_Uri");
      DropIndex("dbo.ImagingStudyResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ImagingStudyResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImagingStudyResIndexToken", "ix_System");
      DropIndex("dbo.ImagingStudyResIndexToken", "ix_Code");
      DropIndex("dbo.ImagingStudyResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ImagingStudyResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImagingStudyResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ImagingStudyResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ImagingStudyResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ImagingStudyResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImagingStudyResIndexQuantity", "ix_System");
      DropIndex("dbo.ImagingStudyResIndexQuantity", "ix_Code");
      DropIndex("dbo.ImagingStudyResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ImagingStudyResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImagingStudyResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ImagingStudyResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ImagingManifestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ImagingManifestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImagingManifestResIndexUri", "ix_Uri");
      DropIndex("dbo.ImagingManifestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ImagingManifestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImagingManifestResIndexToken", "ix_System");
      DropIndex("dbo.ImagingManifestResIndexToken", "ix_Code");
      DropIndex("dbo.ImagingManifestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ImagingManifestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImagingManifestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ImagingManifestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ImagingManifestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ImagingManifestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImagingManifestResIndexQuantity", "ix_System");
      DropIndex("dbo.ImagingManifestResIndexQuantity", "ix_Code");
      DropIndex("dbo.ImagingManifestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ImagingManifestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ImagingManifestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ImagingManifestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.HealthcareServiceResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.HealthcareServiceResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.HealthcareServiceResIndexUri", "ix_Uri");
      DropIndex("dbo.HealthcareServiceResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.HealthcareServiceResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.HealthcareServiceResIndexToken", "ix_System");
      DropIndex("dbo.HealthcareServiceResIndexToken", "ix_Code");
      DropIndex("dbo.HealthcareServiceResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.HealthcareServiceResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.HealthcareServiceResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.HealthcareServiceResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.HealthcareServiceResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.HealthcareServiceResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.HealthcareServiceResIndexQuantity", "ix_System");
      DropIndex("dbo.HealthcareServiceResIndexQuantity", "ix_Code");
      DropIndex("dbo.HealthcareServiceResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.HealthcareServiceResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.HealthcareServiceResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.HealthcareServiceResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.GuidanceResponseResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.GuidanceResponseResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GuidanceResponseResIndexUri", "ix_Uri");
      DropIndex("dbo.GuidanceResponseResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.GuidanceResponseResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GuidanceResponseResIndexToken", "ix_System");
      DropIndex("dbo.GuidanceResponseResIndexToken", "ix_Code");
      DropIndex("dbo.GuidanceResponseResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.GuidanceResponseResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GuidanceResponseResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.GuidanceResponseResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.GuidanceResponseResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.GuidanceResponseResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GuidanceResponseResIndexQuantity", "ix_System");
      DropIndex("dbo.GuidanceResponseResIndexQuantity", "ix_Code");
      DropIndex("dbo.GuidanceResponseResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.GuidanceResponseResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GuidanceResponseResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.GuidanceResponseResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.GroupResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.GroupResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GroupResIndexUri", "ix_Uri");
      DropIndex("dbo.GroupResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.GroupResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GroupResIndexToken", "ix_System");
      DropIndex("dbo.GroupResIndexToken", "ix_Code");
      DropIndex("dbo.GroupResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.GroupResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GroupResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.GroupResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.GroupResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.GroupResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GroupResIndexQuantity", "ix_System");
      DropIndex("dbo.GroupResIndexQuantity", "ix_Code");
      DropIndex("dbo.GroupResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.GroupResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GroupResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.GroupResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.GraphDefinitionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.GraphDefinitionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GraphDefinitionResIndexUri", "ix_Uri");
      DropIndex("dbo.GraphDefinitionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.GraphDefinitionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GraphDefinitionResIndexToken", "ix_System");
      DropIndex("dbo.GraphDefinitionResIndexToken", "ix_Code");
      DropIndex("dbo.GraphDefinitionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.GraphDefinitionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GraphDefinitionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.GraphDefinitionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.GraphDefinitionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.GraphDefinitionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GraphDefinitionResIndexQuantity", "ix_System");
      DropIndex("dbo.GraphDefinitionResIndexQuantity", "ix_Code");
      DropIndex("dbo.GraphDefinitionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.GraphDefinitionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GraphDefinitionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.GraphDefinitionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.GoalResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.GoalResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GoalResIndexUri", "ix_Uri");
      DropIndex("dbo.GoalResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.GoalResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GoalResIndexToken", "ix_System");
      DropIndex("dbo.GoalResIndexToken", "ix_Code");
      DropIndex("dbo.GoalResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.GoalResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GoalResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.GoalResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.GoalResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.GoalResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GoalResIndexQuantity", "ix_System");
      DropIndex("dbo.GoalResIndexQuantity", "ix_Code");
      DropIndex("dbo.GoalResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.GoalResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.GoalResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.GoalResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.FlagResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.FlagResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.FlagResIndexUri", "ix_Uri");
      DropIndex("dbo.FlagResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.FlagResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.FlagResIndexToken", "ix_System");
      DropIndex("dbo.FlagResIndexToken", "ix_Code");
      DropIndex("dbo.FlagResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.FlagResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.FlagResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.FlagResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.FlagResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.FlagResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.FlagResIndexQuantity", "ix_System");
      DropIndex("dbo.FlagResIndexQuantity", "ix_Code");
      DropIndex("dbo.FlagResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.FlagResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.FlagResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.FlagResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.FamilyMemberHistoryResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.FamilyMemberHistoryResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.FamilyMemberHistoryResIndexUri", "ix_Uri");
      DropIndex("dbo.FamilyMemberHistoryResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.FamilyMemberHistoryResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.FamilyMemberHistoryResIndexToken", "ix_System");
      DropIndex("dbo.FamilyMemberHistoryResIndexToken", "ix_Code");
      DropIndex("dbo.FamilyMemberHistoryResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.FamilyMemberHistoryResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.FamilyMemberHistoryResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.FamilyMemberHistoryResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.FamilyMemberHistoryResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.FamilyMemberHistoryResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.FamilyMemberHistoryResIndexQuantity", "ix_System");
      DropIndex("dbo.FamilyMemberHistoryResIndexQuantity", "ix_Code");
      DropIndex("dbo.FamilyMemberHistoryResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.FamilyMemberHistoryResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.FamilyMemberHistoryResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.FamilyMemberHistoryResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ExplanationOfBenefitResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ExplanationOfBenefitResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ExplanationOfBenefitResIndexUri", "ix_Uri");
      DropIndex("dbo.ExplanationOfBenefitResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ExplanationOfBenefitResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ExplanationOfBenefitResIndexToken", "ix_System");
      DropIndex("dbo.ExplanationOfBenefitResIndexToken", "ix_Code");
      DropIndex("dbo.ExplanationOfBenefitResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ExplanationOfBenefitResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ExplanationOfBenefitResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ExplanationOfBenefitResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ExplanationOfBenefitResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ExplanationOfBenefitResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ExplanationOfBenefitResIndexQuantity", "ix_System");
      DropIndex("dbo.ExplanationOfBenefitResIndexQuantity", "ix_Code");
      DropIndex("dbo.ExplanationOfBenefitResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ExplanationOfBenefitResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ExplanationOfBenefitResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ExplanationOfBenefitResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ExpansionProfileResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ExpansionProfileResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ExpansionProfileResIndexUri", "ix_Uri");
      DropIndex("dbo.ExpansionProfileResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ExpansionProfileResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ExpansionProfileResIndexToken", "ix_System");
      DropIndex("dbo.ExpansionProfileResIndexToken", "ix_Code");
      DropIndex("dbo.ExpansionProfileResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ExpansionProfileResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ExpansionProfileResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ExpansionProfileResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ExpansionProfileResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ExpansionProfileResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ExpansionProfileResIndexQuantity", "ix_System");
      DropIndex("dbo.ExpansionProfileResIndexQuantity", "ix_Code");
      DropIndex("dbo.ExpansionProfileResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ExpansionProfileResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ExpansionProfileResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ExpansionProfileResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.EpisodeOfCareResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.EpisodeOfCareResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EpisodeOfCareResIndexUri", "ix_Uri");
      DropIndex("dbo.EpisodeOfCareResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.EpisodeOfCareResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EpisodeOfCareResIndexToken", "ix_System");
      DropIndex("dbo.EpisodeOfCareResIndexToken", "ix_Code");
      DropIndex("dbo.EpisodeOfCareResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.EpisodeOfCareResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EpisodeOfCareResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.EpisodeOfCareResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.EpisodeOfCareResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.EpisodeOfCareResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EpisodeOfCareResIndexQuantity", "ix_System");
      DropIndex("dbo.EpisodeOfCareResIndexQuantity", "ix_Code");
      DropIndex("dbo.EpisodeOfCareResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.EpisodeOfCareResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EpisodeOfCareResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.EpisodeOfCareResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.EnrollmentResponseResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.EnrollmentResponseResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EnrollmentResponseResIndexUri", "ix_Uri");
      DropIndex("dbo.EnrollmentResponseResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.EnrollmentResponseResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EnrollmentResponseResIndexToken", "ix_System");
      DropIndex("dbo.EnrollmentResponseResIndexToken", "ix_Code");
      DropIndex("dbo.EnrollmentResponseResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.EnrollmentResponseResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EnrollmentResponseResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.EnrollmentResponseResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.EnrollmentResponseResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.EnrollmentResponseResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EnrollmentResponseResIndexQuantity", "ix_System");
      DropIndex("dbo.EnrollmentResponseResIndexQuantity", "ix_Code");
      DropIndex("dbo.EnrollmentResponseResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.EnrollmentResponseResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EnrollmentResponseResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.EnrollmentResponseResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.EnrollmentRequestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.EnrollmentRequestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EnrollmentRequestResIndexUri", "ix_Uri");
      DropIndex("dbo.EnrollmentRequestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.EnrollmentRequestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EnrollmentRequestResIndexToken", "ix_System");
      DropIndex("dbo.EnrollmentRequestResIndexToken", "ix_Code");
      DropIndex("dbo.EnrollmentRequestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.EnrollmentRequestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EnrollmentRequestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.EnrollmentRequestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.EnrollmentRequestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.EnrollmentRequestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EnrollmentRequestResIndexQuantity", "ix_System");
      DropIndex("dbo.EnrollmentRequestResIndexQuantity", "ix_Code");
      DropIndex("dbo.EnrollmentRequestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.EnrollmentRequestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EnrollmentRequestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.EnrollmentRequestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.EndpointResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.EndpointResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EndpointResIndexUri", "ix_Uri");
      DropIndex("dbo.EndpointResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.EndpointResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EndpointResIndexToken", "ix_System");
      DropIndex("dbo.EndpointResIndexToken", "ix_Code");
      DropIndex("dbo.EndpointResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.EndpointResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EndpointResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.EndpointResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.EndpointResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.EndpointResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EndpointResIndexQuantity", "ix_System");
      DropIndex("dbo.EndpointResIndexQuantity", "ix_Code");
      DropIndex("dbo.EndpointResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.EndpointResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EndpointResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.EndpointResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.EncounterResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.EncounterResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EncounterResIndexUri", "ix_Uri");
      DropIndex("dbo.EncounterResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.EncounterResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EncounterResIndexToken", "ix_System");
      DropIndex("dbo.EncounterResIndexToken", "ix_Code");
      DropIndex("dbo.EncounterResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.EncounterResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EncounterResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.EncounterResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.EncounterResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.EncounterResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EncounterResIndexQuantity", "ix_System");
      DropIndex("dbo.EncounterResIndexQuantity", "ix_Code");
      DropIndex("dbo.EncounterResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.EncounterResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EncounterResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.EncounterResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.EligibilityResponseResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.EligibilityResponseResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EligibilityResponseResIndexUri", "ix_Uri");
      DropIndex("dbo.EligibilityResponseResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.EligibilityResponseResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EligibilityResponseResIndexToken", "ix_System");
      DropIndex("dbo.EligibilityResponseResIndexToken", "ix_Code");
      DropIndex("dbo.EligibilityResponseResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.EligibilityResponseResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EligibilityResponseResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.EligibilityResponseResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.EligibilityResponseResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.EligibilityResponseResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EligibilityResponseResIndexQuantity", "ix_System");
      DropIndex("dbo.EligibilityResponseResIndexQuantity", "ix_Code");
      DropIndex("dbo.EligibilityResponseResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.EligibilityResponseResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EligibilityResponseResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.EligibilityResponseResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.EligibilityRequestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.EligibilityRequestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EligibilityRequestResIndexUri", "ix_Uri");
      DropIndex("dbo.EligibilityRequestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.EligibilityRequestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EligibilityRequestResIndexToken", "ix_System");
      DropIndex("dbo.EligibilityRequestResIndexToken", "ix_Code");
      DropIndex("dbo.EligibilityRequestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.EligibilityRequestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EligibilityRequestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.EligibilityRequestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.EligibilityRequestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.EligibilityRequestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EligibilityRequestResIndexQuantity", "ix_System");
      DropIndex("dbo.EligibilityRequestResIndexQuantity", "ix_Code");
      DropIndex("dbo.EligibilityRequestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.EligibilityRequestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.EligibilityRequestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.EligibilityRequestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.DocumentReferenceResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.DocumentReferenceResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DocumentReferenceResIndexUri", "ix_Uri");
      DropIndex("dbo.DocumentReferenceResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.DocumentReferenceResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DocumentReferenceResIndexToken", "ix_System");
      DropIndex("dbo.DocumentReferenceResIndexToken", "ix_Code");
      DropIndex("dbo.DocumentReferenceResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.DocumentReferenceResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DocumentReferenceResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.DocumentReferenceResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.DocumentReferenceResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.DocumentReferenceResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DocumentReferenceResIndexQuantity", "ix_System");
      DropIndex("dbo.DocumentReferenceResIndexQuantity", "ix_Code");
      DropIndex("dbo.DocumentReferenceResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.DocumentReferenceResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DocumentReferenceResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.DocumentReferenceResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.DocumentManifestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.DocumentManifestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DocumentManifestResIndexUri", "ix_Uri");
      DropIndex("dbo.DocumentManifestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.DocumentManifestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DocumentManifestResIndexToken", "ix_System");
      DropIndex("dbo.DocumentManifestResIndexToken", "ix_Code");
      DropIndex("dbo.DocumentManifestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.DocumentManifestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DocumentManifestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.DocumentManifestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.DocumentManifestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.DocumentManifestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DocumentManifestResIndexQuantity", "ix_System");
      DropIndex("dbo.DocumentManifestResIndexQuantity", "ix_Code");
      DropIndex("dbo.DocumentManifestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.DocumentManifestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DocumentManifestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.DocumentManifestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.DiagnosticReportResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.DiagnosticReportResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DiagnosticReportResIndexUri", "ix_Uri");
      DropIndex("dbo.DiagnosticReportResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.DiagnosticReportResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DiagnosticReportResIndexToken", "ix_System");
      DropIndex("dbo.DiagnosticReportResIndexToken", "ix_Code");
      DropIndex("dbo.DiagnosticReportResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.DiagnosticReportResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DiagnosticReportResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.DiagnosticReportResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.DiagnosticReportResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.DiagnosticReportResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DiagnosticReportResIndexQuantity", "ix_System");
      DropIndex("dbo.DiagnosticReportResIndexQuantity", "ix_Code");
      DropIndex("dbo.DiagnosticReportResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.DiagnosticReportResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DiagnosticReportResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.DiagnosticReportResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.DeviceUseStatementResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.DeviceUseStatementResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceUseStatementResIndexUri", "ix_Uri");
      DropIndex("dbo.DeviceUseStatementResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.DeviceUseStatementResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceUseStatementResIndexToken", "ix_System");
      DropIndex("dbo.DeviceUseStatementResIndexToken", "ix_Code");
      DropIndex("dbo.DeviceUseStatementResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.DeviceUseStatementResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceUseStatementResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.DeviceUseStatementResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.DeviceUseStatementResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.DeviceUseStatementResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceUseStatementResIndexQuantity", "ix_System");
      DropIndex("dbo.DeviceUseStatementResIndexQuantity", "ix_Code");
      DropIndex("dbo.DeviceUseStatementResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.DeviceUseStatementResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceUseStatementResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.DeviceUseStatementResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.DeviceRequestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.DeviceRequestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceRequestResIndexUri", "ix_Uri");
      DropIndex("dbo.DeviceRequestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.DeviceRequestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceRequestResIndexToken", "ix_System");
      DropIndex("dbo.DeviceRequestResIndexToken", "ix_Code");
      DropIndex("dbo.DeviceRequestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.DeviceRequestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceRequestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.DeviceRequestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.DeviceRequestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.DeviceRequestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceRequestResIndexQuantity", "ix_System");
      DropIndex("dbo.DeviceRequestResIndexQuantity", "ix_Code");
      DropIndex("dbo.DeviceRequestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.DeviceRequestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceRequestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.DeviceRequestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.DeviceMetricResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.DeviceMetricResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceMetricResIndexUri", "ix_Uri");
      DropIndex("dbo.DeviceMetricResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.DeviceMetricResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceMetricResIndexToken", "ix_System");
      DropIndex("dbo.DeviceMetricResIndexToken", "ix_Code");
      DropIndex("dbo.DeviceMetricResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.DeviceMetricResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceMetricResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.DeviceMetricResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.DeviceMetricResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.DeviceMetricResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceMetricResIndexQuantity", "ix_System");
      DropIndex("dbo.DeviceMetricResIndexQuantity", "ix_Code");
      DropIndex("dbo.DeviceMetricResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.DeviceMetricResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceMetricResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.DeviceMetricResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.DeviceComponentResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.DeviceComponentResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceComponentResIndexUri", "ix_Uri");
      DropIndex("dbo.DeviceComponentResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.DeviceComponentResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceComponentResIndexToken", "ix_System");
      DropIndex("dbo.DeviceComponentResIndexToken", "ix_Code");
      DropIndex("dbo.DeviceComponentResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.DeviceComponentResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceComponentResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.DeviceComponentResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.DeviceComponentResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.DeviceComponentResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceComponentResIndexQuantity", "ix_System");
      DropIndex("dbo.DeviceComponentResIndexQuantity", "ix_Code");
      DropIndex("dbo.DeviceComponentResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.DeviceComponentResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceComponentResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.DeviceComponentResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.DeviceResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.DeviceResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceResIndexUri", "ix_Uri");
      DropIndex("dbo.DeviceResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.DeviceResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceResIndexToken", "ix_System");
      DropIndex("dbo.DeviceResIndexToken", "ix_Code");
      DropIndex("dbo.DeviceResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.DeviceResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.DeviceResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.DeviceResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.DeviceResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceResIndexQuantity", "ix_System");
      DropIndex("dbo.DeviceResIndexQuantity", "ix_Code");
      DropIndex("dbo.DeviceResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.DeviceResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DeviceResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.DeviceResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.DetectedIssueResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.DetectedIssueResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DetectedIssueResIndexUri", "ix_Uri");
      DropIndex("dbo.DetectedIssueResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.DetectedIssueResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DetectedIssueResIndexToken", "ix_System");
      DropIndex("dbo.DetectedIssueResIndexToken", "ix_Code");
      DropIndex("dbo.DetectedIssueResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.DetectedIssueResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DetectedIssueResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.DetectedIssueResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.DetectedIssueResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.DetectedIssueResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DetectedIssueResIndexQuantity", "ix_System");
      DropIndex("dbo.DetectedIssueResIndexQuantity", "ix_Code");
      DropIndex("dbo.DetectedIssueResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.DetectedIssueResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DetectedIssueResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.DetectedIssueResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.DataElementResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.DataElementResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DataElementResIndexUri", "ix_Uri");
      DropIndex("dbo.DataElementResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.DataElementResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DataElementResIndexToken", "ix_System");
      DropIndex("dbo.DataElementResIndexToken", "ix_Code");
      DropIndex("dbo.DataElementResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.DataElementResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DataElementResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.DataElementResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.DataElementResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.DataElementResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DataElementResIndexQuantity", "ix_System");
      DropIndex("dbo.DataElementResIndexQuantity", "ix_Code");
      DropIndex("dbo.DataElementResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.DataElementResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.DataElementResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.DataElementResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.CoverageResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.CoverageResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CoverageResIndexUri", "ix_Uri");
      DropIndex("dbo.CoverageResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.CoverageResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CoverageResIndexToken", "ix_System");
      DropIndex("dbo.CoverageResIndexToken", "ix_Code");
      DropIndex("dbo.CoverageResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.CoverageResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CoverageResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.CoverageResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.CoverageResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.CoverageResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CoverageResIndexQuantity", "ix_System");
      DropIndex("dbo.CoverageResIndexQuantity", "ix_Code");
      DropIndex("dbo.CoverageResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.CoverageResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CoverageResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.CoverageResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ContractResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ContractResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ContractResIndexUri", "ix_Uri");
      DropIndex("dbo.ContractResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ContractResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ContractResIndexToken", "ix_System");
      DropIndex("dbo.ContractResIndexToken", "ix_Code");
      DropIndex("dbo.ContractResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ContractResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ContractResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ContractResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ContractResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ContractResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ContractResIndexQuantity", "ix_System");
      DropIndex("dbo.ContractResIndexQuantity", "ix_Code");
      DropIndex("dbo.ContractResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ContractResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ContractResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ContractResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ConsentResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ConsentResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConsentResIndexUri", "ix_Uri");
      DropIndex("dbo.ConsentResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ConsentResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConsentResIndexToken", "ix_System");
      DropIndex("dbo.ConsentResIndexToken", "ix_Code");
      DropIndex("dbo.ConsentResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ConsentResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConsentResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ConsentResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ConsentResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ConsentResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConsentResIndexQuantity", "ix_System");
      DropIndex("dbo.ConsentResIndexQuantity", "ix_Code");
      DropIndex("dbo.ConsentResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ConsentResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConsentResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ConsentResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ConditionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ConditionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConditionResIndexUri", "ix_Uri");
      DropIndex("dbo.ConditionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ConditionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConditionResIndexToken", "ix_System");
      DropIndex("dbo.ConditionResIndexToken", "ix_Code");
      DropIndex("dbo.ConditionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ConditionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConditionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ConditionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ConditionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ConditionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConditionResIndexQuantity", "ix_System");
      DropIndex("dbo.ConditionResIndexQuantity", "ix_Code");
      DropIndex("dbo.ConditionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ConditionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConditionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ConditionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ConceptMapResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ConceptMapResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConceptMapResIndexUri", "ix_Uri");
      DropIndex("dbo.ConceptMapResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ConceptMapResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConceptMapResIndexToken", "ix_System");
      DropIndex("dbo.ConceptMapResIndexToken", "ix_Code");
      DropIndex("dbo.ConceptMapResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ConceptMapResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConceptMapResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ConceptMapResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ConceptMapResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ConceptMapResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConceptMapResIndexQuantity", "ix_System");
      DropIndex("dbo.ConceptMapResIndexQuantity", "ix_Code");
      DropIndex("dbo.ConceptMapResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ConceptMapResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ConceptMapResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ConceptMapResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.CompositionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.CompositionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CompositionResIndexUri", "ix_Uri");
      DropIndex("dbo.CompositionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.CompositionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CompositionResIndexToken", "ix_System");
      DropIndex("dbo.CompositionResIndexToken", "ix_Code");
      DropIndex("dbo.CompositionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.CompositionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CompositionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.CompositionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.CompositionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.CompositionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CompositionResIndexQuantity", "ix_System");
      DropIndex("dbo.CompositionResIndexQuantity", "ix_Code");
      DropIndex("dbo.CompositionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.CompositionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CompositionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.CompositionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.CompartmentDefinitionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.CompartmentDefinitionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CompartmentDefinitionResIndexUri", "ix_Uri");
      DropIndex("dbo.CompartmentDefinitionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.CompartmentDefinitionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CompartmentDefinitionResIndexToken", "ix_System");
      DropIndex("dbo.CompartmentDefinitionResIndexToken", "ix_Code");
      DropIndex("dbo.CompartmentDefinitionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.CompartmentDefinitionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CompartmentDefinitionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.CompartmentDefinitionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.CompartmentDefinitionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.CompartmentDefinitionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CompartmentDefinitionResIndexQuantity", "ix_System");
      DropIndex("dbo.CompartmentDefinitionResIndexQuantity", "ix_Code");
      DropIndex("dbo.CompartmentDefinitionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.CompartmentDefinitionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CompartmentDefinitionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.CompartmentDefinitionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.CommunicationRequestResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.CommunicationRequestResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CommunicationRequestResIndexUri", "ix_Uri");
      DropIndex("dbo.CommunicationRequestResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.CommunicationRequestResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CommunicationRequestResIndexToken", "ix_System");
      DropIndex("dbo.CommunicationRequestResIndexToken", "ix_Code");
      DropIndex("dbo.CommunicationRequestResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.CommunicationRequestResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CommunicationRequestResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.CommunicationRequestResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.CommunicationRequestResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.CommunicationRequestResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CommunicationRequestResIndexQuantity", "ix_System");
      DropIndex("dbo.CommunicationRequestResIndexQuantity", "ix_Code");
      DropIndex("dbo.CommunicationRequestResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.CommunicationRequestResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CommunicationRequestResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.CommunicationRequestResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.CommunicationResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.CommunicationResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CommunicationResIndexUri", "ix_Uri");
      DropIndex("dbo.CommunicationResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.CommunicationResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CommunicationResIndexToken", "ix_System");
      DropIndex("dbo.CommunicationResIndexToken", "ix_Code");
      DropIndex("dbo.CommunicationResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.CommunicationResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CommunicationResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.CommunicationResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.CommunicationResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.CommunicationResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CommunicationResIndexQuantity", "ix_System");
      DropIndex("dbo.CommunicationResIndexQuantity", "ix_Code");
      DropIndex("dbo.CommunicationResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.CommunicationResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CommunicationResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.CommunicationResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.CodeSystemResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.CodeSystemResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CodeSystemResIndexUri", "ix_Uri");
      DropIndex("dbo.CodeSystemResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.CodeSystemResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CodeSystemResIndexToken", "ix_System");
      DropIndex("dbo.CodeSystemResIndexToken", "ix_Code");
      DropIndex("dbo.CodeSystemResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.CodeSystemResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CodeSystemResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.CodeSystemResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.CodeSystemResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.CodeSystemResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CodeSystemResIndexQuantity", "ix_System");
      DropIndex("dbo.CodeSystemResIndexQuantity", "ix_Code");
      DropIndex("dbo.CodeSystemResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.CodeSystemResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CodeSystemResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.CodeSystemResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ClinicalImpressionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ClinicalImpressionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClinicalImpressionResIndexUri", "ix_Uri");
      DropIndex("dbo.ClinicalImpressionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ClinicalImpressionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClinicalImpressionResIndexToken", "ix_System");
      DropIndex("dbo.ClinicalImpressionResIndexToken", "ix_Code");
      DropIndex("dbo.ClinicalImpressionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ClinicalImpressionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClinicalImpressionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ClinicalImpressionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ClinicalImpressionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ClinicalImpressionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClinicalImpressionResIndexQuantity", "ix_System");
      DropIndex("dbo.ClinicalImpressionResIndexQuantity", "ix_Code");
      DropIndex("dbo.ClinicalImpressionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ClinicalImpressionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClinicalImpressionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ClinicalImpressionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ClaimResponseResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ClaimResponseResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClaimResponseResIndexUri", "ix_Uri");
      DropIndex("dbo.ClaimResponseResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ClaimResponseResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClaimResponseResIndexToken", "ix_System");
      DropIndex("dbo.ClaimResponseResIndexToken", "ix_Code");
      DropIndex("dbo.ClaimResponseResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ClaimResponseResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClaimResponseResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ClaimResponseResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ClaimResponseResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ClaimResponseResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClaimResponseResIndexQuantity", "ix_System");
      DropIndex("dbo.ClaimResponseResIndexQuantity", "ix_Code");
      DropIndex("dbo.ClaimResponseResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ClaimResponseResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClaimResponseResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ClaimResponseResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ClaimResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ClaimResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClaimResIndexUri", "ix_Uri");
      DropIndex("dbo.ClaimResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ClaimResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClaimResIndexToken", "ix_System");
      DropIndex("dbo.ClaimResIndexToken", "ix_Code");
      DropIndex("dbo.ClaimResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ClaimResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClaimResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ClaimResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ClaimResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ClaimResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClaimResIndexQuantity", "ix_System");
      DropIndex("dbo.ClaimResIndexQuantity", "ix_Code");
      DropIndex("dbo.ClaimResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ClaimResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ClaimResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ClaimResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ChargeItemResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ChargeItemResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ChargeItemResIndexUri", "ix_Uri");
      DropIndex("dbo.ChargeItemResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ChargeItemResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ChargeItemResIndexToken", "ix_System");
      DropIndex("dbo.ChargeItemResIndexToken", "ix_Code");
      DropIndex("dbo.ChargeItemResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ChargeItemResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ChargeItemResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ChargeItemResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ChargeItemResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ChargeItemResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ChargeItemResIndexQuantity", "ix_System");
      DropIndex("dbo.ChargeItemResIndexQuantity", "ix_Code");
      DropIndex("dbo.ChargeItemResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ChargeItemResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ChargeItemResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ChargeItemResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.CareTeamResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.CareTeamResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CareTeamResIndexUri", "ix_Uri");
      DropIndex("dbo.CareTeamResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.CareTeamResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CareTeamResIndexToken", "ix_System");
      DropIndex("dbo.CareTeamResIndexToken", "ix_Code");
      DropIndex("dbo.CareTeamResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.CareTeamResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CareTeamResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.CareTeamResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.CareTeamResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.CareTeamResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CareTeamResIndexQuantity", "ix_System");
      DropIndex("dbo.CareTeamResIndexQuantity", "ix_Code");
      DropIndex("dbo.CareTeamResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.CareTeamResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CareTeamResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.CareTeamResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.CarePlanResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.CarePlanResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CarePlanResIndexUri", "ix_Uri");
      DropIndex("dbo.CarePlanResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.CarePlanResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CarePlanResIndexToken", "ix_System");
      DropIndex("dbo.CarePlanResIndexToken", "ix_Code");
      DropIndex("dbo.CarePlanResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.CarePlanResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CarePlanResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.CarePlanResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.CarePlanResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.CarePlanResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CarePlanResIndexQuantity", "ix_System");
      DropIndex("dbo.CarePlanResIndexQuantity", "ix_Code");
      DropIndex("dbo.CarePlanResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.CarePlanResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CarePlanResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.CarePlanResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.CapabilityStatementResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.CapabilityStatementResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CapabilityStatementResIndexUri", "ix_Uri");
      DropIndex("dbo.CapabilityStatementResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.CapabilityStatementResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CapabilityStatementResIndexToken", "ix_System");
      DropIndex("dbo.CapabilityStatementResIndexToken", "ix_Code");
      DropIndex("dbo.CapabilityStatementResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.CapabilityStatementResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CapabilityStatementResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.CapabilityStatementResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.CapabilityStatementResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.CapabilityStatementResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CapabilityStatementResIndexQuantity", "ix_System");
      DropIndex("dbo.CapabilityStatementResIndexQuantity", "ix_Code");
      DropIndex("dbo.CapabilityStatementResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.CapabilityStatementResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.CapabilityStatementResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.CapabilityStatementResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.BundleResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.BundleResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BundleResIndexUri", "ix_Uri");
      DropIndex("dbo.BundleResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.BundleResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BundleResIndexToken", "ix_System");
      DropIndex("dbo.BundleResIndexToken", "ix_Code");
      DropIndex("dbo.BundleResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.BundleResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BundleResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.BundleResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.BundleResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.BundleResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BundleResIndexQuantity", "ix_System");
      DropIndex("dbo.BundleResIndexQuantity", "ix_Code");
      DropIndex("dbo.BundleResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.BundleResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BundleResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.BundleResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.BodySiteResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.BodySiteResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BodySiteResIndexUri", "ix_Uri");
      DropIndex("dbo.BodySiteResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.BodySiteResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BodySiteResIndexToken", "ix_System");
      DropIndex("dbo.BodySiteResIndexToken", "ix_Code");
      DropIndex("dbo.BodySiteResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.BodySiteResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BodySiteResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.BodySiteResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.BodySiteResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.BodySiteResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BodySiteResIndexQuantity", "ix_System");
      DropIndex("dbo.BodySiteResIndexQuantity", "ix_Code");
      DropIndex("dbo.BodySiteResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.BodySiteResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BodySiteResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.BodySiteResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.BinaryResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.BinaryResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BinaryResIndexUri", "ix_Uri");
      DropIndex("dbo.BinaryResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.BinaryResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BinaryResIndexToken", "ix_System");
      DropIndex("dbo.BinaryResIndexToken", "ix_Code");
      DropIndex("dbo.BinaryResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.BinaryResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BinaryResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.BinaryResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.BinaryResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.BinaryResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BinaryResIndexQuantity", "ix_System");
      DropIndex("dbo.BinaryResIndexQuantity", "ix_Code");
      DropIndex("dbo.BinaryResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.BinaryResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BinaryResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.BinaryResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.BasicResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.BasicResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BasicResIndexUri", "ix_Uri");
      DropIndex("dbo.BasicResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.BasicResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BasicResIndexToken", "ix_System");
      DropIndex("dbo.BasicResIndexToken", "ix_Code");
      DropIndex("dbo.BasicResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.BasicResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BasicResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.BasicResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.BasicResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.BasicResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BasicResIndexQuantity", "ix_System");
      DropIndex("dbo.BasicResIndexQuantity", "ix_Code");
      DropIndex("dbo.BasicResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.BasicResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.BasicResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.BasicResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.AuditEventResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.AuditEventResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AuditEventResIndexUri", "ix_Uri");
      DropIndex("dbo.AuditEventResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.AuditEventResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AuditEventResIndexToken", "ix_System");
      DropIndex("dbo.AuditEventResIndexToken", "ix_Code");
      DropIndex("dbo.AuditEventResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.AuditEventResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AuditEventResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.AuditEventResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.AuditEventResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.AuditEventResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AuditEventResIndexQuantity", "ix_System");
      DropIndex("dbo.AuditEventResIndexQuantity", "ix_Code");
      DropIndex("dbo.AuditEventResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.AuditEventResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AuditEventResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.AuditEventResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.AppointmentResponseResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.AppointmentResponseResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AppointmentResponseResIndexUri", "ix_Uri");
      DropIndex("dbo.AppointmentResponseResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.AppointmentResponseResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AppointmentResponseResIndexToken", "ix_System");
      DropIndex("dbo.AppointmentResponseResIndexToken", "ix_Code");
      DropIndex("dbo.AppointmentResponseResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.AppointmentResponseResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AppointmentResponseResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.AppointmentResponseResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.AppointmentResponseResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.AppointmentResponseResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AppointmentResponseResIndexQuantity", "ix_System");
      DropIndex("dbo.AppointmentResponseResIndexQuantity", "ix_Code");
      DropIndex("dbo.AppointmentResponseResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.AppointmentResponseResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AppointmentResponseResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.AppointmentResponseResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.AppointmentResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.AppointmentResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AppointmentResIndexUri", "ix_Uri");
      DropIndex("dbo.AppointmentResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.AppointmentResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AppointmentResIndexToken", "ix_System");
      DropIndex("dbo.AppointmentResIndexToken", "ix_Code");
      DropIndex("dbo.AppointmentResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.AppointmentResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AppointmentResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.AppointmentResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.AppointmentResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.AppointmentResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AppointmentResIndexQuantity", "ix_System");
      DropIndex("dbo.AppointmentResIndexQuantity", "ix_Code");
      DropIndex("dbo.AppointmentResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.AppointmentResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AppointmentResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.AppointmentResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.AllergyIntoleranceResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.AllergyIntoleranceResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AllergyIntoleranceResIndexUri", "ix_Uri");
      DropIndex("dbo.AllergyIntoleranceResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.AllergyIntoleranceResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AllergyIntoleranceResIndexToken", "ix_System");
      DropIndex("dbo.AllergyIntoleranceResIndexToken", "ix_Code");
      DropIndex("dbo.AllergyIntoleranceResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.AllergyIntoleranceResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AllergyIntoleranceResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.AllergyIntoleranceResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.AllergyIntoleranceResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.AllergyIntoleranceResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AllergyIntoleranceResIndexQuantity", "ix_System");
      DropIndex("dbo.AllergyIntoleranceResIndexQuantity", "ix_Code");
      DropIndex("dbo.AllergyIntoleranceResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.AllergyIntoleranceResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AllergyIntoleranceResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.AllergyIntoleranceResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.AdverseEventResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.AdverseEventResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AdverseEventResIndexUri", "ix_Uri");
      DropIndex("dbo.AdverseEventResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.AdverseEventResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AdverseEventResIndexToken", "ix_System");
      DropIndex("dbo.AdverseEventResIndexToken", "ix_Code");
      DropIndex("dbo.AdverseEventResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.AdverseEventResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AdverseEventResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.AdverseEventResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.AdverseEventResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.AdverseEventResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AdverseEventResIndexQuantity", "ix_System");
      DropIndex("dbo.AdverseEventResIndexQuantity", "ix_Code");
      DropIndex("dbo.AdverseEventResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.AdverseEventResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AdverseEventResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.AdverseEventResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.ActivityDefinitionResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.ActivityDefinitionResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ActivityDefinitionResIndexUri", "ix_Uri");
      DropIndex("dbo.ActivityDefinitionResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.ActivityDefinitionResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ActivityDefinitionResIndexToken", "ix_System");
      DropIndex("dbo.ActivityDefinitionResIndexToken", "ix_Code");
      DropIndex("dbo.ActivityDefinitionResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.ActivityDefinitionResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ActivityDefinitionResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.ActivityDefinitionResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.ActivityDefinitionResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.ActivityDefinitionResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ActivityDefinitionResIndexQuantity", "ix_System");
      DropIndex("dbo.ActivityDefinitionResIndexQuantity", "ix_Code");
      DropIndex("dbo.ActivityDefinitionResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.ActivityDefinitionResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.ActivityDefinitionResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.ActivityDefinitionResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropIndex("dbo.AccountResIndexUri", new[] { "ResourceId" });
      DropIndex("dbo.AccountResIndexUri", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AccountResIndexUri", "ix_Uri");
      DropIndex("dbo.AccountResIndexToken", new[] { "ResourceId" });
      DropIndex("dbo.AccountResIndexToken", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AccountResIndexToken", "ix_System");
      DropIndex("dbo.AccountResIndexToken", "ix_Code");
      DropIndex("dbo.AccountResIndexReference", new[] { "ResourceId" });
      DropIndex("dbo.AccountResIndexReference", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AccountResIndexReference", "ix_ReferenceServiceBaseUrlId");
      DropIndex("dbo.AccountResIndexReference", "ix_ReferenceFhirId");
      DropIndex("dbo.AccountResIndexQuantity", new[] { "ResourceId" });
      DropIndex("dbo.AccountResIndexQuantity", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AccountResIndexQuantity", "ix_System");
      DropIndex("dbo.AccountResIndexQuantity", "ix_Code");
      DropIndex("dbo.AccountResIndexDateTime", new[] { "ResourceId" });
      DropIndex("dbo.AccountResIndexDateTime", "ix_ServiceSearchParameterId");
      DropIndex("dbo.AccountResIndexDateTime", "ix_DateTimeOffsetLow");
      DropIndex("dbo.AccountResIndexDateTime", "ix_DateTimeOffsetHigh");
      DropTable("dbo.VisionPrescriptionResIndexUri");
      DropTable("dbo.VisionPrescriptionResIndexToken");
      DropTable("dbo.VisionPrescriptionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.VisionPrescriptionResIndexQuantity");
      DropTable("dbo.VisionPrescriptionResIndexDateTime");
      DropTable("dbo.ValueSetResIndexUri");
      DropTable("dbo.ValueSetResIndexToken");
      DropTable("dbo.ValueSetResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ValueSetResIndexQuantity");
      DropTable("dbo.ValueSetResIndexDateTime");
      DropTable("dbo.TestScriptResIndexUri");
      DropTable("dbo.TestScriptResIndexToken");
      DropTable("dbo.TestScriptResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.TestScriptResIndexQuantity");
      DropTable("dbo.TestScriptResIndexDateTime");
      DropTable("dbo.TestReportResIndexUri");
      DropTable("dbo.TestReportResIndexToken");
      DropTable("dbo.TestReportResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.TestReportResIndexQuantity");
      DropTable("dbo.TestReportResIndexDateTime");
      DropTable("dbo.TaskResIndexUri");
      DropTable("dbo.TaskResIndexToken");
      DropTable("dbo.TaskResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.TaskResIndexQuantity");
      DropTable("dbo.TaskResIndexDateTime");
      DropTable("dbo.SupplyRequestResIndexUri");
      DropTable("dbo.SupplyRequestResIndexToken");
      DropTable("dbo.SupplyRequestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.SupplyRequestResIndexQuantity");
      DropTable("dbo.SupplyRequestResIndexDateTime");
      DropTable("dbo.SupplyDeliveryResIndexUri");
      DropTable("dbo.SupplyDeliveryResIndexToken");
      DropTable("dbo.SupplyDeliveryResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.SupplyDeliveryResIndexQuantity");
      DropTable("dbo.SupplyDeliveryResIndexDateTime");
      DropTable("dbo.SubstanceResIndexUri");
      DropTable("dbo.SubstanceResIndexToken");
      DropTable("dbo.SubstanceResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.SubstanceResIndexQuantity");
      DropTable("dbo.SubstanceResIndexDateTime");
      DropTable("dbo.SubscriptionResIndexUri");
      DropTable("dbo.SubscriptionResIndexToken");
      DropTable("dbo.SubscriptionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.SubscriptionResIndexQuantity");
      DropTable("dbo.SubscriptionResIndexDateTime");
      DropTable("dbo.StructureMapResIndexUri");
      DropTable("dbo.StructureMapResIndexToken");
      DropTable("dbo.StructureMapResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.StructureMapResIndexQuantity");
      DropTable("dbo.StructureMapResIndexDateTime");
      DropTable("dbo.StructureDefinitionResIndexUri");
      DropTable("dbo.StructureDefinitionResIndexToken");
      DropTable("dbo.StructureDefinitionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.StructureDefinitionResIndexQuantity");
      DropTable("dbo.StructureDefinitionResIndexDateTime");
      DropTable("dbo.SpecimenResIndexUri");
      DropTable("dbo.SpecimenResIndexToken");
      DropTable("dbo.SpecimenResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.SpecimenResIndexQuantity");
      DropTable("dbo.SpecimenResIndexDateTime");
      DropTable("dbo.SlotResIndexUri");
      DropTable("dbo.SlotResIndexToken");
      DropTable("dbo.SlotResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.SlotResIndexQuantity");
      DropTable("dbo.SlotResIndexDateTime");
      DropTable("dbo.ServiceDefinitionResIndexUri");
      DropTable("dbo.ServiceDefinitionResIndexToken");
      DropTable("dbo.ServiceDefinitionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ServiceDefinitionResIndexQuantity");
      DropTable("dbo.ServiceDefinitionResIndexDateTime");
      DropTable("dbo.SequenceResIndexUri");
      DropTable("dbo.SequenceResIndexToken");
      DropTable("dbo.SequenceResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.SequenceResIndexQuantity");
      DropTable("dbo.SequenceResIndexDateTime");
      DropTable("dbo.SearchParameterResIndexUri");
      DropTable("dbo.SearchParameterResIndexToken");
      DropTable("dbo.SearchParameterResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.SearchParameterResIndexQuantity");
      DropTable("dbo.SearchParameterResIndexDateTime");
      DropTable("dbo.ScheduleResIndexUri");
      DropTable("dbo.ScheduleResIndexToken");
      DropTable("dbo.ScheduleResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ScheduleResIndexQuantity");
      DropTable("dbo.ScheduleResIndexDateTime");
      DropTable("dbo.RiskAssessmentResIndexUri");
      DropTable("dbo.RiskAssessmentResIndexToken");
      DropTable("dbo.RiskAssessmentResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.RiskAssessmentResIndexQuantity");
      DropTable("dbo.RiskAssessmentResIndexDateTime");
      DropTable("dbo.ResearchSubjectResIndexUri");
      DropTable("dbo.ResearchSubjectResIndexToken");
      DropTable("dbo.ResearchSubjectResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ResearchSubjectResIndexQuantity");
      DropTable("dbo.ResearchSubjectResIndexDateTime");
      DropTable("dbo.ResearchStudyResIndexUri");
      DropTable("dbo.ResearchStudyResIndexToken");
      DropTable("dbo.ResearchStudyResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ResearchStudyResIndexQuantity");
      DropTable("dbo.ResearchStudyResIndexDateTime");
      DropTable("dbo.RequestGroupResIndexUri");
      DropTable("dbo.RequestGroupResIndexToken");
      DropTable("dbo.RequestGroupResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.RequestGroupResIndexQuantity");
      DropTable("dbo.RequestGroupResIndexDateTime");
      DropTable("dbo.RelatedPersonResIndexUri");
      DropTable("dbo.RelatedPersonResIndexToken");
      DropTable("dbo.RelatedPersonResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.RelatedPersonResIndexQuantity");
      DropTable("dbo.RelatedPersonResIndexDateTime");
      DropTable("dbo.ReferralRequestResIndexUri");
      DropTable("dbo.ReferralRequestResIndexToken");
      DropTable("dbo.ReferralRequestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ReferralRequestResIndexQuantity");
      DropTable("dbo.ReferralRequestResIndexDateTime");
      DropTable("dbo.QuestionnaireResponseResIndexUri");
      DropTable("dbo.QuestionnaireResponseResIndexToken");
      DropTable("dbo.QuestionnaireResponseResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.QuestionnaireResponseResIndexQuantity");
      DropTable("dbo.QuestionnaireResponseResIndexDateTime");
      DropTable("dbo.QuestionnaireResIndexUri");
      DropTable("dbo.QuestionnaireResIndexToken");
      DropTable("dbo.QuestionnaireResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.QuestionnaireResIndexQuantity");
      DropTable("dbo.QuestionnaireResIndexDateTime");
      DropTable("dbo.ProvenanceResIndexUri");
      DropTable("dbo.ProvenanceResIndexToken");
      DropTable("dbo.ProvenanceResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ProvenanceResIndexQuantity");
      DropTable("dbo.ProvenanceResIndexDateTime");
      DropTable("dbo.ProcessResponseResIndexUri");
      DropTable("dbo.ProcessResponseResIndexToken");
      DropTable("dbo.ProcessResponseResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ProcessResponseResIndexQuantity");
      DropTable("dbo.ProcessResponseResIndexDateTime");
      DropTable("dbo.ProcessRequestResIndexUri");
      DropTable("dbo.ProcessRequestResIndexToken");
      DropTable("dbo.ProcessRequestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ProcessRequestResIndexQuantity");
      DropTable("dbo.ProcessRequestResIndexDateTime");
      DropTable("dbo.ProcedureRequestResIndexUri");
      DropTable("dbo.ProcedureRequestResIndexToken");
      DropTable("dbo.ProcedureRequestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ProcedureRequestResIndexQuantity");
      DropTable("dbo.ProcedureRequestResIndexDateTime");
      DropTable("dbo.ProcedureResIndexUri");
      DropTable("dbo.ProcedureResIndexToken");
      DropTable("dbo.ProcedureResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ProcedureResIndexQuantity");
      DropTable("dbo.ProcedureResIndexDateTime");
      DropTable("dbo.PractitionerRoleResIndexUri");
      DropTable("dbo.PractitionerRoleResIndexToken");
      DropTable("dbo.PractitionerRoleResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.PractitionerRoleResIndexQuantity");
      DropTable("dbo.PractitionerRoleResIndexDateTime");
      DropTable("dbo.PractitionerResIndexUri");
      DropTable("dbo.PractitionerResIndexToken");
      DropTable("dbo.PractitionerResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.PractitionerResIndexQuantity");
      DropTable("dbo.PractitionerResIndexDateTime");
      DropTable("dbo.PlanDefinitionResIndexUri");
      DropTable("dbo.PlanDefinitionResIndexToken");
      DropTable("dbo.PlanDefinitionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.PlanDefinitionResIndexQuantity");
      DropTable("dbo.PlanDefinitionResIndexDateTime");
      DropTable("dbo.PersonResIndexUri");
      DropTable("dbo.PersonResIndexToken");
      DropTable("dbo.PersonResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.PersonResIndexQuantity");
      DropTable("dbo.PersonResIndexDateTime");
      DropTable("dbo.PaymentReconciliationResIndexUri");
      DropTable("dbo.PaymentReconciliationResIndexToken");
      DropTable("dbo.PaymentReconciliationResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.PaymentReconciliationResIndexQuantity");
      DropTable("dbo.PaymentReconciliationResIndexDateTime");
      DropTable("dbo.PaymentNoticeResIndexUri");
      DropTable("dbo.PaymentNoticeResIndexToken");
      DropTable("dbo.PaymentNoticeResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.PaymentNoticeResIndexQuantity");
      DropTable("dbo.PaymentNoticeResIndexDateTime");
      DropTable("dbo.PatientResIndexUri");
      DropTable("dbo.PatientResIndexToken");
      DropTable("dbo.PatientResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.PatientResIndexQuantity");
      DropTable("dbo.PatientResIndexDateTime");
      DropTable("dbo.ParametersResIndexUri");
      DropTable("dbo.ParametersResIndexToken");
      DropTable("dbo.ParametersResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ParametersResIndexQuantity");
      DropTable("dbo.ParametersResIndexDateTime");
      DropTable("dbo.OrganizationResIndexUri");
      DropTable("dbo.OrganizationResIndexToken");
      DropTable("dbo.OrganizationResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.OrganizationResIndexQuantity");
      DropTable("dbo.OrganizationResIndexDateTime");
      DropTable("dbo.OperationOutcomeResIndexUri");
      DropTable("dbo.OperationOutcomeResIndexToken");
      DropTable("dbo.OperationOutcomeResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.OperationOutcomeResIndexQuantity");
      DropTable("dbo.OperationOutcomeResIndexDateTime");
      DropTable("dbo.OperationDefinitionResIndexUri");
      DropTable("dbo.OperationDefinitionResIndexToken");
      DropTable("dbo.OperationDefinitionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.OperationDefinitionResIndexQuantity");
      DropTable("dbo.OperationDefinitionResIndexDateTime");
      DropTable("dbo.ObservationResIndexUri");
      DropTable("dbo.ObservationResIndexToken");
      DropTable("dbo.ObservationResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ObservationResIndexQuantity");
      DropTable("dbo.ObservationResIndexDateTime");
      DropTable("dbo.NutritionOrderResIndexUri");
      DropTable("dbo.NutritionOrderResIndexToken");
      DropTable("dbo.NutritionOrderResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.NutritionOrderResIndexQuantity");
      DropTable("dbo.NutritionOrderResIndexDateTime");
      DropTable("dbo.NamingSystemResIndexUri");
      DropTable("dbo.NamingSystemResIndexToken");
      DropTable("dbo.NamingSystemResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.NamingSystemResIndexQuantity");
      DropTable("dbo.NamingSystemResIndexDateTime");
      DropTable("dbo.MessageHeaderResIndexUri");
      DropTable("dbo.MessageHeaderResIndexToken");
      DropTable("dbo.MessageHeaderResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.MessageHeaderResIndexQuantity");
      DropTable("dbo.MessageHeaderResIndexDateTime");
      DropTable("dbo.MessageDefinitionResIndexUri");
      DropTable("dbo.MessageDefinitionResIndexToken");
      DropTable("dbo.MessageDefinitionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.MessageDefinitionResIndexQuantity");
      DropTable("dbo.MessageDefinitionResIndexDateTime");
      DropTable("dbo.MedicationStatementResIndexUri");
      DropTable("dbo.MedicationStatementResIndexToken");
      DropTable("dbo.MedicationStatementResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.MedicationStatementResIndexQuantity");
      DropTable("dbo.MedicationStatementResIndexDateTime");
      DropTable("dbo.MedicationRequestResIndexUri");
      DropTable("dbo.MedicationRequestResIndexToken");
      DropTable("dbo.MedicationRequestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.MedicationRequestResIndexQuantity");
      DropTable("dbo.MedicationRequestResIndexDateTime");
      DropTable("dbo.MedicationDispenseResIndexUri");
      DropTable("dbo.MedicationDispenseResIndexToken");
      DropTable("dbo.MedicationDispenseResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.MedicationDispenseResIndexQuantity");
      DropTable("dbo.MedicationDispenseResIndexDateTime");
      DropTable("dbo.MedicationAdministrationResIndexUri");
      DropTable("dbo.MedicationAdministrationResIndexToken");
      DropTable("dbo.MedicationAdministrationResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.MedicationAdministrationResIndexQuantity");
      DropTable("dbo.MedicationAdministrationResIndexDateTime");
      DropTable("dbo.MedicationResIndexUri");
      DropTable("dbo.MedicationResIndexToken");
      DropTable("dbo.MedicationResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.MedicationResIndexQuantity");
      DropTable("dbo.MedicationResIndexDateTime");
      DropTable("dbo.MediaResIndexUri");
      DropTable("dbo.MediaResIndexToken");
      DropTable("dbo.MediaResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.MediaResIndexQuantity");
      DropTable("dbo.MediaResIndexDateTime");
      DropTable("dbo.MeasureReportResIndexUri");
      DropTable("dbo.MeasureReportResIndexToken");
      DropTable("dbo.MeasureReportResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.MeasureReportResIndexQuantity");
      DropTable("dbo.MeasureReportResIndexDateTime");
      DropTable("dbo.MeasureResIndexUri");
      DropTable("dbo.MeasureResIndexToken");
      DropTable("dbo.MeasureResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.MeasureResIndexQuantity");
      DropTable("dbo.MeasureResIndexDateTime");
      DropTable("dbo.LocationResIndexUri");
      DropTable("dbo.LocationResIndexToken");
      DropTable("dbo.LocationResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.LocationResIndexQuantity");
      DropTable("dbo.LocationResIndexDateTime");
      DropTable("dbo.ListResIndexUri");
      DropTable("dbo.ListResIndexToken");
      DropTable("dbo.ListResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ListResIndexQuantity");
      DropTable("dbo.ListResIndexDateTime");
      DropTable("dbo.LinkageResIndexUri");
      DropTable("dbo.LinkageResIndexToken");
      DropTable("dbo.LinkageResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.LinkageResIndexQuantity");
      DropTable("dbo.LinkageResIndexDateTime");
      DropTable("dbo.LibraryResIndexUri");
      DropTable("dbo.LibraryResIndexToken");
      DropTable("dbo.LibraryResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.LibraryResIndexQuantity");
      DropTable("dbo.LibraryResIndexDateTime");
      DropTable("dbo.ImplementationGuideResIndexUri");
      DropTable("dbo.ImplementationGuideResIndexToken");
      DropTable("dbo.ImplementationGuideResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ImplementationGuideResIndexQuantity");
      DropTable("dbo.ImplementationGuideResIndexDateTime");
      DropTable("dbo.ImmunizationRecommendationResIndexUri");
      DropTable("dbo.ImmunizationRecommendationResIndexToken");
      DropTable("dbo.ImmunizationRecommendationResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ImmunizationRecommendationResIndexQuantity");
      DropTable("dbo.ImmunizationRecommendationResIndexDateTime");
      DropTable("dbo.ImmunizationResIndexUri");
      DropTable("dbo.ImmunizationResIndexToken");
      DropTable("dbo.ImmunizationResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ImmunizationResIndexQuantity");
      DropTable("dbo.ImmunizationResIndexDateTime");
      DropTable("dbo.ImagingStudyResIndexUri");
      DropTable("dbo.ImagingStudyResIndexToken");
      DropTable("dbo.ImagingStudyResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ImagingStudyResIndexQuantity");
      DropTable("dbo.ImagingStudyResIndexDateTime");
      DropTable("dbo.ImagingManifestResIndexUri");
      DropTable("dbo.ImagingManifestResIndexToken");
      DropTable("dbo.ImagingManifestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ImagingManifestResIndexQuantity");
      DropTable("dbo.ImagingManifestResIndexDateTime");
      DropTable("dbo.HealthcareServiceResIndexUri");
      DropTable("dbo.HealthcareServiceResIndexToken");
      DropTable("dbo.HealthcareServiceResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.HealthcareServiceResIndexQuantity");
      DropTable("dbo.HealthcareServiceResIndexDateTime");
      DropTable("dbo.GuidanceResponseResIndexUri");
      DropTable("dbo.GuidanceResponseResIndexToken");
      DropTable("dbo.GuidanceResponseResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.GuidanceResponseResIndexQuantity");
      DropTable("dbo.GuidanceResponseResIndexDateTime");
      DropTable("dbo.GroupResIndexUri");
      DropTable("dbo.GroupResIndexToken");
      DropTable("dbo.GroupResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.GroupResIndexQuantity");
      DropTable("dbo.GroupResIndexDateTime");
      DropTable("dbo.GraphDefinitionResIndexUri");
      DropTable("dbo.GraphDefinitionResIndexToken");
      DropTable("dbo.GraphDefinitionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.GraphDefinitionResIndexQuantity");
      DropTable("dbo.GraphDefinitionResIndexDateTime");
      DropTable("dbo.GoalResIndexUri");
      DropTable("dbo.GoalResIndexToken");
      DropTable("dbo.GoalResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.GoalResIndexQuantity");
      DropTable("dbo.GoalResIndexDateTime");
      DropTable("dbo.FlagResIndexUri");
      DropTable("dbo.FlagResIndexToken");
      DropTable("dbo.FlagResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.FlagResIndexQuantity");
      DropTable("dbo.FlagResIndexDateTime");
      DropTable("dbo.FamilyMemberHistoryResIndexUri");
      DropTable("dbo.FamilyMemberHistoryResIndexToken");
      DropTable("dbo.FamilyMemberHistoryResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.FamilyMemberHistoryResIndexQuantity");
      DropTable("dbo.FamilyMemberHistoryResIndexDateTime");
      DropTable("dbo.ExplanationOfBenefitResIndexUri");
      DropTable("dbo.ExplanationOfBenefitResIndexToken");
      DropTable("dbo.ExplanationOfBenefitResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ExplanationOfBenefitResIndexQuantity");
      DropTable("dbo.ExplanationOfBenefitResIndexDateTime");
      DropTable("dbo.ExpansionProfileResIndexUri");
      DropTable("dbo.ExpansionProfileResIndexToken");
      DropTable("dbo.ExpansionProfileResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ExpansionProfileResIndexQuantity");
      DropTable("dbo.ExpansionProfileResIndexDateTime");
      DropTable("dbo.EpisodeOfCareResIndexUri");
      DropTable("dbo.EpisodeOfCareResIndexToken");
      DropTable("dbo.EpisodeOfCareResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.EpisodeOfCareResIndexQuantity");
      DropTable("dbo.EpisodeOfCareResIndexDateTime");
      DropTable("dbo.EnrollmentResponseResIndexUri");
      DropTable("dbo.EnrollmentResponseResIndexToken");
      DropTable("dbo.EnrollmentResponseResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.EnrollmentResponseResIndexQuantity");
      DropTable("dbo.EnrollmentResponseResIndexDateTime");
      DropTable("dbo.EnrollmentRequestResIndexUri");
      DropTable("dbo.EnrollmentRequestResIndexToken");
      DropTable("dbo.EnrollmentRequestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.EnrollmentRequestResIndexQuantity");
      DropTable("dbo.EnrollmentRequestResIndexDateTime");
      DropTable("dbo.EndpointResIndexUri");
      DropTable("dbo.EndpointResIndexToken");
      DropTable("dbo.EndpointResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.EndpointResIndexQuantity");
      DropTable("dbo.EndpointResIndexDateTime");
      DropTable("dbo.EncounterResIndexUri");
      DropTable("dbo.EncounterResIndexToken");
      DropTable("dbo.EncounterResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.EncounterResIndexQuantity");
      DropTable("dbo.EncounterResIndexDateTime");
      DropTable("dbo.EligibilityResponseResIndexUri");
      DropTable("dbo.EligibilityResponseResIndexToken");
      DropTable("dbo.EligibilityResponseResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.EligibilityResponseResIndexQuantity");
      DropTable("dbo.EligibilityResponseResIndexDateTime");
      DropTable("dbo.EligibilityRequestResIndexUri");
      DropTable("dbo.EligibilityRequestResIndexToken");
      DropTable("dbo.EligibilityRequestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.EligibilityRequestResIndexQuantity");
      DropTable("dbo.EligibilityRequestResIndexDateTime");
      DropTable("dbo.DocumentReferenceResIndexUri");
      DropTable("dbo.DocumentReferenceResIndexToken");
      DropTable("dbo.DocumentReferenceResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.DocumentReferenceResIndexQuantity");
      DropTable("dbo.DocumentReferenceResIndexDateTime");
      DropTable("dbo.DocumentManifestResIndexUri");
      DropTable("dbo.DocumentManifestResIndexToken");
      DropTable("dbo.DocumentManifestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.DocumentManifestResIndexQuantity");
      DropTable("dbo.DocumentManifestResIndexDateTime");
      DropTable("dbo.DiagnosticReportResIndexUri");
      DropTable("dbo.DiagnosticReportResIndexToken");
      DropTable("dbo.DiagnosticReportResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.DiagnosticReportResIndexQuantity");
      DropTable("dbo.DiagnosticReportResIndexDateTime");
      DropTable("dbo.DeviceUseStatementResIndexUri");
      DropTable("dbo.DeviceUseStatementResIndexToken");
      DropTable("dbo.DeviceUseStatementResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.DeviceUseStatementResIndexQuantity");
      DropTable("dbo.DeviceUseStatementResIndexDateTime");
      DropTable("dbo.DeviceRequestResIndexUri");
      DropTable("dbo.DeviceRequestResIndexToken");
      DropTable("dbo.DeviceRequestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.DeviceRequestResIndexQuantity");
      DropTable("dbo.DeviceRequestResIndexDateTime");
      DropTable("dbo.DeviceMetricResIndexUri");
      DropTable("dbo.DeviceMetricResIndexToken");
      DropTable("dbo.DeviceMetricResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.DeviceMetricResIndexQuantity");
      DropTable("dbo.DeviceMetricResIndexDateTime");
      DropTable("dbo.DeviceComponentResIndexUri");
      DropTable("dbo.DeviceComponentResIndexToken");
      DropTable("dbo.DeviceComponentResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.DeviceComponentResIndexQuantity");
      DropTable("dbo.DeviceComponentResIndexDateTime");
      DropTable("dbo.DeviceResIndexUri");
      DropTable("dbo.DeviceResIndexToken");
      DropTable("dbo.DeviceResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.DeviceResIndexQuantity");
      DropTable("dbo.DeviceResIndexDateTime");
      DropTable("dbo.DetectedIssueResIndexUri");
      DropTable("dbo.DetectedIssueResIndexToken");
      DropTable("dbo.DetectedIssueResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.DetectedIssueResIndexQuantity");
      DropTable("dbo.DetectedIssueResIndexDateTime");
      DropTable("dbo.DataElementResIndexUri");
      DropTable("dbo.DataElementResIndexToken");
      DropTable("dbo.DataElementResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.DataElementResIndexQuantity");
      DropTable("dbo.DataElementResIndexDateTime");
      DropTable("dbo.CoverageResIndexUri");
      DropTable("dbo.CoverageResIndexToken");
      DropTable("dbo.CoverageResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.CoverageResIndexQuantity");
      DropTable("dbo.CoverageResIndexDateTime");
      DropTable("dbo.ContractResIndexUri");
      DropTable("dbo.ContractResIndexToken");
      DropTable("dbo.ContractResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ContractResIndexQuantity");
      DropTable("dbo.ContractResIndexDateTime");
      DropTable("dbo.ConsentResIndexUri");
      DropTable("dbo.ConsentResIndexToken");
      DropTable("dbo.ConsentResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ConsentResIndexQuantity");
      DropTable("dbo.ConsentResIndexDateTime");
      DropTable("dbo.ConditionResIndexUri");
      DropTable("dbo.ConditionResIndexToken");
      DropTable("dbo.ConditionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ConditionResIndexQuantity");
      DropTable("dbo.ConditionResIndexDateTime");
      DropTable("dbo.ConceptMapResIndexUri");
      DropTable("dbo.ConceptMapResIndexToken");
      DropTable("dbo.ConceptMapResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ConceptMapResIndexQuantity");
      DropTable("dbo.ConceptMapResIndexDateTime");
      DropTable("dbo.CompositionResIndexUri");
      DropTable("dbo.CompositionResIndexToken");
      DropTable("dbo.CompositionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.CompositionResIndexQuantity");
      DropTable("dbo.CompositionResIndexDateTime");
      DropTable("dbo.CompartmentDefinitionResIndexUri");
      DropTable("dbo.CompartmentDefinitionResIndexToken");
      DropTable("dbo.CompartmentDefinitionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.CompartmentDefinitionResIndexQuantity");
      DropTable("dbo.CompartmentDefinitionResIndexDateTime");
      DropTable("dbo.CommunicationRequestResIndexUri");
      DropTable("dbo.CommunicationRequestResIndexToken");
      DropTable("dbo.CommunicationRequestResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.CommunicationRequestResIndexQuantity");
      DropTable("dbo.CommunicationRequestResIndexDateTime");
      DropTable("dbo.CommunicationResIndexUri");
      DropTable("dbo.CommunicationResIndexToken");
      DropTable("dbo.CommunicationResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.CommunicationResIndexQuantity");
      DropTable("dbo.CommunicationResIndexDateTime");
      DropTable("dbo.CodeSystemResIndexUri");
      DropTable("dbo.CodeSystemResIndexToken");
      DropTable("dbo.CodeSystemResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.CodeSystemResIndexQuantity");
      DropTable("dbo.CodeSystemResIndexDateTime");
      DropTable("dbo.ClinicalImpressionResIndexUri");
      DropTable("dbo.ClinicalImpressionResIndexToken");
      DropTable("dbo.ClinicalImpressionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ClinicalImpressionResIndexQuantity");
      DropTable("dbo.ClinicalImpressionResIndexDateTime");
      DropTable("dbo.ClaimResponseResIndexUri");
      DropTable("dbo.ClaimResponseResIndexToken");
      DropTable("dbo.ClaimResponseResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ClaimResponseResIndexQuantity");
      DropTable("dbo.ClaimResponseResIndexDateTime");
      DropTable("dbo.ClaimResIndexUri");
      DropTable("dbo.ClaimResIndexToken");
      DropTable("dbo.ClaimResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ClaimResIndexQuantity");
      DropTable("dbo.ClaimResIndexDateTime");
      DropTable("dbo.ChargeItemResIndexUri");
      DropTable("dbo.ChargeItemResIndexToken");
      DropTable("dbo.ChargeItemResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ChargeItemResIndexQuantity");
      DropTable("dbo.ChargeItemResIndexDateTime");
      DropTable("dbo.CareTeamResIndexUri");
      DropTable("dbo.CareTeamResIndexToken");
      DropTable("dbo.CareTeamResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.CareTeamResIndexQuantity");
      DropTable("dbo.CareTeamResIndexDateTime");
      DropTable("dbo.CarePlanResIndexUri");
      DropTable("dbo.CarePlanResIndexToken");
      DropTable("dbo.CarePlanResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.CarePlanResIndexQuantity");
      DropTable("dbo.CarePlanResIndexDateTime");
      DropTable("dbo.CapabilityStatementResIndexUri");
      DropTable("dbo.CapabilityStatementResIndexToken");
      DropTable("dbo.CapabilityStatementResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.CapabilityStatementResIndexQuantity");
      DropTable("dbo.CapabilityStatementResIndexDateTime");
      DropTable("dbo.BundleResIndexUri");
      DropTable("dbo.BundleResIndexToken");
      DropTable("dbo.BundleResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.BundleResIndexQuantity");
      DropTable("dbo.BundleResIndexDateTime");
      DropTable("dbo.BodySiteResIndexUri");
      DropTable("dbo.BodySiteResIndexToken");
      DropTable("dbo.BodySiteResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.BodySiteResIndexQuantity");
      DropTable("dbo.BodySiteResIndexDateTime");
      DropTable("dbo.BinaryResIndexUri");
      DropTable("dbo.BinaryResIndexToken");
      DropTable("dbo.BinaryResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.BinaryResIndexQuantity");
      DropTable("dbo.BinaryResIndexDateTime");
      DropTable("dbo.BasicResIndexUri");
      DropTable("dbo.BasicResIndexToken");
      DropTable("dbo.BasicResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.BasicResIndexQuantity");
      DropTable("dbo.BasicResIndexDateTime");
      DropTable("dbo.AuditEventResIndexUri");
      DropTable("dbo.AuditEventResIndexToken");
      DropTable("dbo.AuditEventResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.AuditEventResIndexQuantity");
      DropTable("dbo.AuditEventResIndexDateTime");
      DropTable("dbo.AppointmentResponseResIndexUri");
      DropTable("dbo.AppointmentResponseResIndexToken");
      DropTable("dbo.AppointmentResponseResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.AppointmentResponseResIndexQuantity");
      DropTable("dbo.AppointmentResponseResIndexDateTime");
      DropTable("dbo.AppointmentResIndexUri");
      DropTable("dbo.AppointmentResIndexToken");
      DropTable("dbo.AppointmentResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.AppointmentResIndexQuantity");
      DropTable("dbo.AppointmentResIndexDateTime");
      DropTable("dbo.AllergyIntoleranceResIndexUri");
      DropTable("dbo.AllergyIntoleranceResIndexToken");
      DropTable("dbo.AllergyIntoleranceResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.AllergyIntoleranceResIndexQuantity");
      DropTable("dbo.AllergyIntoleranceResIndexDateTime");
      DropTable("dbo.AdverseEventResIndexUri");
      DropTable("dbo.AdverseEventResIndexToken");
      DropTable("dbo.AdverseEventResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.AdverseEventResIndexQuantity");
      DropTable("dbo.AdverseEventResIndexDateTime");
      DropTable("dbo.ActivityDefinitionResIndexUri");
      DropTable("dbo.ActivityDefinitionResIndexToken");
      DropTable("dbo.ActivityDefinitionResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.ActivityDefinitionResIndexQuantity");
      DropTable("dbo.ActivityDefinitionResIndexDateTime");
      DropTable("dbo.AccountResIndexUri");
      DropTable("dbo.AccountResIndexToken");
      DropTable("dbo.AccountResIndexReference",
          removedColumnAnnotations: new Dictionary<string, IDictionary<string, object>>
          {
                    {
                        "ReferenceFhirId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
                    {
                        "ReferenceVersionId",
                        new Dictionary<string, object>
                        {
                            { "CaseSensitive", "True" },
                        }
                    },
          });
      DropTable("dbo.AccountResIndexQuantity");
      DropTable("dbo.AccountResIndexDateTime");
    }
  }
}
