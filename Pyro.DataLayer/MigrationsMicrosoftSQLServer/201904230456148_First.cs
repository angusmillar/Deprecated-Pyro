namespace Pyro.DataLayer.MigrationsMicrosoftSQLServer
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class First : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.AccountRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo._FhirRelease",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        FhirVersion = c.String(),
                        Date = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        Description = c.String(),
                        CreatedDate = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        CreatedUser = c.String(),
                        LastUpdated = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        LastUpdatedUser = c.String(),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.ActivityDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ActivityDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo._SearchParam",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Resource = c.String(nullable: false, maxLength: 256),
                        Name = c.String(nullable: false, maxLength: 128),
                        Url = c.String(maxLength: 450),
                        Description = c.String(),
                        Type = c.Int(nullable: false),
                        XPath = c.String(),
                        Expression = c.String(nullable: false),
                        IsIndexed = c.Boolean(nullable: false),
                        Status = c.Int(nullable: false),
                        SearchParameterResourceId = c.String(maxLength: 128),
                        SearchParameterResourceVersion = c.String(maxLength: 128),
                        CreatedDate = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        CreatedUser = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        LastUpdatedUser = c.String(nullable: false, maxLength: 128),
                    })
                .PrimaryKey(t => t.Id)
                .Index(t => new { t.Resource, t.Name }, unique: true, name: "uq_ResourceAndName")
                .Index(t => t.IsIndexed, name: "ix_IsIndexed")
                .Index(t => t.Status, name: "ix_Status");
            
            CreateTable(
                "dbo._SCompositePivot",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        SequentialOrder = c.Int(nullable: false),
                        Url = c.String(maxLength: 450),
                        Expression = c.String(nullable: false),
                        ParentServiceSearchParameterId = c.Int(nullable: false),
                        ChildServiceSearchParameterId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ChildServiceSearchParameterId)
                .ForeignKey("dbo._SearchParam", t => t.ParentServiceSearchParameterId, cascadeDelete: true)
                .Index(t => t.ParentServiceSearchParameterId, name: "ix_ParentParamId")
                .Index(t => t.ChildServiceSearchParameterId, name: "ix_ChildParamId");
            
            CreateTable(
                "dbo._SParamResource",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceType = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId");
            
            CreateTable(
                "dbo.ActivityDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ActivityDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo._BaseUrl",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Url = c.String(nullable: false, maxLength: 450),
                        IsServersPrimaryUrlRoot = c.Boolean(nullable: false),
                        CreatedDate = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        CreatedUser = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        LastUpdatedUser = c.String(nullable: false, maxLength: 128),
                    })
                .PrimaryKey(t => t.Id)
                .Index(t => t.Url, unique: true, name: "ix_Url");
            
            CreateTable(
                "dbo.ActivityDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ActivityDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ActivityDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ActivityDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AdverseEventRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.AdverseEventIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AdverseEventIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AdverseEventIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AdverseEventIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AdverseEventIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AdverseEventIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AdverseEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AllergyIntoleranceRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.AllergyIntoleranceIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AllergyIntoleranceIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AllergyIntoleranceIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AllergyIntoleranceIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AllergyIntoleranceIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AllergyIntoleranceIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AllergyIntoleranceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.AppointmentIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentResponseRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.AppointmentResponseIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentResponseIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentResponseIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentResponseIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentResponseIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AppointmentResponseIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AppointmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AuditEventRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.AuditEventIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AuditEventIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AuditEventIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AuditEventIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AuditEventIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AuditEventIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AuditEventRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BasicRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.BasicIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BasicIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BasicIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BasicIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BasicIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BasicIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BasicRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BinaryRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.BinaryIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BinaryIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BinaryIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BinaryIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BinaryIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BinaryIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BinaryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BiologicallyDerivedProductRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.BiologicallyDerivedProductIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BiologicallyDerivedProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BiologicallyDerivedProductIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BiologicallyDerivedProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BiologicallyDerivedProductIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BiologicallyDerivedProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BiologicallyDerivedProductIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BiologicallyDerivedProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BiologicallyDerivedProductIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BiologicallyDerivedProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BiologicallyDerivedProductIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BiologicallyDerivedProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BodyStructureRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.BodyStructureIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BodyStructureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BodyStructureIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BodyStructureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BodyStructureIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BodyStructureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BodyStructureIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BodyStructureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BodyStructureIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BodyStructureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BodyStructureIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BodyStructureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BundleRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.BundleIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BundleIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BundleIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BundleIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BundleIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.BundleIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.BundleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CapabilityStatementRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CapabilityStatementIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CapabilityStatementIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CapabilityStatementIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CapabilityStatementIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CapabilityStatementIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CapabilityStatementIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CapabilityStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CarePlanRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CarePlanIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CarePlanIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CarePlanIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CarePlanIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CarePlanIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CarePlanIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CarePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CareTeamRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CareTeamIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CareTeamIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CareTeamIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CareTeamIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CareTeamIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CareTeamIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CareTeamRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CatalogEntryRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CatalogEntryIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CatalogEntryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CatalogEntryIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CatalogEntryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CatalogEntryIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CatalogEntryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CatalogEntryIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CatalogEntryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CatalogEntryIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CatalogEntryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CatalogEntryIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CatalogEntryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ChargeItemDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ChargeItemIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ChargeItemIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ChargeItemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ClaimIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimResponseRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ClaimResponseIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimResponseIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimResponseIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimResponseIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimResponseIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClaimResponseIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClaimResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClinicalImpressionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ClinicalImpressionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClinicalImpressionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClinicalImpressionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClinicalImpressionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClinicalImpressionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ClinicalImpressionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ClinicalImpressionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CodeSystemRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CodeSystemIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CodeSystemIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CodeSystemIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CodeSystemIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CodeSystemIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CodeSystemIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CodeSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CommunicationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationRequestRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CommunicationRequestIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationRequestIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationRequestIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationRequestIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationRequestIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CommunicationRequestIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CommunicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompartmentDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CompartmentDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompartmentDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompartmentDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompartmentDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompartmentDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompartmentDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompartmentDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompositionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CompositionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompositionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompositionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompositionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompositionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CompositionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CompositionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConceptMapRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ConceptMapIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConceptMapIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConceptMapIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConceptMapIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConceptMapIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConceptMapIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConceptMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConditionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ConditionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConditionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConditionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConditionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConditionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConditionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConditionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConsentRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ConsentIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConsentIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConsentIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConsentIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConsentIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ConsentIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ConsentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ContractRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ContractIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ContractIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ContractIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ContractIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ContractIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ContractIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ContractRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityRequestRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CoverageEligibilityRequestIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityRequestIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityRequestIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityRequestIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityRequestIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityRequestIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityResponseRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CoverageEligibilityResponseIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityResponseIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityResponseIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityResponseIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityResponseIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageEligibilityResponseIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageEligibilityResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.CoverageIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.CoverageIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.CoverageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DetectedIssueRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.DetectedIssueIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DetectedIssueIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DetectedIssueIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DetectedIssueIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DetectedIssueIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DetectedIssueIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DetectedIssueRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.DeviceDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.DeviceIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceMetricRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.DeviceMetricIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceMetricIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceMetricIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceMetricIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceMetricIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceMetricIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceMetricRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceRequestRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.DeviceRequestIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceRequestIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceRequestIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceRequestIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceRequestIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceRequestIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceUseStatementRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.DeviceUseStatementIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceUseStatementIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceUseStatementIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceUseStatementIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceUseStatementIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DeviceUseStatementIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DeviceUseStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DiagnosticReportRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.DiagnosticReportIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DiagnosticReportIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DiagnosticReportIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DiagnosticReportIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DiagnosticReportIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DiagnosticReportIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DiagnosticReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentManifestRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.DocumentManifestIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentManifestIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentManifestIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentManifestIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentManifestIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentManifestIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentManifestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentReferenceRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.DocumentReferenceIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentReferenceIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentReferenceIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentReferenceIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentReferenceIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.DocumentReferenceIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.DocumentReferenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EffectEvidenceSynthesisRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.EffectEvidenceSynthesisIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EffectEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EffectEvidenceSynthesisIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EffectEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EffectEvidenceSynthesisIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EffectEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EffectEvidenceSynthesisIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EffectEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EffectEvidenceSynthesisIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EffectEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EffectEvidenceSynthesisIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EffectEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EncounterRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.EncounterIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EncounterIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EncounterIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EncounterIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EncounterIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EncounterIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EncounterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EndpointRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.EndpointIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EndpointIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EndpointIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EndpointIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EndpointIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EndpointIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EndpointRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentRequestRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.EnrollmentRequestIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentRequestIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentRequestIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentRequestIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentRequestIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentRequestIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentResponseRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.EnrollmentResponseIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentResponseIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentResponseIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentResponseIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentResponseIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EnrollmentResponseIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EnrollmentResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EpisodeOfCareRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.EpisodeOfCareIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EpisodeOfCareIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EpisodeOfCareIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EpisodeOfCareIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EpisodeOfCareIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EpisodeOfCareIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EpisodeOfCareRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EventDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.EventDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EventDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EventDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EventDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EventDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EventDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EventDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EventDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EventDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EventDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EventDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EventDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.EvidenceIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceVariableRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.EvidenceVariableIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceVariableRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceVariableIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceVariableRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceVariableIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceVariableRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceVariableIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceVariableRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceVariableIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceVariableRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.EvidenceVariableIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.EvidenceVariableRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExampleScenarioRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ExampleScenarioIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExampleScenarioRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExampleScenarioIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExampleScenarioRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExampleScenarioIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExampleScenarioRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExampleScenarioIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExampleScenarioRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExampleScenarioIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExampleScenarioRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExampleScenarioIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExampleScenarioRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExplanationOfBenefitRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ExplanationOfBenefitIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExplanationOfBenefitIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExplanationOfBenefitIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExplanationOfBenefitIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExplanationOfBenefitIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ExplanationOfBenefitIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ExplanationOfBenefitRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FamilyMemberHistoryRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.FamilyMemberHistoryIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FamilyMemberHistoryIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FamilyMemberHistoryIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FamilyMemberHistoryIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FamilyMemberHistoryIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FamilyMemberHistoryIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FamilyMemberHistoryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FlagRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.FlagIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FlagIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FlagIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FlagIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FlagIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.FlagIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.FlagRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GoalRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.GoalIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GoalIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GoalIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GoalIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GoalIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GoalIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GoalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GraphDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.GraphDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GraphDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GraphDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GraphDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GraphDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GraphDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GraphDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GroupRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.GroupIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GroupIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GroupIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GroupIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GroupIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GroupIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GuidanceResponseRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.GuidanceResponseIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GuidanceResponseIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GuidanceResponseIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GuidanceResponseIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GuidanceResponseIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.GuidanceResponseIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.GuidanceResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.HealthcareServiceRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.HealthcareServiceIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.HealthcareServiceIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.HealthcareServiceIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.HealthcareServiceIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.HealthcareServiceIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.HealthcareServiceIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.HealthcareServiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImagingStudyRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ImagingStudyIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImagingStudyIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImagingStudyIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImagingStudyIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImagingStudyIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImagingStudyIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImagingStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationEvaluationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ImmunizationEvaluationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationEvaluationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationEvaluationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationEvaluationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationEvaluationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationEvaluationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationEvaluationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationEvaluationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationEvaluationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationEvaluationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationEvaluationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationEvaluationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ImmunizationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationRecommendationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ImmunizationRecommendationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationRecommendationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationRecommendationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationRecommendationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationRecommendationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImmunizationRecommendationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImmunizationRecommendationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImplementationGuideRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ImplementationGuideIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImplementationGuideIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImplementationGuideIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImplementationGuideIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImplementationGuideIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ImplementationGuideIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ImplementationGuideRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InsurancePlanRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.InsurancePlanIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InsurancePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InsurancePlanIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InsurancePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InsurancePlanIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InsurancePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InsurancePlanIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InsurancePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InsurancePlanIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InsurancePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InsurancePlanIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InsurancePlanRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InvoiceRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.InvoiceIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InvoiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InvoiceIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InvoiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InvoiceIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InvoiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InvoiceIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InvoiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InvoiceIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InvoiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.InvoiceIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.InvoiceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LibraryRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.LibraryIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LibraryIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LibraryIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LibraryIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LibraryIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LibraryIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LibraryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LinkageRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.LinkageIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LinkageIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LinkageIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LinkageIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LinkageIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LinkageIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LinkageRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ListRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ListIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ListIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ListIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ListIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ListIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ListIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ListRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LocationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.LocationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LocationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LocationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LocationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LocationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.LocationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.LocationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MeasureIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureReportRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MeasureReportIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureReportIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureReportIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureReportIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureReportIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MeasureReportIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MeasureReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MediaRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MediaIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MediaIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MediaIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MediaIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MediaIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MediaIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MediaRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationAdministrationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicationAdministrationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationAdministrationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationAdministrationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationAdministrationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationAdministrationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationAdministrationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationAdministrationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationDispenseRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicationDispenseIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationDispenseIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationDispenseIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationDispenseIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationDispenseIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationDispenseIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationDispenseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationKnowledgeRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicationKnowledgeIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationKnowledgeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationKnowledgeIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationKnowledgeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationKnowledgeIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationKnowledgeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationKnowledgeIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationKnowledgeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationKnowledgeIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationKnowledgeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationKnowledgeIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationKnowledgeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationRequestRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicationRequestIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationRequestIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationRequestIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationRequestIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationRequestIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationRequestIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationStatementRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicationStatementIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationStatementIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationStatementIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationStatementIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationStatementIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicationStatementIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicationStatementRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductAuthorizationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicinalProductAuthorizationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductAuthorizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductAuthorizationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductAuthorizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductAuthorizationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductAuthorizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductAuthorizationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductAuthorizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductAuthorizationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductAuthorizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductAuthorizationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductAuthorizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductContraindicationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicinalProductContraindicationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductContraindicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductContraindicationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductContraindicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductContraindicationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductContraindicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductContraindicationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductContraindicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductContraindicationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductContraindicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductContraindicationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductContraindicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIndicationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicinalProductIndicationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIndicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIndicationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIndicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIndicationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIndicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIndicationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIndicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIndicationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIndicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIndicationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIndicationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIngredientRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicinalProductIngredientIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIngredientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIngredientIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIngredientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIngredientIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIngredientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIngredientIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIngredientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIngredientIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIngredientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIngredientIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductIngredientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductInteractionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicinalProductInteractionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductInteractionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductInteractionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductInteractionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductInteractionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductInteractionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductInteractionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductInteractionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductInteractionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductInteractionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductInteractionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductInteractionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicinalProductIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductManufacturedRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicinalProductManufacturedIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductManufacturedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductManufacturedIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductManufacturedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductManufacturedIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductManufacturedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductManufacturedIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductManufacturedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductManufacturedIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductManufacturedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductManufacturedIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductManufacturedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPackagedRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicinalProductPackagedIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPackagedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPackagedIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPackagedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPackagedIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPackagedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPackagedIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPackagedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPackagedIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPackagedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPackagedIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPackagedRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPharmaceuticalRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicinalProductPharmaceuticalIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPharmaceuticalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPharmaceuticalIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPharmaceuticalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPharmaceuticalIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPharmaceuticalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPharmaceuticalIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPharmaceuticalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPharmaceuticalIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPharmaceuticalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductPharmaceuticalIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductPharmaceuticalRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductUndesirableEffectRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MedicinalProductUndesirableEffectIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductUndesirableEffectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductUndesirableEffectIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductUndesirableEffectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductUndesirableEffectIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductUndesirableEffectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductUndesirableEffectIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductUndesirableEffectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductUndesirableEffectIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductUndesirableEffectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MedicinalProductUndesirableEffectIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MedicinalProductUndesirableEffectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MessageDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageHeaderRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MessageHeaderIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageHeaderIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageHeaderIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageHeaderIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageHeaderIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MessageHeaderIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MessageHeaderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MolecularSequenceRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.MolecularSequenceIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MolecularSequenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MolecularSequenceIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MolecularSequenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MolecularSequenceIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MolecularSequenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MolecularSequenceIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MolecularSequenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MolecularSequenceIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MolecularSequenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.MolecularSequenceIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.MolecularSequenceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NamingSystemRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.NamingSystemIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NamingSystemIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NamingSystemIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NamingSystemIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NamingSystemIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NamingSystemIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NamingSystemRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NutritionOrderRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.NutritionOrderIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NutritionOrderIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NutritionOrderIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NutritionOrderIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NutritionOrderIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.NutritionOrderIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.NutritionOrderRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ObservationDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ObservationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ObservationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ObservationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.OperationDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationOutcomeRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.OperationOutcomeIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationOutcomeIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationOutcomeIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationOutcomeIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationOutcomeIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OperationOutcomeIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OperationOutcomeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationAffiliationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.OrganizationAffiliationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationAffiliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationAffiliationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationAffiliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationAffiliationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationAffiliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationAffiliationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationAffiliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationAffiliationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationAffiliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationAffiliationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationAffiliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.OrganizationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.OrganizationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.OrganizationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ParametersRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ParametersIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ParametersIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ParametersIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ParametersIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ParametersIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ParametersIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ParametersRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PatientRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.PatientIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PatientIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PatientIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PatientIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PatientIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PatientIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PatientRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentNoticeRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.PaymentNoticeIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentNoticeIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentNoticeIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentNoticeIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentNoticeIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentNoticeIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentNoticeRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentReconciliationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.PaymentReconciliationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentReconciliationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentReconciliationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentReconciliationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentReconciliationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PaymentReconciliationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PaymentReconciliationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PersonRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.PersonIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PersonIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PersonIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PersonIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PersonIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PersonIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PlanDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.PlanDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PlanDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PlanDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PlanDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PlanDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PlanDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PlanDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.PractitionerIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerRoleRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.PractitionerRoleIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerRoleIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerRoleIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerRoleIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerRoleIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.PractitionerRoleIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.PractitionerRoleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProcedureRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ProcedureIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProcedureIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProcedureIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProcedureIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProcedureIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProcedureIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProcedureRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProvenanceRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ProvenanceIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProvenanceIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProvenanceIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProvenanceIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProvenanceIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ProvenanceIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ProvenanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.QuestionnaireIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireResponseRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.QuestionnaireResponseIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireResponseIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireResponseIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireResponseIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireResponseIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.QuestionnaireResponseIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.QuestionnaireResponseRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RelatedPersonRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.RelatedPersonIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RelatedPersonIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RelatedPersonIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RelatedPersonIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RelatedPersonIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RelatedPersonIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RelatedPersonRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RequestGroupRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.RequestGroupIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RequestGroupIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RequestGroupIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RequestGroupIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RequestGroupIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RequestGroupIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RequestGroupRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ResearchDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchElementDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ResearchElementDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchElementDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchElementDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchElementDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchElementDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchElementDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchElementDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchElementDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchElementDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchElementDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchElementDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchElementDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchStudyRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ResearchStudyIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchStudyIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchStudyIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchStudyIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchStudyIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchStudyIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchStudyRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchSubjectRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ResearchSubjectIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchSubjectIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchSubjectIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchSubjectIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchSubjectIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ResearchSubjectIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ResearchSubjectRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskAssessmentRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.RiskAssessmentIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskAssessmentIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskAssessmentIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskAssessmentIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskAssessmentIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskAssessmentIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskAssessmentRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskEvidenceSynthesisRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.RiskEvidenceSynthesisIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskEvidenceSynthesisIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskEvidenceSynthesisIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskEvidenceSynthesisIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskEvidenceSynthesisIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.RiskEvidenceSynthesisIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.RiskEvidenceSynthesisRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ScheduleRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ScheduleIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ScheduleIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ScheduleIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ScheduleIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ScheduleIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ScheduleIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ScheduleRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SearchParameterRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SearchParameterIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SearchParameterIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SearchParameterIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SearchParameterIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SearchParameterIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SearchParameterIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SearchParameterRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ServiceRequestRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ServiceRequestIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ServiceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ServiceRequestIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ServiceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ServiceRequestIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ServiceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ServiceRequestIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ServiceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ServiceRequestIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ServiceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ServiceRequestIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ServiceRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SlotRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SlotIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SlotIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SlotIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SlotIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SlotIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SlotIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SlotRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SpecimenDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SpecimenIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SpecimenIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SpecimenRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureDefinitionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.StructureDefinitionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureDefinitionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureDefinitionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureDefinitionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureDefinitionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureDefinitionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureDefinitionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureMapRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.StructureMapIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureMapIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureMapIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureMapIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureMapIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.StructureMapIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.StructureMapRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubscriptionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SubscriptionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubscriptionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubscriptionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubscriptionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubscriptionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubscriptionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubscriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SubstanceIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceNucleicAcidRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SubstanceNucleicAcidIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceNucleicAcidRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceNucleicAcidIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceNucleicAcidRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceNucleicAcidIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceNucleicAcidRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceNucleicAcidIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceNucleicAcidRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceNucleicAcidIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceNucleicAcidRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceNucleicAcidIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceNucleicAcidRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstancePolymerRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SubstancePolymerIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstancePolymerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstancePolymerIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstancePolymerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstancePolymerIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstancePolymerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstancePolymerIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstancePolymerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstancePolymerIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstancePolymerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstancePolymerIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstancePolymerRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceProteinRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SubstanceProteinIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceProteinRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceProteinIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceProteinRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceProteinIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceProteinRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceProteinIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceProteinRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceProteinIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceProteinRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceProteinIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceProteinRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceReferenceInformationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SubstanceReferenceInformationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceReferenceInformationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceReferenceInformationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceReferenceInformationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceReferenceInformationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceReferenceInformationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceReferenceInformationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceReferenceInformationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceReferenceInformationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceReferenceInformationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceReferenceInformationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceReferenceInformationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSourceMaterialRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SubstanceSourceMaterialIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSourceMaterialRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSourceMaterialIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSourceMaterialRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSourceMaterialIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSourceMaterialRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSourceMaterialIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSourceMaterialRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSourceMaterialIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSourceMaterialRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSourceMaterialIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSourceMaterialRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSpecificationRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SubstanceSpecificationIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSpecificationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSpecificationIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSpecificationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSpecificationIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSpecificationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSpecificationIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSpecificationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSpecificationIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSpecificationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SubstanceSpecificationIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SubstanceSpecificationRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyDeliveryRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SupplyDeliveryIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyDeliveryIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyDeliveryIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyDeliveryIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyDeliveryIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyDeliveryIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyDeliveryRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyRequestRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.SupplyRequestIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyRequestIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyRequestIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyRequestIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyRequestIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.SupplyRequestIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.SupplyRequestRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TaskRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.TaskIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TaskIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TaskIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TaskIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TaskIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TaskIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TaskRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TerminologyCapabilitiesRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.TerminologyCapabilitiesIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TerminologyCapabilitiesRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TerminologyCapabilitiesIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TerminologyCapabilitiesRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TerminologyCapabilitiesIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TerminologyCapabilitiesRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TerminologyCapabilitiesIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TerminologyCapabilitiesRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TerminologyCapabilitiesIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TerminologyCapabilitiesRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TerminologyCapabilitiesIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TerminologyCapabilitiesRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestReportRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.TestReportIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestReportIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestReportIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestReportIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestReportIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestReportIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestReportRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestScriptRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.TestScriptIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestScriptIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestScriptIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestScriptIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestScriptIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.TestScriptIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.TestScriptRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ValueSetRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.ValueSetIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ValueSetIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ValueSetIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ValueSetIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ValueSetIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.ValueSetIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.ValueSetRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VerificationResultRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.VerificationResultIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VerificationResultRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VerificationResultIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VerificationResultRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VerificationResultIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VerificationResultRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VerificationResultIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VerificationResultRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VerificationResultIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VerificationResultRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VerificationResultIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VerificationResultRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VisionPrescriptionRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        IsCurrent = c.Boolean(nullable: false),
                        FhirId = c.String(nullable: false, maxLength: 128),
                        IsDeleted = c.Boolean(nullable: false),
                        VersionId = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        Resource = c.Binary(),
                        Method = c.Int(nullable: false),
                        FhirReleaseId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._FhirRelease", t => t.FhirReleaseId, cascadeDelete: true)
                .Index(t => t.IsCurrent, name: "ix_IsCurrent")
                .Index(t => new { t.FhirId, t.VersionId }, unique: true, name: "uq_FhirIdAndVersionId")
                .Index(t => t.IsDeleted, name: "ix_IsDeleted")
                .Index(t => t.LastUpdated, name: "ix_LastUpdated")
                .Index(t => t.FhirReleaseId);
            
            CreateTable(
                "dbo.VisionPrescriptionIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VisionPrescriptionIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VisionPrescriptionIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VisionPrescriptionIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VisionPrescriptionIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.VisionPrescriptionIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.VisionPrescriptionRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AccountIxDT",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        LowUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        HighUtcDateTime = c.DateTime(precision: 3, storeType: "datetime2"),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.LowUtcDateTime, name: "ix_LowUtcDateTime")
                .Index(t => t.HighUtcDateTime, name: "ix_HighUtcDateTime")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AccountIxQty",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Comparator = c.Int(),
                        Quantity = c.Decimal(precision: 28, scale: 14),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        Unit = c.String(maxLength: 450),
                        ComparatorHigh = c.Int(),
                        QuantityHigh = c.Decimal(precision: 28, scale: 14),
                        CodeHigh = c.String(maxLength: 128),
                        SystemHigh = c.String(maxLength: 450),
                        UnitHigh = c.String(maxLength: 64),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AccountIxRef",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ReferenceFhirId = c.String(nullable: false, maxLength: 128),
                        ReferenceResourceType = c.String(nullable: false, maxLength: 50),
                        ReferenceServiceBaseUrlId = c.Int(),
                        ReferenceVersionId = c.String(maxLength: 128),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._BaseUrl", t => t.ReferenceServiceBaseUrlId)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.ReferenceFhirId, name: "ix_RefFhirId")
                .Index(t => t.ReferenceServiceBaseUrlId, name: "ix_RefBaseUrlId")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AccountIxStr",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        String = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.String, name: "ix_String")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AccountIxTok",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(maxLength: 128),
                        System = c.String(maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Code, name: "ix_Code")
                .Index(t => t.System, name: "ix_System")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo.AccountIxUri",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Uri = c.String(nullable: false, maxLength: 450),
                        ServiceSearchParameterId = c.Int(nullable: false),
                        ResourceId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._SearchParam", t => t.ServiceSearchParameterId, cascadeDelete: true)
                .ForeignKey("dbo.AccountRes", t => t.ResourceId, cascadeDelete: true)
                .Index(t => t.Uri, name: "ix_Uri")
                .Index(t => t.ServiceSearchParameterId, name: "ix_SearchParamId")
                .Index(t => t.ResourceId);
            
            CreateTable(
                "dbo._BackburnerConnection",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        ConnectionId = c.String(nullable: false, maxLength: 128),
                        IsConnected = c.Boolean(nullable: false),
                        CreatedDate = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        CreatedUser = c.String(),
                        LastUpdated = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        LastUpdatedUser = c.String(),
                    })
                .PrimaryKey(t => t.Id)
                .Index(t => t.ConnectionId, unique: true, name: "ix_ConnectId");
            
            CreateTable(
                "dbo._FhirTaskQueue",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        TaskFhirId = c.String(nullable: false, maxLength: 128),
                        TaskType = c.String(nullable: false, maxLength: 128),
                        PerfomrerConnectionId = c.String(maxLength: 128),
                        Status = c.String(nullable: false, maxLength: 128),
                        CreatedDate = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        CreatedUser = c.String(),
                        LastUpdated = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        LastUpdatedUser = c.String(),
                    })
                .PrimaryKey(t => t.Id)
                .Index(t => new { t.TaskFhirId, t.TaskType }, unique: true, name: "uq_TaskFhirIdAndType")
                .Index(t => t.PerfomrerConnectionId, name: "ix_PConnectId")
                .Index(t => t.Status, name: "ix_Status");
            
            CreateTable(
                "dbo._FhirTaskWorker",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        TaskType = c.String(nullable: false, maxLength: 128),
                        ClaimedBy = c.String(maxLength: 128),
                        CreatedDate = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        CreatedUser = c.String(),
                        LastUpdated = c.DateTime(nullable: false, precision: 7, storeType: "datetime2"),
                        LastUpdatedUser = c.String(),
                    })
                .PrimaryKey(t => t.Id)
                .Index(t => t.TaskType, unique: true, name: "ix_TaskType")
                .Index(t => t.ClaimedBy, name: "ix_ClaimedBy");
            
            CreateTable(
                "dbo._Compartment",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Url = c.String(nullable: false, maxLength: 450),
                        CompartmentDefinitionResourceId = c.String(nullable: false, maxLength: 128),
                        CompartmentDefinitionResourceVersion = c.String(nullable: false, maxLength: 128),
                        Name = c.String(nullable: false, maxLength: 128),
                        Code = c.String(nullable: false, maxLength: 50),
                        CreatedDate = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        CreatedUser = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        LastUpdatedUser = c.String(nullable: false, maxLength: 128),
                    })
                .PrimaryKey(t => t.Id)
                .Index(t => t.Code, unique: true, name: "ix_CompartmentCode");
            
            CreateTable(
                "dbo._CompartmentRes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Code = c.String(nullable: false, maxLength: 50),
                        Param = c.String(),
                        _ServiceCompartmentId = c.Int(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo._Compartment", t => t._ServiceCompartmentId, cascadeDelete: true)
                .Index(t => t._ServiceCompartmentId, name: "ix_CompartmentId");
            
            CreateTable(
                "dbo._ServConfig",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Parameter = c.String(nullable: false, maxLength: 450),
                        Value = c.String(nullable: false, maxLength: 450),
                        CreatedDate = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        CreatedUser = c.String(nullable: false, maxLength: 128),
                        LastUpdated = c.DateTime(nullable: false, precision: 3, storeType: "datetime2"),
                        LastUpdatedUser = c.String(nullable: false, maxLength: 128),
                    })
                .PrimaryKey(t => t.Id);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo._CompartmentRes", "_ServiceCompartmentId", "dbo._Compartment");
            DropForeignKey("dbo.AccountIxUri", "ResourceId", "dbo.AccountRes");
            DropForeignKey("dbo.AccountIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AccountIxTok", "ResourceId", "dbo.AccountRes");
            DropForeignKey("dbo.AccountIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AccountIxStr", "ResourceId", "dbo.AccountRes");
            DropForeignKey("dbo.AccountIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AccountIxRef", "ResourceId", "dbo.AccountRes");
            DropForeignKey("dbo.AccountIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AccountIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.AccountIxQty", "ResourceId", "dbo.AccountRes");
            DropForeignKey("dbo.AccountIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AccountIxDT", "ResourceId", "dbo.AccountRes");
            DropForeignKey("dbo.AccountIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VisionPrescriptionIxUri", "ResourceId", "dbo.VisionPrescriptionRes");
            DropForeignKey("dbo.VisionPrescriptionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VisionPrescriptionIxTok", "ResourceId", "dbo.VisionPrescriptionRes");
            DropForeignKey("dbo.VisionPrescriptionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VisionPrescriptionIxStr", "ResourceId", "dbo.VisionPrescriptionRes");
            DropForeignKey("dbo.VisionPrescriptionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VisionPrescriptionIxRef", "ResourceId", "dbo.VisionPrescriptionRes");
            DropForeignKey("dbo.VisionPrescriptionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VisionPrescriptionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.VisionPrescriptionIxQty", "ResourceId", "dbo.VisionPrescriptionRes");
            DropForeignKey("dbo.VisionPrescriptionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VisionPrescriptionIxDT", "ResourceId", "dbo.VisionPrescriptionRes");
            DropForeignKey("dbo.VisionPrescriptionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VisionPrescriptionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.VerificationResultIxUri", "ResourceId", "dbo.VerificationResultRes");
            DropForeignKey("dbo.VerificationResultIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VerificationResultIxTok", "ResourceId", "dbo.VerificationResultRes");
            DropForeignKey("dbo.VerificationResultIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VerificationResultIxStr", "ResourceId", "dbo.VerificationResultRes");
            DropForeignKey("dbo.VerificationResultIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VerificationResultIxRef", "ResourceId", "dbo.VerificationResultRes");
            DropForeignKey("dbo.VerificationResultIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VerificationResultIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.VerificationResultIxQty", "ResourceId", "dbo.VerificationResultRes");
            DropForeignKey("dbo.VerificationResultIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VerificationResultIxDT", "ResourceId", "dbo.VerificationResultRes");
            DropForeignKey("dbo.VerificationResultIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.VerificationResultRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ValueSetIxUri", "ResourceId", "dbo.ValueSetRes");
            DropForeignKey("dbo.ValueSetIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ValueSetIxTok", "ResourceId", "dbo.ValueSetRes");
            DropForeignKey("dbo.ValueSetIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ValueSetIxStr", "ResourceId", "dbo.ValueSetRes");
            DropForeignKey("dbo.ValueSetIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ValueSetIxRef", "ResourceId", "dbo.ValueSetRes");
            DropForeignKey("dbo.ValueSetIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ValueSetIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ValueSetIxQty", "ResourceId", "dbo.ValueSetRes");
            DropForeignKey("dbo.ValueSetIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ValueSetIxDT", "ResourceId", "dbo.ValueSetRes");
            DropForeignKey("dbo.ValueSetIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ValueSetRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.TestScriptIxUri", "ResourceId", "dbo.TestScriptRes");
            DropForeignKey("dbo.TestScriptIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestScriptIxTok", "ResourceId", "dbo.TestScriptRes");
            DropForeignKey("dbo.TestScriptIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestScriptIxStr", "ResourceId", "dbo.TestScriptRes");
            DropForeignKey("dbo.TestScriptIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestScriptIxRef", "ResourceId", "dbo.TestScriptRes");
            DropForeignKey("dbo.TestScriptIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestScriptIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.TestScriptIxQty", "ResourceId", "dbo.TestScriptRes");
            DropForeignKey("dbo.TestScriptIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestScriptIxDT", "ResourceId", "dbo.TestScriptRes");
            DropForeignKey("dbo.TestScriptIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestScriptRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.TestReportIxUri", "ResourceId", "dbo.TestReportRes");
            DropForeignKey("dbo.TestReportIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestReportIxTok", "ResourceId", "dbo.TestReportRes");
            DropForeignKey("dbo.TestReportIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestReportIxStr", "ResourceId", "dbo.TestReportRes");
            DropForeignKey("dbo.TestReportIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestReportIxRef", "ResourceId", "dbo.TestReportRes");
            DropForeignKey("dbo.TestReportIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestReportIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.TestReportIxQty", "ResourceId", "dbo.TestReportRes");
            DropForeignKey("dbo.TestReportIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestReportIxDT", "ResourceId", "dbo.TestReportRes");
            DropForeignKey("dbo.TestReportIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TestReportRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.TerminologyCapabilitiesIxUri", "ResourceId", "dbo.TerminologyCapabilitiesRes");
            DropForeignKey("dbo.TerminologyCapabilitiesIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TerminologyCapabilitiesIxTok", "ResourceId", "dbo.TerminologyCapabilitiesRes");
            DropForeignKey("dbo.TerminologyCapabilitiesIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TerminologyCapabilitiesIxStr", "ResourceId", "dbo.TerminologyCapabilitiesRes");
            DropForeignKey("dbo.TerminologyCapabilitiesIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TerminologyCapabilitiesIxRef", "ResourceId", "dbo.TerminologyCapabilitiesRes");
            DropForeignKey("dbo.TerminologyCapabilitiesIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TerminologyCapabilitiesIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.TerminologyCapabilitiesIxQty", "ResourceId", "dbo.TerminologyCapabilitiesRes");
            DropForeignKey("dbo.TerminologyCapabilitiesIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TerminologyCapabilitiesIxDT", "ResourceId", "dbo.TerminologyCapabilitiesRes");
            DropForeignKey("dbo.TerminologyCapabilitiesIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TerminologyCapabilitiesRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.TaskIxUri", "ResourceId", "dbo.TaskRes");
            DropForeignKey("dbo.TaskIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TaskIxTok", "ResourceId", "dbo.TaskRes");
            DropForeignKey("dbo.TaskIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TaskIxStr", "ResourceId", "dbo.TaskRes");
            DropForeignKey("dbo.TaskIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TaskIxRef", "ResourceId", "dbo.TaskRes");
            DropForeignKey("dbo.TaskIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TaskIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.TaskIxQty", "ResourceId", "dbo.TaskRes");
            DropForeignKey("dbo.TaskIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TaskIxDT", "ResourceId", "dbo.TaskRes");
            DropForeignKey("dbo.TaskIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.TaskRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SupplyRequestIxUri", "ResourceId", "dbo.SupplyRequestRes");
            DropForeignKey("dbo.SupplyRequestIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyRequestIxTok", "ResourceId", "dbo.SupplyRequestRes");
            DropForeignKey("dbo.SupplyRequestIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyRequestIxStr", "ResourceId", "dbo.SupplyRequestRes");
            DropForeignKey("dbo.SupplyRequestIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyRequestIxRef", "ResourceId", "dbo.SupplyRequestRes");
            DropForeignKey("dbo.SupplyRequestIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyRequestIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SupplyRequestIxQty", "ResourceId", "dbo.SupplyRequestRes");
            DropForeignKey("dbo.SupplyRequestIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyRequestIxDT", "ResourceId", "dbo.SupplyRequestRes");
            DropForeignKey("dbo.SupplyRequestIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyRequestRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SupplyDeliveryIxUri", "ResourceId", "dbo.SupplyDeliveryRes");
            DropForeignKey("dbo.SupplyDeliveryIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyDeliveryIxTok", "ResourceId", "dbo.SupplyDeliveryRes");
            DropForeignKey("dbo.SupplyDeliveryIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyDeliveryIxStr", "ResourceId", "dbo.SupplyDeliveryRes");
            DropForeignKey("dbo.SupplyDeliveryIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyDeliveryIxRef", "ResourceId", "dbo.SupplyDeliveryRes");
            DropForeignKey("dbo.SupplyDeliveryIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyDeliveryIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SupplyDeliveryIxQty", "ResourceId", "dbo.SupplyDeliveryRes");
            DropForeignKey("dbo.SupplyDeliveryIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyDeliveryIxDT", "ResourceId", "dbo.SupplyDeliveryRes");
            DropForeignKey("dbo.SupplyDeliveryIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SupplyDeliveryRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SubstanceSpecificationIxUri", "ResourceId", "dbo.SubstanceSpecificationRes");
            DropForeignKey("dbo.SubstanceSpecificationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSpecificationIxTok", "ResourceId", "dbo.SubstanceSpecificationRes");
            DropForeignKey("dbo.SubstanceSpecificationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSpecificationIxStr", "ResourceId", "dbo.SubstanceSpecificationRes");
            DropForeignKey("dbo.SubstanceSpecificationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSpecificationIxRef", "ResourceId", "dbo.SubstanceSpecificationRes");
            DropForeignKey("dbo.SubstanceSpecificationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSpecificationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SubstanceSpecificationIxQty", "ResourceId", "dbo.SubstanceSpecificationRes");
            DropForeignKey("dbo.SubstanceSpecificationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSpecificationIxDT", "ResourceId", "dbo.SubstanceSpecificationRes");
            DropForeignKey("dbo.SubstanceSpecificationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSpecificationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SubstanceSourceMaterialIxUri", "ResourceId", "dbo.SubstanceSourceMaterialRes");
            DropForeignKey("dbo.SubstanceSourceMaterialIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSourceMaterialIxTok", "ResourceId", "dbo.SubstanceSourceMaterialRes");
            DropForeignKey("dbo.SubstanceSourceMaterialIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSourceMaterialIxStr", "ResourceId", "dbo.SubstanceSourceMaterialRes");
            DropForeignKey("dbo.SubstanceSourceMaterialIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSourceMaterialIxRef", "ResourceId", "dbo.SubstanceSourceMaterialRes");
            DropForeignKey("dbo.SubstanceSourceMaterialIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSourceMaterialIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SubstanceSourceMaterialIxQty", "ResourceId", "dbo.SubstanceSourceMaterialRes");
            DropForeignKey("dbo.SubstanceSourceMaterialIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSourceMaterialIxDT", "ResourceId", "dbo.SubstanceSourceMaterialRes");
            DropForeignKey("dbo.SubstanceSourceMaterialIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceSourceMaterialRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SubstanceReferenceInformationIxUri", "ResourceId", "dbo.SubstanceReferenceInformationRes");
            DropForeignKey("dbo.SubstanceReferenceInformationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceReferenceInformationIxTok", "ResourceId", "dbo.SubstanceReferenceInformationRes");
            DropForeignKey("dbo.SubstanceReferenceInformationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceReferenceInformationIxStr", "ResourceId", "dbo.SubstanceReferenceInformationRes");
            DropForeignKey("dbo.SubstanceReferenceInformationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceReferenceInformationIxRef", "ResourceId", "dbo.SubstanceReferenceInformationRes");
            DropForeignKey("dbo.SubstanceReferenceInformationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceReferenceInformationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SubstanceReferenceInformationIxQty", "ResourceId", "dbo.SubstanceReferenceInformationRes");
            DropForeignKey("dbo.SubstanceReferenceInformationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceReferenceInformationIxDT", "ResourceId", "dbo.SubstanceReferenceInformationRes");
            DropForeignKey("dbo.SubstanceReferenceInformationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceReferenceInformationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SubstanceProteinIxUri", "ResourceId", "dbo.SubstanceProteinRes");
            DropForeignKey("dbo.SubstanceProteinIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceProteinIxTok", "ResourceId", "dbo.SubstanceProteinRes");
            DropForeignKey("dbo.SubstanceProteinIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceProteinIxStr", "ResourceId", "dbo.SubstanceProteinRes");
            DropForeignKey("dbo.SubstanceProteinIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceProteinIxRef", "ResourceId", "dbo.SubstanceProteinRes");
            DropForeignKey("dbo.SubstanceProteinIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceProteinIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SubstanceProteinIxQty", "ResourceId", "dbo.SubstanceProteinRes");
            DropForeignKey("dbo.SubstanceProteinIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceProteinIxDT", "ResourceId", "dbo.SubstanceProteinRes");
            DropForeignKey("dbo.SubstanceProteinIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceProteinRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SubstancePolymerIxUri", "ResourceId", "dbo.SubstancePolymerRes");
            DropForeignKey("dbo.SubstancePolymerIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstancePolymerIxTok", "ResourceId", "dbo.SubstancePolymerRes");
            DropForeignKey("dbo.SubstancePolymerIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstancePolymerIxStr", "ResourceId", "dbo.SubstancePolymerRes");
            DropForeignKey("dbo.SubstancePolymerIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstancePolymerIxRef", "ResourceId", "dbo.SubstancePolymerRes");
            DropForeignKey("dbo.SubstancePolymerIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstancePolymerIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SubstancePolymerIxQty", "ResourceId", "dbo.SubstancePolymerRes");
            DropForeignKey("dbo.SubstancePolymerIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstancePolymerIxDT", "ResourceId", "dbo.SubstancePolymerRes");
            DropForeignKey("dbo.SubstancePolymerIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstancePolymerRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SubstanceNucleicAcidIxUri", "ResourceId", "dbo.SubstanceNucleicAcidRes");
            DropForeignKey("dbo.SubstanceNucleicAcidIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceNucleicAcidIxTok", "ResourceId", "dbo.SubstanceNucleicAcidRes");
            DropForeignKey("dbo.SubstanceNucleicAcidIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceNucleicAcidIxStr", "ResourceId", "dbo.SubstanceNucleicAcidRes");
            DropForeignKey("dbo.SubstanceNucleicAcidIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceNucleicAcidIxRef", "ResourceId", "dbo.SubstanceNucleicAcidRes");
            DropForeignKey("dbo.SubstanceNucleicAcidIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceNucleicAcidIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SubstanceNucleicAcidIxQty", "ResourceId", "dbo.SubstanceNucleicAcidRes");
            DropForeignKey("dbo.SubstanceNucleicAcidIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceNucleicAcidIxDT", "ResourceId", "dbo.SubstanceNucleicAcidRes");
            DropForeignKey("dbo.SubstanceNucleicAcidIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceNucleicAcidRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SubstanceIxUri", "ResourceId", "dbo.SubstanceRes");
            DropForeignKey("dbo.SubstanceIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceIxTok", "ResourceId", "dbo.SubstanceRes");
            DropForeignKey("dbo.SubstanceIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceIxStr", "ResourceId", "dbo.SubstanceRes");
            DropForeignKey("dbo.SubstanceIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceIxRef", "ResourceId", "dbo.SubstanceRes");
            DropForeignKey("dbo.SubstanceIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SubstanceIxQty", "ResourceId", "dbo.SubstanceRes");
            DropForeignKey("dbo.SubstanceIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceIxDT", "ResourceId", "dbo.SubstanceRes");
            DropForeignKey("dbo.SubstanceIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubstanceRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SubscriptionIxUri", "ResourceId", "dbo.SubscriptionRes");
            DropForeignKey("dbo.SubscriptionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubscriptionIxTok", "ResourceId", "dbo.SubscriptionRes");
            DropForeignKey("dbo.SubscriptionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubscriptionIxStr", "ResourceId", "dbo.SubscriptionRes");
            DropForeignKey("dbo.SubscriptionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubscriptionIxRef", "ResourceId", "dbo.SubscriptionRes");
            DropForeignKey("dbo.SubscriptionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubscriptionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SubscriptionIxQty", "ResourceId", "dbo.SubscriptionRes");
            DropForeignKey("dbo.SubscriptionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubscriptionIxDT", "ResourceId", "dbo.SubscriptionRes");
            DropForeignKey("dbo.SubscriptionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SubscriptionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.StructureMapIxUri", "ResourceId", "dbo.StructureMapRes");
            DropForeignKey("dbo.StructureMapIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureMapIxTok", "ResourceId", "dbo.StructureMapRes");
            DropForeignKey("dbo.StructureMapIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureMapIxStr", "ResourceId", "dbo.StructureMapRes");
            DropForeignKey("dbo.StructureMapIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureMapIxRef", "ResourceId", "dbo.StructureMapRes");
            DropForeignKey("dbo.StructureMapIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureMapIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.StructureMapIxQty", "ResourceId", "dbo.StructureMapRes");
            DropForeignKey("dbo.StructureMapIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureMapIxDT", "ResourceId", "dbo.StructureMapRes");
            DropForeignKey("dbo.StructureMapIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureMapRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.StructureDefinitionIxUri", "ResourceId", "dbo.StructureDefinitionRes");
            DropForeignKey("dbo.StructureDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureDefinitionIxTok", "ResourceId", "dbo.StructureDefinitionRes");
            DropForeignKey("dbo.StructureDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureDefinitionIxStr", "ResourceId", "dbo.StructureDefinitionRes");
            DropForeignKey("dbo.StructureDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureDefinitionIxRef", "ResourceId", "dbo.StructureDefinitionRes");
            DropForeignKey("dbo.StructureDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.StructureDefinitionIxQty", "ResourceId", "dbo.StructureDefinitionRes");
            DropForeignKey("dbo.StructureDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureDefinitionIxDT", "ResourceId", "dbo.StructureDefinitionRes");
            DropForeignKey("dbo.StructureDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.StructureDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SpecimenIxUri", "ResourceId", "dbo.SpecimenRes");
            DropForeignKey("dbo.SpecimenIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenIxTok", "ResourceId", "dbo.SpecimenRes");
            DropForeignKey("dbo.SpecimenIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenIxStr", "ResourceId", "dbo.SpecimenRes");
            DropForeignKey("dbo.SpecimenIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenIxRef", "ResourceId", "dbo.SpecimenRes");
            DropForeignKey("dbo.SpecimenIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SpecimenIxQty", "ResourceId", "dbo.SpecimenRes");
            DropForeignKey("dbo.SpecimenIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenIxDT", "ResourceId", "dbo.SpecimenRes");
            DropForeignKey("dbo.SpecimenIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SpecimenDefinitionIxUri", "ResourceId", "dbo.SpecimenDefinitionRes");
            DropForeignKey("dbo.SpecimenDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenDefinitionIxTok", "ResourceId", "dbo.SpecimenDefinitionRes");
            DropForeignKey("dbo.SpecimenDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenDefinitionIxStr", "ResourceId", "dbo.SpecimenDefinitionRes");
            DropForeignKey("dbo.SpecimenDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenDefinitionIxRef", "ResourceId", "dbo.SpecimenDefinitionRes");
            DropForeignKey("dbo.SpecimenDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SpecimenDefinitionIxQty", "ResourceId", "dbo.SpecimenDefinitionRes");
            DropForeignKey("dbo.SpecimenDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenDefinitionIxDT", "ResourceId", "dbo.SpecimenDefinitionRes");
            DropForeignKey("dbo.SpecimenDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SpecimenDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SlotIxUri", "ResourceId", "dbo.SlotRes");
            DropForeignKey("dbo.SlotIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SlotIxTok", "ResourceId", "dbo.SlotRes");
            DropForeignKey("dbo.SlotIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SlotIxStr", "ResourceId", "dbo.SlotRes");
            DropForeignKey("dbo.SlotIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SlotIxRef", "ResourceId", "dbo.SlotRes");
            DropForeignKey("dbo.SlotIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SlotIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SlotIxQty", "ResourceId", "dbo.SlotRes");
            DropForeignKey("dbo.SlotIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SlotIxDT", "ResourceId", "dbo.SlotRes");
            DropForeignKey("dbo.SlotIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SlotRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ServiceRequestIxUri", "ResourceId", "dbo.ServiceRequestRes");
            DropForeignKey("dbo.ServiceRequestIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ServiceRequestIxTok", "ResourceId", "dbo.ServiceRequestRes");
            DropForeignKey("dbo.ServiceRequestIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ServiceRequestIxStr", "ResourceId", "dbo.ServiceRequestRes");
            DropForeignKey("dbo.ServiceRequestIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ServiceRequestIxRef", "ResourceId", "dbo.ServiceRequestRes");
            DropForeignKey("dbo.ServiceRequestIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ServiceRequestIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ServiceRequestIxQty", "ResourceId", "dbo.ServiceRequestRes");
            DropForeignKey("dbo.ServiceRequestIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ServiceRequestIxDT", "ResourceId", "dbo.ServiceRequestRes");
            DropForeignKey("dbo.ServiceRequestIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ServiceRequestRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.SearchParameterIxUri", "ResourceId", "dbo.SearchParameterRes");
            DropForeignKey("dbo.SearchParameterIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SearchParameterIxTok", "ResourceId", "dbo.SearchParameterRes");
            DropForeignKey("dbo.SearchParameterIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SearchParameterIxStr", "ResourceId", "dbo.SearchParameterRes");
            DropForeignKey("dbo.SearchParameterIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SearchParameterIxRef", "ResourceId", "dbo.SearchParameterRes");
            DropForeignKey("dbo.SearchParameterIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SearchParameterIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.SearchParameterIxQty", "ResourceId", "dbo.SearchParameterRes");
            DropForeignKey("dbo.SearchParameterIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SearchParameterIxDT", "ResourceId", "dbo.SearchParameterRes");
            DropForeignKey("dbo.SearchParameterIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.SearchParameterRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ScheduleIxUri", "ResourceId", "dbo.ScheduleRes");
            DropForeignKey("dbo.ScheduleIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ScheduleIxTok", "ResourceId", "dbo.ScheduleRes");
            DropForeignKey("dbo.ScheduleIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ScheduleIxStr", "ResourceId", "dbo.ScheduleRes");
            DropForeignKey("dbo.ScheduleIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ScheduleIxRef", "ResourceId", "dbo.ScheduleRes");
            DropForeignKey("dbo.ScheduleIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ScheduleIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ScheduleIxQty", "ResourceId", "dbo.ScheduleRes");
            DropForeignKey("dbo.ScheduleIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ScheduleIxDT", "ResourceId", "dbo.ScheduleRes");
            DropForeignKey("dbo.ScheduleIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ScheduleRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxUri", "ResourceId", "dbo.RiskEvidenceSynthesisRes");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxTok", "ResourceId", "dbo.RiskEvidenceSynthesisRes");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxStr", "ResourceId", "dbo.RiskEvidenceSynthesisRes");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxRef", "ResourceId", "dbo.RiskEvidenceSynthesisRes");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxQty", "ResourceId", "dbo.RiskEvidenceSynthesisRes");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxDT", "ResourceId", "dbo.RiskEvidenceSynthesisRes");
            DropForeignKey("dbo.RiskEvidenceSynthesisIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskEvidenceSynthesisRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.RiskAssessmentIxUri", "ResourceId", "dbo.RiskAssessmentRes");
            DropForeignKey("dbo.RiskAssessmentIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskAssessmentIxTok", "ResourceId", "dbo.RiskAssessmentRes");
            DropForeignKey("dbo.RiskAssessmentIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskAssessmentIxStr", "ResourceId", "dbo.RiskAssessmentRes");
            DropForeignKey("dbo.RiskAssessmentIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskAssessmentIxRef", "ResourceId", "dbo.RiskAssessmentRes");
            DropForeignKey("dbo.RiskAssessmentIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskAssessmentIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.RiskAssessmentIxQty", "ResourceId", "dbo.RiskAssessmentRes");
            DropForeignKey("dbo.RiskAssessmentIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskAssessmentIxDT", "ResourceId", "dbo.RiskAssessmentRes");
            DropForeignKey("dbo.RiskAssessmentIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RiskAssessmentRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ResearchSubjectIxUri", "ResourceId", "dbo.ResearchSubjectRes");
            DropForeignKey("dbo.ResearchSubjectIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchSubjectIxTok", "ResourceId", "dbo.ResearchSubjectRes");
            DropForeignKey("dbo.ResearchSubjectIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchSubjectIxStr", "ResourceId", "dbo.ResearchSubjectRes");
            DropForeignKey("dbo.ResearchSubjectIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchSubjectIxRef", "ResourceId", "dbo.ResearchSubjectRes");
            DropForeignKey("dbo.ResearchSubjectIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchSubjectIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ResearchSubjectIxQty", "ResourceId", "dbo.ResearchSubjectRes");
            DropForeignKey("dbo.ResearchSubjectIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchSubjectIxDT", "ResourceId", "dbo.ResearchSubjectRes");
            DropForeignKey("dbo.ResearchSubjectIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchSubjectRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ResearchStudyIxUri", "ResourceId", "dbo.ResearchStudyRes");
            DropForeignKey("dbo.ResearchStudyIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchStudyIxTok", "ResourceId", "dbo.ResearchStudyRes");
            DropForeignKey("dbo.ResearchStudyIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchStudyIxStr", "ResourceId", "dbo.ResearchStudyRes");
            DropForeignKey("dbo.ResearchStudyIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchStudyIxRef", "ResourceId", "dbo.ResearchStudyRes");
            DropForeignKey("dbo.ResearchStudyIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchStudyIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ResearchStudyIxQty", "ResourceId", "dbo.ResearchStudyRes");
            DropForeignKey("dbo.ResearchStudyIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchStudyIxDT", "ResourceId", "dbo.ResearchStudyRes");
            DropForeignKey("dbo.ResearchStudyIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchStudyRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ResearchElementDefinitionIxUri", "ResourceId", "dbo.ResearchElementDefinitionRes");
            DropForeignKey("dbo.ResearchElementDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchElementDefinitionIxTok", "ResourceId", "dbo.ResearchElementDefinitionRes");
            DropForeignKey("dbo.ResearchElementDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchElementDefinitionIxStr", "ResourceId", "dbo.ResearchElementDefinitionRes");
            DropForeignKey("dbo.ResearchElementDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchElementDefinitionIxRef", "ResourceId", "dbo.ResearchElementDefinitionRes");
            DropForeignKey("dbo.ResearchElementDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchElementDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ResearchElementDefinitionIxQty", "ResourceId", "dbo.ResearchElementDefinitionRes");
            DropForeignKey("dbo.ResearchElementDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchElementDefinitionIxDT", "ResourceId", "dbo.ResearchElementDefinitionRes");
            DropForeignKey("dbo.ResearchElementDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchElementDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ResearchDefinitionIxUri", "ResourceId", "dbo.ResearchDefinitionRes");
            DropForeignKey("dbo.ResearchDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchDefinitionIxTok", "ResourceId", "dbo.ResearchDefinitionRes");
            DropForeignKey("dbo.ResearchDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchDefinitionIxStr", "ResourceId", "dbo.ResearchDefinitionRes");
            DropForeignKey("dbo.ResearchDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchDefinitionIxRef", "ResourceId", "dbo.ResearchDefinitionRes");
            DropForeignKey("dbo.ResearchDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ResearchDefinitionIxQty", "ResourceId", "dbo.ResearchDefinitionRes");
            DropForeignKey("dbo.ResearchDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchDefinitionIxDT", "ResourceId", "dbo.ResearchDefinitionRes");
            DropForeignKey("dbo.ResearchDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ResearchDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.RequestGroupIxUri", "ResourceId", "dbo.RequestGroupRes");
            DropForeignKey("dbo.RequestGroupIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RequestGroupIxTok", "ResourceId", "dbo.RequestGroupRes");
            DropForeignKey("dbo.RequestGroupIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RequestGroupIxStr", "ResourceId", "dbo.RequestGroupRes");
            DropForeignKey("dbo.RequestGroupIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RequestGroupIxRef", "ResourceId", "dbo.RequestGroupRes");
            DropForeignKey("dbo.RequestGroupIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RequestGroupIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.RequestGroupIxQty", "ResourceId", "dbo.RequestGroupRes");
            DropForeignKey("dbo.RequestGroupIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RequestGroupIxDT", "ResourceId", "dbo.RequestGroupRes");
            DropForeignKey("dbo.RequestGroupIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RequestGroupRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.RelatedPersonIxUri", "ResourceId", "dbo.RelatedPersonRes");
            DropForeignKey("dbo.RelatedPersonIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RelatedPersonIxTok", "ResourceId", "dbo.RelatedPersonRes");
            DropForeignKey("dbo.RelatedPersonIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RelatedPersonIxStr", "ResourceId", "dbo.RelatedPersonRes");
            DropForeignKey("dbo.RelatedPersonIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RelatedPersonIxRef", "ResourceId", "dbo.RelatedPersonRes");
            DropForeignKey("dbo.RelatedPersonIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RelatedPersonIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.RelatedPersonIxQty", "ResourceId", "dbo.RelatedPersonRes");
            DropForeignKey("dbo.RelatedPersonIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RelatedPersonIxDT", "ResourceId", "dbo.RelatedPersonRes");
            DropForeignKey("dbo.RelatedPersonIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.RelatedPersonRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.QuestionnaireResponseIxUri", "ResourceId", "dbo.QuestionnaireResponseRes");
            DropForeignKey("dbo.QuestionnaireResponseIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireResponseIxTok", "ResourceId", "dbo.QuestionnaireResponseRes");
            DropForeignKey("dbo.QuestionnaireResponseIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireResponseIxStr", "ResourceId", "dbo.QuestionnaireResponseRes");
            DropForeignKey("dbo.QuestionnaireResponseIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireResponseIxRef", "ResourceId", "dbo.QuestionnaireResponseRes");
            DropForeignKey("dbo.QuestionnaireResponseIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireResponseIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.QuestionnaireResponseIxQty", "ResourceId", "dbo.QuestionnaireResponseRes");
            DropForeignKey("dbo.QuestionnaireResponseIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireResponseIxDT", "ResourceId", "dbo.QuestionnaireResponseRes");
            DropForeignKey("dbo.QuestionnaireResponseIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireResponseRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.QuestionnaireIxUri", "ResourceId", "dbo.QuestionnaireRes");
            DropForeignKey("dbo.QuestionnaireIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireIxTok", "ResourceId", "dbo.QuestionnaireRes");
            DropForeignKey("dbo.QuestionnaireIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireIxStr", "ResourceId", "dbo.QuestionnaireRes");
            DropForeignKey("dbo.QuestionnaireIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireIxRef", "ResourceId", "dbo.QuestionnaireRes");
            DropForeignKey("dbo.QuestionnaireIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.QuestionnaireIxQty", "ResourceId", "dbo.QuestionnaireRes");
            DropForeignKey("dbo.QuestionnaireIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireIxDT", "ResourceId", "dbo.QuestionnaireRes");
            DropForeignKey("dbo.QuestionnaireIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.QuestionnaireRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ProvenanceIxUri", "ResourceId", "dbo.ProvenanceRes");
            DropForeignKey("dbo.ProvenanceIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProvenanceIxTok", "ResourceId", "dbo.ProvenanceRes");
            DropForeignKey("dbo.ProvenanceIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProvenanceIxStr", "ResourceId", "dbo.ProvenanceRes");
            DropForeignKey("dbo.ProvenanceIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProvenanceIxRef", "ResourceId", "dbo.ProvenanceRes");
            DropForeignKey("dbo.ProvenanceIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProvenanceIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ProvenanceIxQty", "ResourceId", "dbo.ProvenanceRes");
            DropForeignKey("dbo.ProvenanceIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProvenanceIxDT", "ResourceId", "dbo.ProvenanceRes");
            DropForeignKey("dbo.ProvenanceIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProvenanceRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ProcedureIxUri", "ResourceId", "dbo.ProcedureRes");
            DropForeignKey("dbo.ProcedureIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProcedureIxTok", "ResourceId", "dbo.ProcedureRes");
            DropForeignKey("dbo.ProcedureIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProcedureIxStr", "ResourceId", "dbo.ProcedureRes");
            DropForeignKey("dbo.ProcedureIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProcedureIxRef", "ResourceId", "dbo.ProcedureRes");
            DropForeignKey("dbo.ProcedureIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProcedureIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ProcedureIxQty", "ResourceId", "dbo.ProcedureRes");
            DropForeignKey("dbo.ProcedureIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProcedureIxDT", "ResourceId", "dbo.ProcedureRes");
            DropForeignKey("dbo.ProcedureIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ProcedureRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.PractitionerRoleIxUri", "ResourceId", "dbo.PractitionerRoleRes");
            DropForeignKey("dbo.PractitionerRoleIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerRoleIxTok", "ResourceId", "dbo.PractitionerRoleRes");
            DropForeignKey("dbo.PractitionerRoleIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerRoleIxStr", "ResourceId", "dbo.PractitionerRoleRes");
            DropForeignKey("dbo.PractitionerRoleIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerRoleIxRef", "ResourceId", "dbo.PractitionerRoleRes");
            DropForeignKey("dbo.PractitionerRoleIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerRoleIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.PractitionerRoleIxQty", "ResourceId", "dbo.PractitionerRoleRes");
            DropForeignKey("dbo.PractitionerRoleIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerRoleIxDT", "ResourceId", "dbo.PractitionerRoleRes");
            DropForeignKey("dbo.PractitionerRoleIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerRoleRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.PractitionerIxUri", "ResourceId", "dbo.PractitionerRes");
            DropForeignKey("dbo.PractitionerIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerIxTok", "ResourceId", "dbo.PractitionerRes");
            DropForeignKey("dbo.PractitionerIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerIxStr", "ResourceId", "dbo.PractitionerRes");
            DropForeignKey("dbo.PractitionerIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerIxRef", "ResourceId", "dbo.PractitionerRes");
            DropForeignKey("dbo.PractitionerIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.PractitionerIxQty", "ResourceId", "dbo.PractitionerRes");
            DropForeignKey("dbo.PractitionerIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerIxDT", "ResourceId", "dbo.PractitionerRes");
            DropForeignKey("dbo.PractitionerIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PractitionerRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.PlanDefinitionIxUri", "ResourceId", "dbo.PlanDefinitionRes");
            DropForeignKey("dbo.PlanDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PlanDefinitionIxTok", "ResourceId", "dbo.PlanDefinitionRes");
            DropForeignKey("dbo.PlanDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PlanDefinitionIxStr", "ResourceId", "dbo.PlanDefinitionRes");
            DropForeignKey("dbo.PlanDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PlanDefinitionIxRef", "ResourceId", "dbo.PlanDefinitionRes");
            DropForeignKey("dbo.PlanDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PlanDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.PlanDefinitionIxQty", "ResourceId", "dbo.PlanDefinitionRes");
            DropForeignKey("dbo.PlanDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PlanDefinitionIxDT", "ResourceId", "dbo.PlanDefinitionRes");
            DropForeignKey("dbo.PlanDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PlanDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.PersonIxUri", "ResourceId", "dbo.PersonRes");
            DropForeignKey("dbo.PersonIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PersonIxTok", "ResourceId", "dbo.PersonRes");
            DropForeignKey("dbo.PersonIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PersonIxStr", "ResourceId", "dbo.PersonRes");
            DropForeignKey("dbo.PersonIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PersonIxRef", "ResourceId", "dbo.PersonRes");
            DropForeignKey("dbo.PersonIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PersonIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.PersonIxQty", "ResourceId", "dbo.PersonRes");
            DropForeignKey("dbo.PersonIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PersonIxDT", "ResourceId", "dbo.PersonRes");
            DropForeignKey("dbo.PersonIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PersonRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.PaymentReconciliationIxUri", "ResourceId", "dbo.PaymentReconciliationRes");
            DropForeignKey("dbo.PaymentReconciliationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentReconciliationIxTok", "ResourceId", "dbo.PaymentReconciliationRes");
            DropForeignKey("dbo.PaymentReconciliationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentReconciliationIxStr", "ResourceId", "dbo.PaymentReconciliationRes");
            DropForeignKey("dbo.PaymentReconciliationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentReconciliationIxRef", "ResourceId", "dbo.PaymentReconciliationRes");
            DropForeignKey("dbo.PaymentReconciliationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentReconciliationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.PaymentReconciliationIxQty", "ResourceId", "dbo.PaymentReconciliationRes");
            DropForeignKey("dbo.PaymentReconciliationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentReconciliationIxDT", "ResourceId", "dbo.PaymentReconciliationRes");
            DropForeignKey("dbo.PaymentReconciliationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentReconciliationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.PaymentNoticeIxUri", "ResourceId", "dbo.PaymentNoticeRes");
            DropForeignKey("dbo.PaymentNoticeIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentNoticeIxTok", "ResourceId", "dbo.PaymentNoticeRes");
            DropForeignKey("dbo.PaymentNoticeIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentNoticeIxStr", "ResourceId", "dbo.PaymentNoticeRes");
            DropForeignKey("dbo.PaymentNoticeIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentNoticeIxRef", "ResourceId", "dbo.PaymentNoticeRes");
            DropForeignKey("dbo.PaymentNoticeIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentNoticeIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.PaymentNoticeIxQty", "ResourceId", "dbo.PaymentNoticeRes");
            DropForeignKey("dbo.PaymentNoticeIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentNoticeIxDT", "ResourceId", "dbo.PaymentNoticeRes");
            DropForeignKey("dbo.PaymentNoticeIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PaymentNoticeRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.PatientIxUri", "ResourceId", "dbo.PatientRes");
            DropForeignKey("dbo.PatientIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PatientIxTok", "ResourceId", "dbo.PatientRes");
            DropForeignKey("dbo.PatientIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PatientIxStr", "ResourceId", "dbo.PatientRes");
            DropForeignKey("dbo.PatientIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PatientIxRef", "ResourceId", "dbo.PatientRes");
            DropForeignKey("dbo.PatientIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PatientIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.PatientIxQty", "ResourceId", "dbo.PatientRes");
            DropForeignKey("dbo.PatientIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PatientIxDT", "ResourceId", "dbo.PatientRes");
            DropForeignKey("dbo.PatientIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.PatientRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ParametersIxUri", "ResourceId", "dbo.ParametersRes");
            DropForeignKey("dbo.ParametersIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ParametersIxTok", "ResourceId", "dbo.ParametersRes");
            DropForeignKey("dbo.ParametersIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ParametersIxStr", "ResourceId", "dbo.ParametersRes");
            DropForeignKey("dbo.ParametersIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ParametersIxRef", "ResourceId", "dbo.ParametersRes");
            DropForeignKey("dbo.ParametersIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ParametersIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ParametersIxQty", "ResourceId", "dbo.ParametersRes");
            DropForeignKey("dbo.ParametersIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ParametersIxDT", "ResourceId", "dbo.ParametersRes");
            DropForeignKey("dbo.ParametersIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ParametersRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.OrganizationIxUri", "ResourceId", "dbo.OrganizationRes");
            DropForeignKey("dbo.OrganizationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationIxTok", "ResourceId", "dbo.OrganizationRes");
            DropForeignKey("dbo.OrganizationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationIxStr", "ResourceId", "dbo.OrganizationRes");
            DropForeignKey("dbo.OrganizationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationIxRef", "ResourceId", "dbo.OrganizationRes");
            DropForeignKey("dbo.OrganizationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.OrganizationIxQty", "ResourceId", "dbo.OrganizationRes");
            DropForeignKey("dbo.OrganizationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationIxDT", "ResourceId", "dbo.OrganizationRes");
            DropForeignKey("dbo.OrganizationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.OrganizationAffiliationIxUri", "ResourceId", "dbo.OrganizationAffiliationRes");
            DropForeignKey("dbo.OrganizationAffiliationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationAffiliationIxTok", "ResourceId", "dbo.OrganizationAffiliationRes");
            DropForeignKey("dbo.OrganizationAffiliationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationAffiliationIxStr", "ResourceId", "dbo.OrganizationAffiliationRes");
            DropForeignKey("dbo.OrganizationAffiliationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationAffiliationIxRef", "ResourceId", "dbo.OrganizationAffiliationRes");
            DropForeignKey("dbo.OrganizationAffiliationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationAffiliationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.OrganizationAffiliationIxQty", "ResourceId", "dbo.OrganizationAffiliationRes");
            DropForeignKey("dbo.OrganizationAffiliationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationAffiliationIxDT", "ResourceId", "dbo.OrganizationAffiliationRes");
            DropForeignKey("dbo.OrganizationAffiliationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OrganizationAffiliationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.OperationOutcomeIxUri", "ResourceId", "dbo.OperationOutcomeRes");
            DropForeignKey("dbo.OperationOutcomeIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationOutcomeIxTok", "ResourceId", "dbo.OperationOutcomeRes");
            DropForeignKey("dbo.OperationOutcomeIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationOutcomeIxStr", "ResourceId", "dbo.OperationOutcomeRes");
            DropForeignKey("dbo.OperationOutcomeIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationOutcomeIxRef", "ResourceId", "dbo.OperationOutcomeRes");
            DropForeignKey("dbo.OperationOutcomeIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationOutcomeIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.OperationOutcomeIxQty", "ResourceId", "dbo.OperationOutcomeRes");
            DropForeignKey("dbo.OperationOutcomeIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationOutcomeIxDT", "ResourceId", "dbo.OperationOutcomeRes");
            DropForeignKey("dbo.OperationOutcomeIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationOutcomeRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.OperationDefinitionIxUri", "ResourceId", "dbo.OperationDefinitionRes");
            DropForeignKey("dbo.OperationDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationDefinitionIxTok", "ResourceId", "dbo.OperationDefinitionRes");
            DropForeignKey("dbo.OperationDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationDefinitionIxStr", "ResourceId", "dbo.OperationDefinitionRes");
            DropForeignKey("dbo.OperationDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationDefinitionIxRef", "ResourceId", "dbo.OperationDefinitionRes");
            DropForeignKey("dbo.OperationDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.OperationDefinitionIxQty", "ResourceId", "dbo.OperationDefinitionRes");
            DropForeignKey("dbo.OperationDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationDefinitionIxDT", "ResourceId", "dbo.OperationDefinitionRes");
            DropForeignKey("dbo.OperationDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.OperationDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ObservationIxUri", "ResourceId", "dbo.ObservationRes");
            DropForeignKey("dbo.ObservationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationIxTok", "ResourceId", "dbo.ObservationRes");
            DropForeignKey("dbo.ObservationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationIxStr", "ResourceId", "dbo.ObservationRes");
            DropForeignKey("dbo.ObservationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationIxRef", "ResourceId", "dbo.ObservationRes");
            DropForeignKey("dbo.ObservationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ObservationIxQty", "ResourceId", "dbo.ObservationRes");
            DropForeignKey("dbo.ObservationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationIxDT", "ResourceId", "dbo.ObservationRes");
            DropForeignKey("dbo.ObservationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ObservationDefinitionIxUri", "ResourceId", "dbo.ObservationDefinitionRes");
            DropForeignKey("dbo.ObservationDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationDefinitionIxTok", "ResourceId", "dbo.ObservationDefinitionRes");
            DropForeignKey("dbo.ObservationDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationDefinitionIxStr", "ResourceId", "dbo.ObservationDefinitionRes");
            DropForeignKey("dbo.ObservationDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationDefinitionIxRef", "ResourceId", "dbo.ObservationDefinitionRes");
            DropForeignKey("dbo.ObservationDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ObservationDefinitionIxQty", "ResourceId", "dbo.ObservationDefinitionRes");
            DropForeignKey("dbo.ObservationDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationDefinitionIxDT", "ResourceId", "dbo.ObservationDefinitionRes");
            DropForeignKey("dbo.ObservationDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ObservationDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.NutritionOrderIxUri", "ResourceId", "dbo.NutritionOrderRes");
            DropForeignKey("dbo.NutritionOrderIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NutritionOrderIxTok", "ResourceId", "dbo.NutritionOrderRes");
            DropForeignKey("dbo.NutritionOrderIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NutritionOrderIxStr", "ResourceId", "dbo.NutritionOrderRes");
            DropForeignKey("dbo.NutritionOrderIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NutritionOrderIxRef", "ResourceId", "dbo.NutritionOrderRes");
            DropForeignKey("dbo.NutritionOrderIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NutritionOrderIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.NutritionOrderIxQty", "ResourceId", "dbo.NutritionOrderRes");
            DropForeignKey("dbo.NutritionOrderIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NutritionOrderIxDT", "ResourceId", "dbo.NutritionOrderRes");
            DropForeignKey("dbo.NutritionOrderIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NutritionOrderRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.NamingSystemIxUri", "ResourceId", "dbo.NamingSystemRes");
            DropForeignKey("dbo.NamingSystemIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NamingSystemIxTok", "ResourceId", "dbo.NamingSystemRes");
            DropForeignKey("dbo.NamingSystemIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NamingSystemIxStr", "ResourceId", "dbo.NamingSystemRes");
            DropForeignKey("dbo.NamingSystemIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NamingSystemIxRef", "ResourceId", "dbo.NamingSystemRes");
            DropForeignKey("dbo.NamingSystemIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NamingSystemIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.NamingSystemIxQty", "ResourceId", "dbo.NamingSystemRes");
            DropForeignKey("dbo.NamingSystemIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NamingSystemIxDT", "ResourceId", "dbo.NamingSystemRes");
            DropForeignKey("dbo.NamingSystemIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.NamingSystemRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MolecularSequenceIxUri", "ResourceId", "dbo.MolecularSequenceRes");
            DropForeignKey("dbo.MolecularSequenceIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MolecularSequenceIxTok", "ResourceId", "dbo.MolecularSequenceRes");
            DropForeignKey("dbo.MolecularSequenceIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MolecularSequenceIxStr", "ResourceId", "dbo.MolecularSequenceRes");
            DropForeignKey("dbo.MolecularSequenceIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MolecularSequenceIxRef", "ResourceId", "dbo.MolecularSequenceRes");
            DropForeignKey("dbo.MolecularSequenceIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MolecularSequenceIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MolecularSequenceIxQty", "ResourceId", "dbo.MolecularSequenceRes");
            DropForeignKey("dbo.MolecularSequenceIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MolecularSequenceIxDT", "ResourceId", "dbo.MolecularSequenceRes");
            DropForeignKey("dbo.MolecularSequenceIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MolecularSequenceRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MessageHeaderIxUri", "ResourceId", "dbo.MessageHeaderRes");
            DropForeignKey("dbo.MessageHeaderIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageHeaderIxTok", "ResourceId", "dbo.MessageHeaderRes");
            DropForeignKey("dbo.MessageHeaderIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageHeaderIxStr", "ResourceId", "dbo.MessageHeaderRes");
            DropForeignKey("dbo.MessageHeaderIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageHeaderIxRef", "ResourceId", "dbo.MessageHeaderRes");
            DropForeignKey("dbo.MessageHeaderIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageHeaderIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MessageHeaderIxQty", "ResourceId", "dbo.MessageHeaderRes");
            DropForeignKey("dbo.MessageHeaderIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageHeaderIxDT", "ResourceId", "dbo.MessageHeaderRes");
            DropForeignKey("dbo.MessageHeaderIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageHeaderRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MessageDefinitionIxUri", "ResourceId", "dbo.MessageDefinitionRes");
            DropForeignKey("dbo.MessageDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageDefinitionIxTok", "ResourceId", "dbo.MessageDefinitionRes");
            DropForeignKey("dbo.MessageDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageDefinitionIxStr", "ResourceId", "dbo.MessageDefinitionRes");
            DropForeignKey("dbo.MessageDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageDefinitionIxRef", "ResourceId", "dbo.MessageDefinitionRes");
            DropForeignKey("dbo.MessageDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MessageDefinitionIxQty", "ResourceId", "dbo.MessageDefinitionRes");
            DropForeignKey("dbo.MessageDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageDefinitionIxDT", "ResourceId", "dbo.MessageDefinitionRes");
            DropForeignKey("dbo.MessageDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MessageDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxUri", "ResourceId", "dbo.MedicinalProductUndesirableEffectRes");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxTok", "ResourceId", "dbo.MedicinalProductUndesirableEffectRes");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxStr", "ResourceId", "dbo.MedicinalProductUndesirableEffectRes");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxRef", "ResourceId", "dbo.MedicinalProductUndesirableEffectRes");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxQty", "ResourceId", "dbo.MedicinalProductUndesirableEffectRes");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxDT", "ResourceId", "dbo.MedicinalProductUndesirableEffectRes");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductUndesirableEffectRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxUri", "ResourceId", "dbo.MedicinalProductPharmaceuticalRes");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxTok", "ResourceId", "dbo.MedicinalProductPharmaceuticalRes");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxStr", "ResourceId", "dbo.MedicinalProductPharmaceuticalRes");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxRef", "ResourceId", "dbo.MedicinalProductPharmaceuticalRes");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxQty", "ResourceId", "dbo.MedicinalProductPharmaceuticalRes");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxDT", "ResourceId", "dbo.MedicinalProductPharmaceuticalRes");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPharmaceuticalRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicinalProductPackagedIxUri", "ResourceId", "dbo.MedicinalProductPackagedRes");
            DropForeignKey("dbo.MedicinalProductPackagedIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPackagedIxTok", "ResourceId", "dbo.MedicinalProductPackagedRes");
            DropForeignKey("dbo.MedicinalProductPackagedIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPackagedIxStr", "ResourceId", "dbo.MedicinalProductPackagedRes");
            DropForeignKey("dbo.MedicinalProductPackagedIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPackagedIxRef", "ResourceId", "dbo.MedicinalProductPackagedRes");
            DropForeignKey("dbo.MedicinalProductPackagedIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPackagedIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicinalProductPackagedIxQty", "ResourceId", "dbo.MedicinalProductPackagedRes");
            DropForeignKey("dbo.MedicinalProductPackagedIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPackagedIxDT", "ResourceId", "dbo.MedicinalProductPackagedRes");
            DropForeignKey("dbo.MedicinalProductPackagedIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductPackagedRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicinalProductManufacturedIxUri", "ResourceId", "dbo.MedicinalProductManufacturedRes");
            DropForeignKey("dbo.MedicinalProductManufacturedIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductManufacturedIxTok", "ResourceId", "dbo.MedicinalProductManufacturedRes");
            DropForeignKey("dbo.MedicinalProductManufacturedIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductManufacturedIxStr", "ResourceId", "dbo.MedicinalProductManufacturedRes");
            DropForeignKey("dbo.MedicinalProductManufacturedIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductManufacturedIxRef", "ResourceId", "dbo.MedicinalProductManufacturedRes");
            DropForeignKey("dbo.MedicinalProductManufacturedIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductManufacturedIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicinalProductManufacturedIxQty", "ResourceId", "dbo.MedicinalProductManufacturedRes");
            DropForeignKey("dbo.MedicinalProductManufacturedIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductManufacturedIxDT", "ResourceId", "dbo.MedicinalProductManufacturedRes");
            DropForeignKey("dbo.MedicinalProductManufacturedIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductManufacturedRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicinalProductIxUri", "ResourceId", "dbo.MedicinalProductRes");
            DropForeignKey("dbo.MedicinalProductIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIxTok", "ResourceId", "dbo.MedicinalProductRes");
            DropForeignKey("dbo.MedicinalProductIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIxStr", "ResourceId", "dbo.MedicinalProductRes");
            DropForeignKey("dbo.MedicinalProductIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIxRef", "ResourceId", "dbo.MedicinalProductRes");
            DropForeignKey("dbo.MedicinalProductIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicinalProductIxQty", "ResourceId", "dbo.MedicinalProductRes");
            DropForeignKey("dbo.MedicinalProductIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIxDT", "ResourceId", "dbo.MedicinalProductRes");
            DropForeignKey("dbo.MedicinalProductIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicinalProductInteractionIxUri", "ResourceId", "dbo.MedicinalProductInteractionRes");
            DropForeignKey("dbo.MedicinalProductInteractionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductInteractionIxTok", "ResourceId", "dbo.MedicinalProductInteractionRes");
            DropForeignKey("dbo.MedicinalProductInteractionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductInteractionIxStr", "ResourceId", "dbo.MedicinalProductInteractionRes");
            DropForeignKey("dbo.MedicinalProductInteractionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductInteractionIxRef", "ResourceId", "dbo.MedicinalProductInteractionRes");
            DropForeignKey("dbo.MedicinalProductInteractionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductInteractionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicinalProductInteractionIxQty", "ResourceId", "dbo.MedicinalProductInteractionRes");
            DropForeignKey("dbo.MedicinalProductInteractionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductInteractionIxDT", "ResourceId", "dbo.MedicinalProductInteractionRes");
            DropForeignKey("dbo.MedicinalProductInteractionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductInteractionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicinalProductIngredientIxUri", "ResourceId", "dbo.MedicinalProductIngredientRes");
            DropForeignKey("dbo.MedicinalProductIngredientIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIngredientIxTok", "ResourceId", "dbo.MedicinalProductIngredientRes");
            DropForeignKey("dbo.MedicinalProductIngredientIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIngredientIxStr", "ResourceId", "dbo.MedicinalProductIngredientRes");
            DropForeignKey("dbo.MedicinalProductIngredientIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIngredientIxRef", "ResourceId", "dbo.MedicinalProductIngredientRes");
            DropForeignKey("dbo.MedicinalProductIngredientIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIngredientIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicinalProductIngredientIxQty", "ResourceId", "dbo.MedicinalProductIngredientRes");
            DropForeignKey("dbo.MedicinalProductIngredientIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIngredientIxDT", "ResourceId", "dbo.MedicinalProductIngredientRes");
            DropForeignKey("dbo.MedicinalProductIngredientIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIngredientRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicinalProductIndicationIxUri", "ResourceId", "dbo.MedicinalProductIndicationRes");
            DropForeignKey("dbo.MedicinalProductIndicationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIndicationIxTok", "ResourceId", "dbo.MedicinalProductIndicationRes");
            DropForeignKey("dbo.MedicinalProductIndicationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIndicationIxStr", "ResourceId", "dbo.MedicinalProductIndicationRes");
            DropForeignKey("dbo.MedicinalProductIndicationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIndicationIxRef", "ResourceId", "dbo.MedicinalProductIndicationRes");
            DropForeignKey("dbo.MedicinalProductIndicationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIndicationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicinalProductIndicationIxQty", "ResourceId", "dbo.MedicinalProductIndicationRes");
            DropForeignKey("dbo.MedicinalProductIndicationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIndicationIxDT", "ResourceId", "dbo.MedicinalProductIndicationRes");
            DropForeignKey("dbo.MedicinalProductIndicationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductIndicationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicinalProductContraindicationIxUri", "ResourceId", "dbo.MedicinalProductContraindicationRes");
            DropForeignKey("dbo.MedicinalProductContraindicationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductContraindicationIxTok", "ResourceId", "dbo.MedicinalProductContraindicationRes");
            DropForeignKey("dbo.MedicinalProductContraindicationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductContraindicationIxStr", "ResourceId", "dbo.MedicinalProductContraindicationRes");
            DropForeignKey("dbo.MedicinalProductContraindicationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductContraindicationIxRef", "ResourceId", "dbo.MedicinalProductContraindicationRes");
            DropForeignKey("dbo.MedicinalProductContraindicationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductContraindicationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicinalProductContraindicationIxQty", "ResourceId", "dbo.MedicinalProductContraindicationRes");
            DropForeignKey("dbo.MedicinalProductContraindicationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductContraindicationIxDT", "ResourceId", "dbo.MedicinalProductContraindicationRes");
            DropForeignKey("dbo.MedicinalProductContraindicationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductContraindicationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxUri", "ResourceId", "dbo.MedicinalProductAuthorizationRes");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxTok", "ResourceId", "dbo.MedicinalProductAuthorizationRes");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxStr", "ResourceId", "dbo.MedicinalProductAuthorizationRes");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxRef", "ResourceId", "dbo.MedicinalProductAuthorizationRes");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxQty", "ResourceId", "dbo.MedicinalProductAuthorizationRes");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxDT", "ResourceId", "dbo.MedicinalProductAuthorizationRes");
            DropForeignKey("dbo.MedicinalProductAuthorizationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicinalProductAuthorizationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicationStatementIxUri", "ResourceId", "dbo.MedicationStatementRes");
            DropForeignKey("dbo.MedicationStatementIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationStatementIxTok", "ResourceId", "dbo.MedicationStatementRes");
            DropForeignKey("dbo.MedicationStatementIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationStatementIxStr", "ResourceId", "dbo.MedicationStatementRes");
            DropForeignKey("dbo.MedicationStatementIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationStatementIxRef", "ResourceId", "dbo.MedicationStatementRes");
            DropForeignKey("dbo.MedicationStatementIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationStatementIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicationStatementIxQty", "ResourceId", "dbo.MedicationStatementRes");
            DropForeignKey("dbo.MedicationStatementIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationStatementIxDT", "ResourceId", "dbo.MedicationStatementRes");
            DropForeignKey("dbo.MedicationStatementIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationStatementRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicationRequestIxUri", "ResourceId", "dbo.MedicationRequestRes");
            DropForeignKey("dbo.MedicationRequestIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationRequestIxTok", "ResourceId", "dbo.MedicationRequestRes");
            DropForeignKey("dbo.MedicationRequestIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationRequestIxStr", "ResourceId", "dbo.MedicationRequestRes");
            DropForeignKey("dbo.MedicationRequestIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationRequestIxRef", "ResourceId", "dbo.MedicationRequestRes");
            DropForeignKey("dbo.MedicationRequestIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationRequestIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicationRequestIxQty", "ResourceId", "dbo.MedicationRequestRes");
            DropForeignKey("dbo.MedicationRequestIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationRequestIxDT", "ResourceId", "dbo.MedicationRequestRes");
            DropForeignKey("dbo.MedicationRequestIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationRequestRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicationIxUri", "ResourceId", "dbo.MedicationRes");
            DropForeignKey("dbo.MedicationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationIxTok", "ResourceId", "dbo.MedicationRes");
            DropForeignKey("dbo.MedicationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationIxStr", "ResourceId", "dbo.MedicationRes");
            DropForeignKey("dbo.MedicationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationIxRef", "ResourceId", "dbo.MedicationRes");
            DropForeignKey("dbo.MedicationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicationIxQty", "ResourceId", "dbo.MedicationRes");
            DropForeignKey("dbo.MedicationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationIxDT", "ResourceId", "dbo.MedicationRes");
            DropForeignKey("dbo.MedicationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicationKnowledgeIxUri", "ResourceId", "dbo.MedicationKnowledgeRes");
            DropForeignKey("dbo.MedicationKnowledgeIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationKnowledgeIxTok", "ResourceId", "dbo.MedicationKnowledgeRes");
            DropForeignKey("dbo.MedicationKnowledgeIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationKnowledgeIxStr", "ResourceId", "dbo.MedicationKnowledgeRes");
            DropForeignKey("dbo.MedicationKnowledgeIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationKnowledgeIxRef", "ResourceId", "dbo.MedicationKnowledgeRes");
            DropForeignKey("dbo.MedicationKnowledgeIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationKnowledgeIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicationKnowledgeIxQty", "ResourceId", "dbo.MedicationKnowledgeRes");
            DropForeignKey("dbo.MedicationKnowledgeIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationKnowledgeIxDT", "ResourceId", "dbo.MedicationKnowledgeRes");
            DropForeignKey("dbo.MedicationKnowledgeIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationKnowledgeRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicationDispenseIxUri", "ResourceId", "dbo.MedicationDispenseRes");
            DropForeignKey("dbo.MedicationDispenseIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationDispenseIxTok", "ResourceId", "dbo.MedicationDispenseRes");
            DropForeignKey("dbo.MedicationDispenseIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationDispenseIxStr", "ResourceId", "dbo.MedicationDispenseRes");
            DropForeignKey("dbo.MedicationDispenseIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationDispenseIxRef", "ResourceId", "dbo.MedicationDispenseRes");
            DropForeignKey("dbo.MedicationDispenseIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationDispenseIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicationDispenseIxQty", "ResourceId", "dbo.MedicationDispenseRes");
            DropForeignKey("dbo.MedicationDispenseIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationDispenseIxDT", "ResourceId", "dbo.MedicationDispenseRes");
            DropForeignKey("dbo.MedicationDispenseIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationDispenseRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MedicationAdministrationIxUri", "ResourceId", "dbo.MedicationAdministrationRes");
            DropForeignKey("dbo.MedicationAdministrationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationAdministrationIxTok", "ResourceId", "dbo.MedicationAdministrationRes");
            DropForeignKey("dbo.MedicationAdministrationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationAdministrationIxStr", "ResourceId", "dbo.MedicationAdministrationRes");
            DropForeignKey("dbo.MedicationAdministrationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationAdministrationIxRef", "ResourceId", "dbo.MedicationAdministrationRes");
            DropForeignKey("dbo.MedicationAdministrationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationAdministrationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MedicationAdministrationIxQty", "ResourceId", "dbo.MedicationAdministrationRes");
            DropForeignKey("dbo.MedicationAdministrationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationAdministrationIxDT", "ResourceId", "dbo.MedicationAdministrationRes");
            DropForeignKey("dbo.MedicationAdministrationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MedicationAdministrationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MediaIxUri", "ResourceId", "dbo.MediaRes");
            DropForeignKey("dbo.MediaIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MediaIxTok", "ResourceId", "dbo.MediaRes");
            DropForeignKey("dbo.MediaIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MediaIxStr", "ResourceId", "dbo.MediaRes");
            DropForeignKey("dbo.MediaIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MediaIxRef", "ResourceId", "dbo.MediaRes");
            DropForeignKey("dbo.MediaIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MediaIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MediaIxQty", "ResourceId", "dbo.MediaRes");
            DropForeignKey("dbo.MediaIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MediaIxDT", "ResourceId", "dbo.MediaRes");
            DropForeignKey("dbo.MediaIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MediaRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MeasureReportIxUri", "ResourceId", "dbo.MeasureReportRes");
            DropForeignKey("dbo.MeasureReportIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureReportIxTok", "ResourceId", "dbo.MeasureReportRes");
            DropForeignKey("dbo.MeasureReportIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureReportIxStr", "ResourceId", "dbo.MeasureReportRes");
            DropForeignKey("dbo.MeasureReportIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureReportIxRef", "ResourceId", "dbo.MeasureReportRes");
            DropForeignKey("dbo.MeasureReportIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureReportIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MeasureReportIxQty", "ResourceId", "dbo.MeasureReportRes");
            DropForeignKey("dbo.MeasureReportIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureReportIxDT", "ResourceId", "dbo.MeasureReportRes");
            DropForeignKey("dbo.MeasureReportIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureReportRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.MeasureIxUri", "ResourceId", "dbo.MeasureRes");
            DropForeignKey("dbo.MeasureIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureIxTok", "ResourceId", "dbo.MeasureRes");
            DropForeignKey("dbo.MeasureIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureIxStr", "ResourceId", "dbo.MeasureRes");
            DropForeignKey("dbo.MeasureIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureIxRef", "ResourceId", "dbo.MeasureRes");
            DropForeignKey("dbo.MeasureIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.MeasureIxQty", "ResourceId", "dbo.MeasureRes");
            DropForeignKey("dbo.MeasureIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureIxDT", "ResourceId", "dbo.MeasureRes");
            DropForeignKey("dbo.MeasureIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.MeasureRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.LocationIxUri", "ResourceId", "dbo.LocationRes");
            DropForeignKey("dbo.LocationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LocationIxTok", "ResourceId", "dbo.LocationRes");
            DropForeignKey("dbo.LocationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LocationIxStr", "ResourceId", "dbo.LocationRes");
            DropForeignKey("dbo.LocationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LocationIxRef", "ResourceId", "dbo.LocationRes");
            DropForeignKey("dbo.LocationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LocationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.LocationIxQty", "ResourceId", "dbo.LocationRes");
            DropForeignKey("dbo.LocationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LocationIxDT", "ResourceId", "dbo.LocationRes");
            DropForeignKey("dbo.LocationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LocationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ListIxUri", "ResourceId", "dbo.ListRes");
            DropForeignKey("dbo.ListIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ListIxTok", "ResourceId", "dbo.ListRes");
            DropForeignKey("dbo.ListIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ListIxStr", "ResourceId", "dbo.ListRes");
            DropForeignKey("dbo.ListIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ListIxRef", "ResourceId", "dbo.ListRes");
            DropForeignKey("dbo.ListIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ListIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ListIxQty", "ResourceId", "dbo.ListRes");
            DropForeignKey("dbo.ListIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ListIxDT", "ResourceId", "dbo.ListRes");
            DropForeignKey("dbo.ListIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ListRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.LinkageIxUri", "ResourceId", "dbo.LinkageRes");
            DropForeignKey("dbo.LinkageIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LinkageIxTok", "ResourceId", "dbo.LinkageRes");
            DropForeignKey("dbo.LinkageIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LinkageIxStr", "ResourceId", "dbo.LinkageRes");
            DropForeignKey("dbo.LinkageIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LinkageIxRef", "ResourceId", "dbo.LinkageRes");
            DropForeignKey("dbo.LinkageIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LinkageIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.LinkageIxQty", "ResourceId", "dbo.LinkageRes");
            DropForeignKey("dbo.LinkageIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LinkageIxDT", "ResourceId", "dbo.LinkageRes");
            DropForeignKey("dbo.LinkageIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LinkageRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.LibraryIxUri", "ResourceId", "dbo.LibraryRes");
            DropForeignKey("dbo.LibraryIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LibraryIxTok", "ResourceId", "dbo.LibraryRes");
            DropForeignKey("dbo.LibraryIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LibraryIxStr", "ResourceId", "dbo.LibraryRes");
            DropForeignKey("dbo.LibraryIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LibraryIxRef", "ResourceId", "dbo.LibraryRes");
            DropForeignKey("dbo.LibraryIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LibraryIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.LibraryIxQty", "ResourceId", "dbo.LibraryRes");
            DropForeignKey("dbo.LibraryIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LibraryIxDT", "ResourceId", "dbo.LibraryRes");
            DropForeignKey("dbo.LibraryIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.LibraryRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.InvoiceIxUri", "ResourceId", "dbo.InvoiceRes");
            DropForeignKey("dbo.InvoiceIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InvoiceIxTok", "ResourceId", "dbo.InvoiceRes");
            DropForeignKey("dbo.InvoiceIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InvoiceIxStr", "ResourceId", "dbo.InvoiceRes");
            DropForeignKey("dbo.InvoiceIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InvoiceIxRef", "ResourceId", "dbo.InvoiceRes");
            DropForeignKey("dbo.InvoiceIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InvoiceIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.InvoiceIxQty", "ResourceId", "dbo.InvoiceRes");
            DropForeignKey("dbo.InvoiceIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InvoiceIxDT", "ResourceId", "dbo.InvoiceRes");
            DropForeignKey("dbo.InvoiceIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InvoiceRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.InsurancePlanIxUri", "ResourceId", "dbo.InsurancePlanRes");
            DropForeignKey("dbo.InsurancePlanIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InsurancePlanIxTok", "ResourceId", "dbo.InsurancePlanRes");
            DropForeignKey("dbo.InsurancePlanIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InsurancePlanIxStr", "ResourceId", "dbo.InsurancePlanRes");
            DropForeignKey("dbo.InsurancePlanIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InsurancePlanIxRef", "ResourceId", "dbo.InsurancePlanRes");
            DropForeignKey("dbo.InsurancePlanIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InsurancePlanIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.InsurancePlanIxQty", "ResourceId", "dbo.InsurancePlanRes");
            DropForeignKey("dbo.InsurancePlanIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InsurancePlanIxDT", "ResourceId", "dbo.InsurancePlanRes");
            DropForeignKey("dbo.InsurancePlanIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.InsurancePlanRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ImplementationGuideIxUri", "ResourceId", "dbo.ImplementationGuideRes");
            DropForeignKey("dbo.ImplementationGuideIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImplementationGuideIxTok", "ResourceId", "dbo.ImplementationGuideRes");
            DropForeignKey("dbo.ImplementationGuideIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImplementationGuideIxStr", "ResourceId", "dbo.ImplementationGuideRes");
            DropForeignKey("dbo.ImplementationGuideIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImplementationGuideIxRef", "ResourceId", "dbo.ImplementationGuideRes");
            DropForeignKey("dbo.ImplementationGuideIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImplementationGuideIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ImplementationGuideIxQty", "ResourceId", "dbo.ImplementationGuideRes");
            DropForeignKey("dbo.ImplementationGuideIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImplementationGuideIxDT", "ResourceId", "dbo.ImplementationGuideRes");
            DropForeignKey("dbo.ImplementationGuideIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImplementationGuideRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ImmunizationRecommendationIxUri", "ResourceId", "dbo.ImmunizationRecommendationRes");
            DropForeignKey("dbo.ImmunizationRecommendationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationRecommendationIxTok", "ResourceId", "dbo.ImmunizationRecommendationRes");
            DropForeignKey("dbo.ImmunizationRecommendationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationRecommendationIxStr", "ResourceId", "dbo.ImmunizationRecommendationRes");
            DropForeignKey("dbo.ImmunizationRecommendationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationRecommendationIxRef", "ResourceId", "dbo.ImmunizationRecommendationRes");
            DropForeignKey("dbo.ImmunizationRecommendationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationRecommendationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ImmunizationRecommendationIxQty", "ResourceId", "dbo.ImmunizationRecommendationRes");
            DropForeignKey("dbo.ImmunizationRecommendationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationRecommendationIxDT", "ResourceId", "dbo.ImmunizationRecommendationRes");
            DropForeignKey("dbo.ImmunizationRecommendationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationRecommendationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ImmunizationIxUri", "ResourceId", "dbo.ImmunizationRes");
            DropForeignKey("dbo.ImmunizationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationIxTok", "ResourceId", "dbo.ImmunizationRes");
            DropForeignKey("dbo.ImmunizationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationIxStr", "ResourceId", "dbo.ImmunizationRes");
            DropForeignKey("dbo.ImmunizationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationIxRef", "ResourceId", "dbo.ImmunizationRes");
            DropForeignKey("dbo.ImmunizationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ImmunizationIxQty", "ResourceId", "dbo.ImmunizationRes");
            DropForeignKey("dbo.ImmunizationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationIxDT", "ResourceId", "dbo.ImmunizationRes");
            DropForeignKey("dbo.ImmunizationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ImmunizationEvaluationIxUri", "ResourceId", "dbo.ImmunizationEvaluationRes");
            DropForeignKey("dbo.ImmunizationEvaluationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationEvaluationIxTok", "ResourceId", "dbo.ImmunizationEvaluationRes");
            DropForeignKey("dbo.ImmunizationEvaluationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationEvaluationIxStr", "ResourceId", "dbo.ImmunizationEvaluationRes");
            DropForeignKey("dbo.ImmunizationEvaluationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationEvaluationIxRef", "ResourceId", "dbo.ImmunizationEvaluationRes");
            DropForeignKey("dbo.ImmunizationEvaluationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationEvaluationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ImmunizationEvaluationIxQty", "ResourceId", "dbo.ImmunizationEvaluationRes");
            DropForeignKey("dbo.ImmunizationEvaluationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationEvaluationIxDT", "ResourceId", "dbo.ImmunizationEvaluationRes");
            DropForeignKey("dbo.ImmunizationEvaluationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImmunizationEvaluationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ImagingStudyIxUri", "ResourceId", "dbo.ImagingStudyRes");
            DropForeignKey("dbo.ImagingStudyIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImagingStudyIxTok", "ResourceId", "dbo.ImagingStudyRes");
            DropForeignKey("dbo.ImagingStudyIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImagingStudyIxStr", "ResourceId", "dbo.ImagingStudyRes");
            DropForeignKey("dbo.ImagingStudyIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImagingStudyIxRef", "ResourceId", "dbo.ImagingStudyRes");
            DropForeignKey("dbo.ImagingStudyIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImagingStudyIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ImagingStudyIxQty", "ResourceId", "dbo.ImagingStudyRes");
            DropForeignKey("dbo.ImagingStudyIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImagingStudyIxDT", "ResourceId", "dbo.ImagingStudyRes");
            DropForeignKey("dbo.ImagingStudyIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ImagingStudyRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.HealthcareServiceIxUri", "ResourceId", "dbo.HealthcareServiceRes");
            DropForeignKey("dbo.HealthcareServiceIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.HealthcareServiceIxTok", "ResourceId", "dbo.HealthcareServiceRes");
            DropForeignKey("dbo.HealthcareServiceIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.HealthcareServiceIxStr", "ResourceId", "dbo.HealthcareServiceRes");
            DropForeignKey("dbo.HealthcareServiceIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.HealthcareServiceIxRef", "ResourceId", "dbo.HealthcareServiceRes");
            DropForeignKey("dbo.HealthcareServiceIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.HealthcareServiceIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.HealthcareServiceIxQty", "ResourceId", "dbo.HealthcareServiceRes");
            DropForeignKey("dbo.HealthcareServiceIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.HealthcareServiceIxDT", "ResourceId", "dbo.HealthcareServiceRes");
            DropForeignKey("dbo.HealthcareServiceIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.HealthcareServiceRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.GuidanceResponseIxUri", "ResourceId", "dbo.GuidanceResponseRes");
            DropForeignKey("dbo.GuidanceResponseIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GuidanceResponseIxTok", "ResourceId", "dbo.GuidanceResponseRes");
            DropForeignKey("dbo.GuidanceResponseIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GuidanceResponseIxStr", "ResourceId", "dbo.GuidanceResponseRes");
            DropForeignKey("dbo.GuidanceResponseIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GuidanceResponseIxRef", "ResourceId", "dbo.GuidanceResponseRes");
            DropForeignKey("dbo.GuidanceResponseIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GuidanceResponseIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.GuidanceResponseIxQty", "ResourceId", "dbo.GuidanceResponseRes");
            DropForeignKey("dbo.GuidanceResponseIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GuidanceResponseIxDT", "ResourceId", "dbo.GuidanceResponseRes");
            DropForeignKey("dbo.GuidanceResponseIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GuidanceResponseRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.GroupIxUri", "ResourceId", "dbo.GroupRes");
            DropForeignKey("dbo.GroupIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GroupIxTok", "ResourceId", "dbo.GroupRes");
            DropForeignKey("dbo.GroupIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GroupIxStr", "ResourceId", "dbo.GroupRes");
            DropForeignKey("dbo.GroupIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GroupIxRef", "ResourceId", "dbo.GroupRes");
            DropForeignKey("dbo.GroupIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GroupIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.GroupIxQty", "ResourceId", "dbo.GroupRes");
            DropForeignKey("dbo.GroupIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GroupIxDT", "ResourceId", "dbo.GroupRes");
            DropForeignKey("dbo.GroupIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GroupRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.GraphDefinitionIxUri", "ResourceId", "dbo.GraphDefinitionRes");
            DropForeignKey("dbo.GraphDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GraphDefinitionIxTok", "ResourceId", "dbo.GraphDefinitionRes");
            DropForeignKey("dbo.GraphDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GraphDefinitionIxStr", "ResourceId", "dbo.GraphDefinitionRes");
            DropForeignKey("dbo.GraphDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GraphDefinitionIxRef", "ResourceId", "dbo.GraphDefinitionRes");
            DropForeignKey("dbo.GraphDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GraphDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.GraphDefinitionIxQty", "ResourceId", "dbo.GraphDefinitionRes");
            DropForeignKey("dbo.GraphDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GraphDefinitionIxDT", "ResourceId", "dbo.GraphDefinitionRes");
            DropForeignKey("dbo.GraphDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GraphDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.GoalIxUri", "ResourceId", "dbo.GoalRes");
            DropForeignKey("dbo.GoalIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GoalIxTok", "ResourceId", "dbo.GoalRes");
            DropForeignKey("dbo.GoalIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GoalIxStr", "ResourceId", "dbo.GoalRes");
            DropForeignKey("dbo.GoalIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GoalIxRef", "ResourceId", "dbo.GoalRes");
            DropForeignKey("dbo.GoalIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GoalIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.GoalIxQty", "ResourceId", "dbo.GoalRes");
            DropForeignKey("dbo.GoalIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GoalIxDT", "ResourceId", "dbo.GoalRes");
            DropForeignKey("dbo.GoalIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.GoalRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.FlagIxUri", "ResourceId", "dbo.FlagRes");
            DropForeignKey("dbo.FlagIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FlagIxTok", "ResourceId", "dbo.FlagRes");
            DropForeignKey("dbo.FlagIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FlagIxStr", "ResourceId", "dbo.FlagRes");
            DropForeignKey("dbo.FlagIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FlagIxRef", "ResourceId", "dbo.FlagRes");
            DropForeignKey("dbo.FlagIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FlagIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.FlagIxQty", "ResourceId", "dbo.FlagRes");
            DropForeignKey("dbo.FlagIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FlagIxDT", "ResourceId", "dbo.FlagRes");
            DropForeignKey("dbo.FlagIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FlagRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.FamilyMemberHistoryIxUri", "ResourceId", "dbo.FamilyMemberHistoryRes");
            DropForeignKey("dbo.FamilyMemberHistoryIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FamilyMemberHistoryIxTok", "ResourceId", "dbo.FamilyMemberHistoryRes");
            DropForeignKey("dbo.FamilyMemberHistoryIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FamilyMemberHistoryIxStr", "ResourceId", "dbo.FamilyMemberHistoryRes");
            DropForeignKey("dbo.FamilyMemberHistoryIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FamilyMemberHistoryIxRef", "ResourceId", "dbo.FamilyMemberHistoryRes");
            DropForeignKey("dbo.FamilyMemberHistoryIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FamilyMemberHistoryIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.FamilyMemberHistoryIxQty", "ResourceId", "dbo.FamilyMemberHistoryRes");
            DropForeignKey("dbo.FamilyMemberHistoryIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FamilyMemberHistoryIxDT", "ResourceId", "dbo.FamilyMemberHistoryRes");
            DropForeignKey("dbo.FamilyMemberHistoryIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.FamilyMemberHistoryRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ExplanationOfBenefitIxUri", "ResourceId", "dbo.ExplanationOfBenefitRes");
            DropForeignKey("dbo.ExplanationOfBenefitIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExplanationOfBenefitIxTok", "ResourceId", "dbo.ExplanationOfBenefitRes");
            DropForeignKey("dbo.ExplanationOfBenefitIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExplanationOfBenefitIxStr", "ResourceId", "dbo.ExplanationOfBenefitRes");
            DropForeignKey("dbo.ExplanationOfBenefitIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExplanationOfBenefitIxRef", "ResourceId", "dbo.ExplanationOfBenefitRes");
            DropForeignKey("dbo.ExplanationOfBenefitIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExplanationOfBenefitIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ExplanationOfBenefitIxQty", "ResourceId", "dbo.ExplanationOfBenefitRes");
            DropForeignKey("dbo.ExplanationOfBenefitIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExplanationOfBenefitIxDT", "ResourceId", "dbo.ExplanationOfBenefitRes");
            DropForeignKey("dbo.ExplanationOfBenefitIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExplanationOfBenefitRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ExampleScenarioIxUri", "ResourceId", "dbo.ExampleScenarioRes");
            DropForeignKey("dbo.ExampleScenarioIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExampleScenarioIxTok", "ResourceId", "dbo.ExampleScenarioRes");
            DropForeignKey("dbo.ExampleScenarioIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExampleScenarioIxStr", "ResourceId", "dbo.ExampleScenarioRes");
            DropForeignKey("dbo.ExampleScenarioIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExampleScenarioIxRef", "ResourceId", "dbo.ExampleScenarioRes");
            DropForeignKey("dbo.ExampleScenarioIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExampleScenarioIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ExampleScenarioIxQty", "ResourceId", "dbo.ExampleScenarioRes");
            DropForeignKey("dbo.ExampleScenarioIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExampleScenarioIxDT", "ResourceId", "dbo.ExampleScenarioRes");
            DropForeignKey("dbo.ExampleScenarioIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ExampleScenarioRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.EvidenceVariableIxUri", "ResourceId", "dbo.EvidenceVariableRes");
            DropForeignKey("dbo.EvidenceVariableIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceVariableIxTok", "ResourceId", "dbo.EvidenceVariableRes");
            DropForeignKey("dbo.EvidenceVariableIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceVariableIxStr", "ResourceId", "dbo.EvidenceVariableRes");
            DropForeignKey("dbo.EvidenceVariableIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceVariableIxRef", "ResourceId", "dbo.EvidenceVariableRes");
            DropForeignKey("dbo.EvidenceVariableIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceVariableIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.EvidenceVariableIxQty", "ResourceId", "dbo.EvidenceVariableRes");
            DropForeignKey("dbo.EvidenceVariableIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceVariableIxDT", "ResourceId", "dbo.EvidenceVariableRes");
            DropForeignKey("dbo.EvidenceVariableIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceVariableRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.EvidenceIxUri", "ResourceId", "dbo.EvidenceRes");
            DropForeignKey("dbo.EvidenceIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceIxTok", "ResourceId", "dbo.EvidenceRes");
            DropForeignKey("dbo.EvidenceIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceIxStr", "ResourceId", "dbo.EvidenceRes");
            DropForeignKey("dbo.EvidenceIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceIxRef", "ResourceId", "dbo.EvidenceRes");
            DropForeignKey("dbo.EvidenceIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.EvidenceIxQty", "ResourceId", "dbo.EvidenceRes");
            DropForeignKey("dbo.EvidenceIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceIxDT", "ResourceId", "dbo.EvidenceRes");
            DropForeignKey("dbo.EvidenceIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EvidenceRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.EventDefinitionIxUri", "ResourceId", "dbo.EventDefinitionRes");
            DropForeignKey("dbo.EventDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EventDefinitionIxTok", "ResourceId", "dbo.EventDefinitionRes");
            DropForeignKey("dbo.EventDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EventDefinitionIxStr", "ResourceId", "dbo.EventDefinitionRes");
            DropForeignKey("dbo.EventDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EventDefinitionIxRef", "ResourceId", "dbo.EventDefinitionRes");
            DropForeignKey("dbo.EventDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EventDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.EventDefinitionIxQty", "ResourceId", "dbo.EventDefinitionRes");
            DropForeignKey("dbo.EventDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EventDefinitionIxDT", "ResourceId", "dbo.EventDefinitionRes");
            DropForeignKey("dbo.EventDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EventDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.EpisodeOfCareIxUri", "ResourceId", "dbo.EpisodeOfCareRes");
            DropForeignKey("dbo.EpisodeOfCareIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EpisodeOfCareIxTok", "ResourceId", "dbo.EpisodeOfCareRes");
            DropForeignKey("dbo.EpisodeOfCareIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EpisodeOfCareIxStr", "ResourceId", "dbo.EpisodeOfCareRes");
            DropForeignKey("dbo.EpisodeOfCareIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EpisodeOfCareIxRef", "ResourceId", "dbo.EpisodeOfCareRes");
            DropForeignKey("dbo.EpisodeOfCareIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EpisodeOfCareIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.EpisodeOfCareIxQty", "ResourceId", "dbo.EpisodeOfCareRes");
            DropForeignKey("dbo.EpisodeOfCareIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EpisodeOfCareIxDT", "ResourceId", "dbo.EpisodeOfCareRes");
            DropForeignKey("dbo.EpisodeOfCareIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EpisodeOfCareRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.EnrollmentResponseIxUri", "ResourceId", "dbo.EnrollmentResponseRes");
            DropForeignKey("dbo.EnrollmentResponseIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentResponseIxTok", "ResourceId", "dbo.EnrollmentResponseRes");
            DropForeignKey("dbo.EnrollmentResponseIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentResponseIxStr", "ResourceId", "dbo.EnrollmentResponseRes");
            DropForeignKey("dbo.EnrollmentResponseIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentResponseIxRef", "ResourceId", "dbo.EnrollmentResponseRes");
            DropForeignKey("dbo.EnrollmentResponseIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentResponseIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.EnrollmentResponseIxQty", "ResourceId", "dbo.EnrollmentResponseRes");
            DropForeignKey("dbo.EnrollmentResponseIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentResponseIxDT", "ResourceId", "dbo.EnrollmentResponseRes");
            DropForeignKey("dbo.EnrollmentResponseIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentResponseRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.EnrollmentRequestIxUri", "ResourceId", "dbo.EnrollmentRequestRes");
            DropForeignKey("dbo.EnrollmentRequestIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentRequestIxTok", "ResourceId", "dbo.EnrollmentRequestRes");
            DropForeignKey("dbo.EnrollmentRequestIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentRequestIxStr", "ResourceId", "dbo.EnrollmentRequestRes");
            DropForeignKey("dbo.EnrollmentRequestIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentRequestIxRef", "ResourceId", "dbo.EnrollmentRequestRes");
            DropForeignKey("dbo.EnrollmentRequestIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentRequestIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.EnrollmentRequestIxQty", "ResourceId", "dbo.EnrollmentRequestRes");
            DropForeignKey("dbo.EnrollmentRequestIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentRequestIxDT", "ResourceId", "dbo.EnrollmentRequestRes");
            DropForeignKey("dbo.EnrollmentRequestIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EnrollmentRequestRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.EndpointIxUri", "ResourceId", "dbo.EndpointRes");
            DropForeignKey("dbo.EndpointIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EndpointIxTok", "ResourceId", "dbo.EndpointRes");
            DropForeignKey("dbo.EndpointIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EndpointIxStr", "ResourceId", "dbo.EndpointRes");
            DropForeignKey("dbo.EndpointIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EndpointIxRef", "ResourceId", "dbo.EndpointRes");
            DropForeignKey("dbo.EndpointIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EndpointIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.EndpointIxQty", "ResourceId", "dbo.EndpointRes");
            DropForeignKey("dbo.EndpointIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EndpointIxDT", "ResourceId", "dbo.EndpointRes");
            DropForeignKey("dbo.EndpointIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EndpointRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.EncounterIxUri", "ResourceId", "dbo.EncounterRes");
            DropForeignKey("dbo.EncounterIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EncounterIxTok", "ResourceId", "dbo.EncounterRes");
            DropForeignKey("dbo.EncounterIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EncounterIxStr", "ResourceId", "dbo.EncounterRes");
            DropForeignKey("dbo.EncounterIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EncounterIxRef", "ResourceId", "dbo.EncounterRes");
            DropForeignKey("dbo.EncounterIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EncounterIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.EncounterIxQty", "ResourceId", "dbo.EncounterRes");
            DropForeignKey("dbo.EncounterIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EncounterIxDT", "ResourceId", "dbo.EncounterRes");
            DropForeignKey("dbo.EncounterIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EncounterRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxUri", "ResourceId", "dbo.EffectEvidenceSynthesisRes");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxTok", "ResourceId", "dbo.EffectEvidenceSynthesisRes");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxStr", "ResourceId", "dbo.EffectEvidenceSynthesisRes");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxRef", "ResourceId", "dbo.EffectEvidenceSynthesisRes");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxQty", "ResourceId", "dbo.EffectEvidenceSynthesisRes");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxDT", "ResourceId", "dbo.EffectEvidenceSynthesisRes");
            DropForeignKey("dbo.EffectEvidenceSynthesisIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.EffectEvidenceSynthesisRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.DocumentReferenceIxUri", "ResourceId", "dbo.DocumentReferenceRes");
            DropForeignKey("dbo.DocumentReferenceIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentReferenceIxTok", "ResourceId", "dbo.DocumentReferenceRes");
            DropForeignKey("dbo.DocumentReferenceIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentReferenceIxStr", "ResourceId", "dbo.DocumentReferenceRes");
            DropForeignKey("dbo.DocumentReferenceIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentReferenceIxRef", "ResourceId", "dbo.DocumentReferenceRes");
            DropForeignKey("dbo.DocumentReferenceIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentReferenceIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.DocumentReferenceIxQty", "ResourceId", "dbo.DocumentReferenceRes");
            DropForeignKey("dbo.DocumentReferenceIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentReferenceIxDT", "ResourceId", "dbo.DocumentReferenceRes");
            DropForeignKey("dbo.DocumentReferenceIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentReferenceRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.DocumentManifestIxUri", "ResourceId", "dbo.DocumentManifestRes");
            DropForeignKey("dbo.DocumentManifestIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentManifestIxTok", "ResourceId", "dbo.DocumentManifestRes");
            DropForeignKey("dbo.DocumentManifestIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentManifestIxStr", "ResourceId", "dbo.DocumentManifestRes");
            DropForeignKey("dbo.DocumentManifestIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentManifestIxRef", "ResourceId", "dbo.DocumentManifestRes");
            DropForeignKey("dbo.DocumentManifestIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentManifestIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.DocumentManifestIxQty", "ResourceId", "dbo.DocumentManifestRes");
            DropForeignKey("dbo.DocumentManifestIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentManifestIxDT", "ResourceId", "dbo.DocumentManifestRes");
            DropForeignKey("dbo.DocumentManifestIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DocumentManifestRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.DiagnosticReportIxUri", "ResourceId", "dbo.DiagnosticReportRes");
            DropForeignKey("dbo.DiagnosticReportIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DiagnosticReportIxTok", "ResourceId", "dbo.DiagnosticReportRes");
            DropForeignKey("dbo.DiagnosticReportIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DiagnosticReportIxStr", "ResourceId", "dbo.DiagnosticReportRes");
            DropForeignKey("dbo.DiagnosticReportIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DiagnosticReportIxRef", "ResourceId", "dbo.DiagnosticReportRes");
            DropForeignKey("dbo.DiagnosticReportIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DiagnosticReportIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.DiagnosticReportIxQty", "ResourceId", "dbo.DiagnosticReportRes");
            DropForeignKey("dbo.DiagnosticReportIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DiagnosticReportIxDT", "ResourceId", "dbo.DiagnosticReportRes");
            DropForeignKey("dbo.DiagnosticReportIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DiagnosticReportRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.DeviceUseStatementIxUri", "ResourceId", "dbo.DeviceUseStatementRes");
            DropForeignKey("dbo.DeviceUseStatementIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceUseStatementIxTok", "ResourceId", "dbo.DeviceUseStatementRes");
            DropForeignKey("dbo.DeviceUseStatementIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceUseStatementIxStr", "ResourceId", "dbo.DeviceUseStatementRes");
            DropForeignKey("dbo.DeviceUseStatementIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceUseStatementIxRef", "ResourceId", "dbo.DeviceUseStatementRes");
            DropForeignKey("dbo.DeviceUseStatementIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceUseStatementIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.DeviceUseStatementIxQty", "ResourceId", "dbo.DeviceUseStatementRes");
            DropForeignKey("dbo.DeviceUseStatementIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceUseStatementIxDT", "ResourceId", "dbo.DeviceUseStatementRes");
            DropForeignKey("dbo.DeviceUseStatementIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceUseStatementRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.DeviceRequestIxUri", "ResourceId", "dbo.DeviceRequestRes");
            DropForeignKey("dbo.DeviceRequestIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceRequestIxTok", "ResourceId", "dbo.DeviceRequestRes");
            DropForeignKey("dbo.DeviceRequestIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceRequestIxStr", "ResourceId", "dbo.DeviceRequestRes");
            DropForeignKey("dbo.DeviceRequestIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceRequestIxRef", "ResourceId", "dbo.DeviceRequestRes");
            DropForeignKey("dbo.DeviceRequestIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceRequestIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.DeviceRequestIxQty", "ResourceId", "dbo.DeviceRequestRes");
            DropForeignKey("dbo.DeviceRequestIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceRequestIxDT", "ResourceId", "dbo.DeviceRequestRes");
            DropForeignKey("dbo.DeviceRequestIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceRequestRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.DeviceMetricIxUri", "ResourceId", "dbo.DeviceMetricRes");
            DropForeignKey("dbo.DeviceMetricIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceMetricIxTok", "ResourceId", "dbo.DeviceMetricRes");
            DropForeignKey("dbo.DeviceMetricIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceMetricIxStr", "ResourceId", "dbo.DeviceMetricRes");
            DropForeignKey("dbo.DeviceMetricIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceMetricIxRef", "ResourceId", "dbo.DeviceMetricRes");
            DropForeignKey("dbo.DeviceMetricIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceMetricIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.DeviceMetricIxQty", "ResourceId", "dbo.DeviceMetricRes");
            DropForeignKey("dbo.DeviceMetricIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceMetricIxDT", "ResourceId", "dbo.DeviceMetricRes");
            DropForeignKey("dbo.DeviceMetricIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceMetricRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.DeviceIxUri", "ResourceId", "dbo.DeviceRes");
            DropForeignKey("dbo.DeviceIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceIxTok", "ResourceId", "dbo.DeviceRes");
            DropForeignKey("dbo.DeviceIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceIxStr", "ResourceId", "dbo.DeviceRes");
            DropForeignKey("dbo.DeviceIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceIxRef", "ResourceId", "dbo.DeviceRes");
            DropForeignKey("dbo.DeviceIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.DeviceIxQty", "ResourceId", "dbo.DeviceRes");
            DropForeignKey("dbo.DeviceIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceIxDT", "ResourceId", "dbo.DeviceRes");
            DropForeignKey("dbo.DeviceIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.DeviceDefinitionIxUri", "ResourceId", "dbo.DeviceDefinitionRes");
            DropForeignKey("dbo.DeviceDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceDefinitionIxTok", "ResourceId", "dbo.DeviceDefinitionRes");
            DropForeignKey("dbo.DeviceDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceDefinitionIxStr", "ResourceId", "dbo.DeviceDefinitionRes");
            DropForeignKey("dbo.DeviceDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceDefinitionIxRef", "ResourceId", "dbo.DeviceDefinitionRes");
            DropForeignKey("dbo.DeviceDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.DeviceDefinitionIxQty", "ResourceId", "dbo.DeviceDefinitionRes");
            DropForeignKey("dbo.DeviceDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceDefinitionIxDT", "ResourceId", "dbo.DeviceDefinitionRes");
            DropForeignKey("dbo.DeviceDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DeviceDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.DetectedIssueIxUri", "ResourceId", "dbo.DetectedIssueRes");
            DropForeignKey("dbo.DetectedIssueIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DetectedIssueIxTok", "ResourceId", "dbo.DetectedIssueRes");
            DropForeignKey("dbo.DetectedIssueIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DetectedIssueIxStr", "ResourceId", "dbo.DetectedIssueRes");
            DropForeignKey("dbo.DetectedIssueIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DetectedIssueIxRef", "ResourceId", "dbo.DetectedIssueRes");
            DropForeignKey("dbo.DetectedIssueIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DetectedIssueIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.DetectedIssueIxQty", "ResourceId", "dbo.DetectedIssueRes");
            DropForeignKey("dbo.DetectedIssueIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DetectedIssueIxDT", "ResourceId", "dbo.DetectedIssueRes");
            DropForeignKey("dbo.DetectedIssueIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.DetectedIssueRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CoverageIxUri", "ResourceId", "dbo.CoverageRes");
            DropForeignKey("dbo.CoverageIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageIxTok", "ResourceId", "dbo.CoverageRes");
            DropForeignKey("dbo.CoverageIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageIxStr", "ResourceId", "dbo.CoverageRes");
            DropForeignKey("dbo.CoverageIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageIxRef", "ResourceId", "dbo.CoverageRes");
            DropForeignKey("dbo.CoverageIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CoverageIxQty", "ResourceId", "dbo.CoverageRes");
            DropForeignKey("dbo.CoverageIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageIxDT", "ResourceId", "dbo.CoverageRes");
            DropForeignKey("dbo.CoverageIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CoverageEligibilityResponseIxUri", "ResourceId", "dbo.CoverageEligibilityResponseRes");
            DropForeignKey("dbo.CoverageEligibilityResponseIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityResponseIxTok", "ResourceId", "dbo.CoverageEligibilityResponseRes");
            DropForeignKey("dbo.CoverageEligibilityResponseIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityResponseIxStr", "ResourceId", "dbo.CoverageEligibilityResponseRes");
            DropForeignKey("dbo.CoverageEligibilityResponseIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityResponseIxRef", "ResourceId", "dbo.CoverageEligibilityResponseRes");
            DropForeignKey("dbo.CoverageEligibilityResponseIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityResponseIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CoverageEligibilityResponseIxQty", "ResourceId", "dbo.CoverageEligibilityResponseRes");
            DropForeignKey("dbo.CoverageEligibilityResponseIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityResponseIxDT", "ResourceId", "dbo.CoverageEligibilityResponseRes");
            DropForeignKey("dbo.CoverageEligibilityResponseIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityResponseRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CoverageEligibilityRequestIxUri", "ResourceId", "dbo.CoverageEligibilityRequestRes");
            DropForeignKey("dbo.CoverageEligibilityRequestIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityRequestIxTok", "ResourceId", "dbo.CoverageEligibilityRequestRes");
            DropForeignKey("dbo.CoverageEligibilityRequestIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityRequestIxStr", "ResourceId", "dbo.CoverageEligibilityRequestRes");
            DropForeignKey("dbo.CoverageEligibilityRequestIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityRequestIxRef", "ResourceId", "dbo.CoverageEligibilityRequestRes");
            DropForeignKey("dbo.CoverageEligibilityRequestIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityRequestIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CoverageEligibilityRequestIxQty", "ResourceId", "dbo.CoverageEligibilityRequestRes");
            DropForeignKey("dbo.CoverageEligibilityRequestIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityRequestIxDT", "ResourceId", "dbo.CoverageEligibilityRequestRes");
            DropForeignKey("dbo.CoverageEligibilityRequestIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CoverageEligibilityRequestRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ContractIxUri", "ResourceId", "dbo.ContractRes");
            DropForeignKey("dbo.ContractIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ContractIxTok", "ResourceId", "dbo.ContractRes");
            DropForeignKey("dbo.ContractIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ContractIxStr", "ResourceId", "dbo.ContractRes");
            DropForeignKey("dbo.ContractIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ContractIxRef", "ResourceId", "dbo.ContractRes");
            DropForeignKey("dbo.ContractIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ContractIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ContractIxQty", "ResourceId", "dbo.ContractRes");
            DropForeignKey("dbo.ContractIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ContractIxDT", "ResourceId", "dbo.ContractRes");
            DropForeignKey("dbo.ContractIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ContractRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ConsentIxUri", "ResourceId", "dbo.ConsentRes");
            DropForeignKey("dbo.ConsentIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConsentIxTok", "ResourceId", "dbo.ConsentRes");
            DropForeignKey("dbo.ConsentIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConsentIxStr", "ResourceId", "dbo.ConsentRes");
            DropForeignKey("dbo.ConsentIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConsentIxRef", "ResourceId", "dbo.ConsentRes");
            DropForeignKey("dbo.ConsentIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConsentIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ConsentIxQty", "ResourceId", "dbo.ConsentRes");
            DropForeignKey("dbo.ConsentIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConsentIxDT", "ResourceId", "dbo.ConsentRes");
            DropForeignKey("dbo.ConsentIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConsentRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ConditionIxUri", "ResourceId", "dbo.ConditionRes");
            DropForeignKey("dbo.ConditionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConditionIxTok", "ResourceId", "dbo.ConditionRes");
            DropForeignKey("dbo.ConditionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConditionIxStr", "ResourceId", "dbo.ConditionRes");
            DropForeignKey("dbo.ConditionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConditionIxRef", "ResourceId", "dbo.ConditionRes");
            DropForeignKey("dbo.ConditionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConditionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ConditionIxQty", "ResourceId", "dbo.ConditionRes");
            DropForeignKey("dbo.ConditionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConditionIxDT", "ResourceId", "dbo.ConditionRes");
            DropForeignKey("dbo.ConditionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConditionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ConceptMapIxUri", "ResourceId", "dbo.ConceptMapRes");
            DropForeignKey("dbo.ConceptMapIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConceptMapIxTok", "ResourceId", "dbo.ConceptMapRes");
            DropForeignKey("dbo.ConceptMapIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConceptMapIxStr", "ResourceId", "dbo.ConceptMapRes");
            DropForeignKey("dbo.ConceptMapIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConceptMapIxRef", "ResourceId", "dbo.ConceptMapRes");
            DropForeignKey("dbo.ConceptMapIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConceptMapIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ConceptMapIxQty", "ResourceId", "dbo.ConceptMapRes");
            DropForeignKey("dbo.ConceptMapIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConceptMapIxDT", "ResourceId", "dbo.ConceptMapRes");
            DropForeignKey("dbo.ConceptMapIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ConceptMapRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CompositionIxUri", "ResourceId", "dbo.CompositionRes");
            DropForeignKey("dbo.CompositionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompositionIxTok", "ResourceId", "dbo.CompositionRes");
            DropForeignKey("dbo.CompositionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompositionIxStr", "ResourceId", "dbo.CompositionRes");
            DropForeignKey("dbo.CompositionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompositionIxRef", "ResourceId", "dbo.CompositionRes");
            DropForeignKey("dbo.CompositionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompositionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CompositionIxQty", "ResourceId", "dbo.CompositionRes");
            DropForeignKey("dbo.CompositionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompositionIxDT", "ResourceId", "dbo.CompositionRes");
            DropForeignKey("dbo.CompositionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompositionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CompartmentDefinitionIxUri", "ResourceId", "dbo.CompartmentDefinitionRes");
            DropForeignKey("dbo.CompartmentDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompartmentDefinitionIxTok", "ResourceId", "dbo.CompartmentDefinitionRes");
            DropForeignKey("dbo.CompartmentDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompartmentDefinitionIxStr", "ResourceId", "dbo.CompartmentDefinitionRes");
            DropForeignKey("dbo.CompartmentDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompartmentDefinitionIxRef", "ResourceId", "dbo.CompartmentDefinitionRes");
            DropForeignKey("dbo.CompartmentDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompartmentDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CompartmentDefinitionIxQty", "ResourceId", "dbo.CompartmentDefinitionRes");
            DropForeignKey("dbo.CompartmentDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompartmentDefinitionIxDT", "ResourceId", "dbo.CompartmentDefinitionRes");
            DropForeignKey("dbo.CompartmentDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CompartmentDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CommunicationRequestIxUri", "ResourceId", "dbo.CommunicationRequestRes");
            DropForeignKey("dbo.CommunicationRequestIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationRequestIxTok", "ResourceId", "dbo.CommunicationRequestRes");
            DropForeignKey("dbo.CommunicationRequestIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationRequestIxStr", "ResourceId", "dbo.CommunicationRequestRes");
            DropForeignKey("dbo.CommunicationRequestIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationRequestIxRef", "ResourceId", "dbo.CommunicationRequestRes");
            DropForeignKey("dbo.CommunicationRequestIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationRequestIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CommunicationRequestIxQty", "ResourceId", "dbo.CommunicationRequestRes");
            DropForeignKey("dbo.CommunicationRequestIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationRequestIxDT", "ResourceId", "dbo.CommunicationRequestRes");
            DropForeignKey("dbo.CommunicationRequestIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationRequestRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CommunicationIxUri", "ResourceId", "dbo.CommunicationRes");
            DropForeignKey("dbo.CommunicationIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationIxTok", "ResourceId", "dbo.CommunicationRes");
            DropForeignKey("dbo.CommunicationIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationIxStr", "ResourceId", "dbo.CommunicationRes");
            DropForeignKey("dbo.CommunicationIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationIxRef", "ResourceId", "dbo.CommunicationRes");
            DropForeignKey("dbo.CommunicationIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CommunicationIxQty", "ResourceId", "dbo.CommunicationRes");
            DropForeignKey("dbo.CommunicationIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationIxDT", "ResourceId", "dbo.CommunicationRes");
            DropForeignKey("dbo.CommunicationIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CommunicationRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CodeSystemIxUri", "ResourceId", "dbo.CodeSystemRes");
            DropForeignKey("dbo.CodeSystemIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CodeSystemIxTok", "ResourceId", "dbo.CodeSystemRes");
            DropForeignKey("dbo.CodeSystemIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CodeSystemIxStr", "ResourceId", "dbo.CodeSystemRes");
            DropForeignKey("dbo.CodeSystemIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CodeSystemIxRef", "ResourceId", "dbo.CodeSystemRes");
            DropForeignKey("dbo.CodeSystemIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CodeSystemIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CodeSystemIxQty", "ResourceId", "dbo.CodeSystemRes");
            DropForeignKey("dbo.CodeSystemIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CodeSystemIxDT", "ResourceId", "dbo.CodeSystemRes");
            DropForeignKey("dbo.CodeSystemIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CodeSystemRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ClinicalImpressionIxUri", "ResourceId", "dbo.ClinicalImpressionRes");
            DropForeignKey("dbo.ClinicalImpressionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClinicalImpressionIxTok", "ResourceId", "dbo.ClinicalImpressionRes");
            DropForeignKey("dbo.ClinicalImpressionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClinicalImpressionIxStr", "ResourceId", "dbo.ClinicalImpressionRes");
            DropForeignKey("dbo.ClinicalImpressionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClinicalImpressionIxRef", "ResourceId", "dbo.ClinicalImpressionRes");
            DropForeignKey("dbo.ClinicalImpressionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClinicalImpressionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ClinicalImpressionIxQty", "ResourceId", "dbo.ClinicalImpressionRes");
            DropForeignKey("dbo.ClinicalImpressionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClinicalImpressionIxDT", "ResourceId", "dbo.ClinicalImpressionRes");
            DropForeignKey("dbo.ClinicalImpressionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClinicalImpressionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ClaimResponseIxUri", "ResourceId", "dbo.ClaimResponseRes");
            DropForeignKey("dbo.ClaimResponseIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimResponseIxTok", "ResourceId", "dbo.ClaimResponseRes");
            DropForeignKey("dbo.ClaimResponseIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimResponseIxStr", "ResourceId", "dbo.ClaimResponseRes");
            DropForeignKey("dbo.ClaimResponseIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimResponseIxRef", "ResourceId", "dbo.ClaimResponseRes");
            DropForeignKey("dbo.ClaimResponseIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimResponseIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ClaimResponseIxQty", "ResourceId", "dbo.ClaimResponseRes");
            DropForeignKey("dbo.ClaimResponseIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimResponseIxDT", "ResourceId", "dbo.ClaimResponseRes");
            DropForeignKey("dbo.ClaimResponseIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimResponseRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ClaimIxUri", "ResourceId", "dbo.ClaimRes");
            DropForeignKey("dbo.ClaimIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimIxTok", "ResourceId", "dbo.ClaimRes");
            DropForeignKey("dbo.ClaimIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimIxStr", "ResourceId", "dbo.ClaimRes");
            DropForeignKey("dbo.ClaimIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimIxRef", "ResourceId", "dbo.ClaimRes");
            DropForeignKey("dbo.ClaimIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ClaimIxQty", "ResourceId", "dbo.ClaimRes");
            DropForeignKey("dbo.ClaimIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimIxDT", "ResourceId", "dbo.ClaimRes");
            DropForeignKey("dbo.ClaimIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ClaimRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ChargeItemIxUri", "ResourceId", "dbo.ChargeItemRes");
            DropForeignKey("dbo.ChargeItemIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemIxTok", "ResourceId", "dbo.ChargeItemRes");
            DropForeignKey("dbo.ChargeItemIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemIxStr", "ResourceId", "dbo.ChargeItemRes");
            DropForeignKey("dbo.ChargeItemIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemIxRef", "ResourceId", "dbo.ChargeItemRes");
            DropForeignKey("dbo.ChargeItemIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ChargeItemIxQty", "ResourceId", "dbo.ChargeItemRes");
            DropForeignKey("dbo.ChargeItemIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemIxDT", "ResourceId", "dbo.ChargeItemRes");
            DropForeignKey("dbo.ChargeItemIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ChargeItemDefinitionIxUri", "ResourceId", "dbo.ChargeItemDefinitionRes");
            DropForeignKey("dbo.ChargeItemDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemDefinitionIxTok", "ResourceId", "dbo.ChargeItemDefinitionRes");
            DropForeignKey("dbo.ChargeItemDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemDefinitionIxStr", "ResourceId", "dbo.ChargeItemDefinitionRes");
            DropForeignKey("dbo.ChargeItemDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemDefinitionIxRef", "ResourceId", "dbo.ChargeItemDefinitionRes");
            DropForeignKey("dbo.ChargeItemDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ChargeItemDefinitionIxQty", "ResourceId", "dbo.ChargeItemDefinitionRes");
            DropForeignKey("dbo.ChargeItemDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemDefinitionIxDT", "ResourceId", "dbo.ChargeItemDefinitionRes");
            DropForeignKey("dbo.ChargeItemDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ChargeItemDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CatalogEntryIxUri", "ResourceId", "dbo.CatalogEntryRes");
            DropForeignKey("dbo.CatalogEntryIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CatalogEntryIxTok", "ResourceId", "dbo.CatalogEntryRes");
            DropForeignKey("dbo.CatalogEntryIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CatalogEntryIxStr", "ResourceId", "dbo.CatalogEntryRes");
            DropForeignKey("dbo.CatalogEntryIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CatalogEntryIxRef", "ResourceId", "dbo.CatalogEntryRes");
            DropForeignKey("dbo.CatalogEntryIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CatalogEntryIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CatalogEntryIxQty", "ResourceId", "dbo.CatalogEntryRes");
            DropForeignKey("dbo.CatalogEntryIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CatalogEntryIxDT", "ResourceId", "dbo.CatalogEntryRes");
            DropForeignKey("dbo.CatalogEntryIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CatalogEntryRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CareTeamIxUri", "ResourceId", "dbo.CareTeamRes");
            DropForeignKey("dbo.CareTeamIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CareTeamIxTok", "ResourceId", "dbo.CareTeamRes");
            DropForeignKey("dbo.CareTeamIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CareTeamIxStr", "ResourceId", "dbo.CareTeamRes");
            DropForeignKey("dbo.CareTeamIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CareTeamIxRef", "ResourceId", "dbo.CareTeamRes");
            DropForeignKey("dbo.CareTeamIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CareTeamIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CareTeamIxQty", "ResourceId", "dbo.CareTeamRes");
            DropForeignKey("dbo.CareTeamIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CareTeamIxDT", "ResourceId", "dbo.CareTeamRes");
            DropForeignKey("dbo.CareTeamIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CareTeamRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CarePlanIxUri", "ResourceId", "dbo.CarePlanRes");
            DropForeignKey("dbo.CarePlanIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CarePlanIxTok", "ResourceId", "dbo.CarePlanRes");
            DropForeignKey("dbo.CarePlanIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CarePlanIxStr", "ResourceId", "dbo.CarePlanRes");
            DropForeignKey("dbo.CarePlanIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CarePlanIxRef", "ResourceId", "dbo.CarePlanRes");
            DropForeignKey("dbo.CarePlanIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CarePlanIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CarePlanIxQty", "ResourceId", "dbo.CarePlanRes");
            DropForeignKey("dbo.CarePlanIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CarePlanIxDT", "ResourceId", "dbo.CarePlanRes");
            DropForeignKey("dbo.CarePlanIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CarePlanRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.CapabilityStatementIxUri", "ResourceId", "dbo.CapabilityStatementRes");
            DropForeignKey("dbo.CapabilityStatementIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CapabilityStatementIxTok", "ResourceId", "dbo.CapabilityStatementRes");
            DropForeignKey("dbo.CapabilityStatementIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CapabilityStatementIxStr", "ResourceId", "dbo.CapabilityStatementRes");
            DropForeignKey("dbo.CapabilityStatementIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CapabilityStatementIxRef", "ResourceId", "dbo.CapabilityStatementRes");
            DropForeignKey("dbo.CapabilityStatementIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CapabilityStatementIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.CapabilityStatementIxQty", "ResourceId", "dbo.CapabilityStatementRes");
            DropForeignKey("dbo.CapabilityStatementIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CapabilityStatementIxDT", "ResourceId", "dbo.CapabilityStatementRes");
            DropForeignKey("dbo.CapabilityStatementIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.CapabilityStatementRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.BundleIxUri", "ResourceId", "dbo.BundleRes");
            DropForeignKey("dbo.BundleIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BundleIxTok", "ResourceId", "dbo.BundleRes");
            DropForeignKey("dbo.BundleIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BundleIxStr", "ResourceId", "dbo.BundleRes");
            DropForeignKey("dbo.BundleIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BundleIxRef", "ResourceId", "dbo.BundleRes");
            DropForeignKey("dbo.BundleIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BundleIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.BundleIxQty", "ResourceId", "dbo.BundleRes");
            DropForeignKey("dbo.BundleIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BundleIxDT", "ResourceId", "dbo.BundleRes");
            DropForeignKey("dbo.BundleIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BundleRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.BodyStructureIxUri", "ResourceId", "dbo.BodyStructureRes");
            DropForeignKey("dbo.BodyStructureIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BodyStructureIxTok", "ResourceId", "dbo.BodyStructureRes");
            DropForeignKey("dbo.BodyStructureIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BodyStructureIxStr", "ResourceId", "dbo.BodyStructureRes");
            DropForeignKey("dbo.BodyStructureIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BodyStructureIxRef", "ResourceId", "dbo.BodyStructureRes");
            DropForeignKey("dbo.BodyStructureIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BodyStructureIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.BodyStructureIxQty", "ResourceId", "dbo.BodyStructureRes");
            DropForeignKey("dbo.BodyStructureIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BodyStructureIxDT", "ResourceId", "dbo.BodyStructureRes");
            DropForeignKey("dbo.BodyStructureIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BodyStructureRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.BiologicallyDerivedProductIxUri", "ResourceId", "dbo.BiologicallyDerivedProductRes");
            DropForeignKey("dbo.BiologicallyDerivedProductIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BiologicallyDerivedProductIxTok", "ResourceId", "dbo.BiologicallyDerivedProductRes");
            DropForeignKey("dbo.BiologicallyDerivedProductIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BiologicallyDerivedProductIxStr", "ResourceId", "dbo.BiologicallyDerivedProductRes");
            DropForeignKey("dbo.BiologicallyDerivedProductIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BiologicallyDerivedProductIxRef", "ResourceId", "dbo.BiologicallyDerivedProductRes");
            DropForeignKey("dbo.BiologicallyDerivedProductIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BiologicallyDerivedProductIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.BiologicallyDerivedProductIxQty", "ResourceId", "dbo.BiologicallyDerivedProductRes");
            DropForeignKey("dbo.BiologicallyDerivedProductIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BiologicallyDerivedProductIxDT", "ResourceId", "dbo.BiologicallyDerivedProductRes");
            DropForeignKey("dbo.BiologicallyDerivedProductIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BiologicallyDerivedProductRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.BinaryIxUri", "ResourceId", "dbo.BinaryRes");
            DropForeignKey("dbo.BinaryIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BinaryIxTok", "ResourceId", "dbo.BinaryRes");
            DropForeignKey("dbo.BinaryIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BinaryIxStr", "ResourceId", "dbo.BinaryRes");
            DropForeignKey("dbo.BinaryIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BinaryIxRef", "ResourceId", "dbo.BinaryRes");
            DropForeignKey("dbo.BinaryIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BinaryIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.BinaryIxQty", "ResourceId", "dbo.BinaryRes");
            DropForeignKey("dbo.BinaryIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BinaryIxDT", "ResourceId", "dbo.BinaryRes");
            DropForeignKey("dbo.BinaryIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BinaryRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.BasicIxUri", "ResourceId", "dbo.BasicRes");
            DropForeignKey("dbo.BasicIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BasicIxTok", "ResourceId", "dbo.BasicRes");
            DropForeignKey("dbo.BasicIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BasicIxStr", "ResourceId", "dbo.BasicRes");
            DropForeignKey("dbo.BasicIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BasicIxRef", "ResourceId", "dbo.BasicRes");
            DropForeignKey("dbo.BasicIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BasicIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.BasicIxQty", "ResourceId", "dbo.BasicRes");
            DropForeignKey("dbo.BasicIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BasicIxDT", "ResourceId", "dbo.BasicRes");
            DropForeignKey("dbo.BasicIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.BasicRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.AuditEventIxUri", "ResourceId", "dbo.AuditEventRes");
            DropForeignKey("dbo.AuditEventIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AuditEventIxTok", "ResourceId", "dbo.AuditEventRes");
            DropForeignKey("dbo.AuditEventIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AuditEventIxStr", "ResourceId", "dbo.AuditEventRes");
            DropForeignKey("dbo.AuditEventIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AuditEventIxRef", "ResourceId", "dbo.AuditEventRes");
            DropForeignKey("dbo.AuditEventIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AuditEventIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.AuditEventIxQty", "ResourceId", "dbo.AuditEventRes");
            DropForeignKey("dbo.AuditEventIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AuditEventIxDT", "ResourceId", "dbo.AuditEventRes");
            DropForeignKey("dbo.AuditEventIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AuditEventRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.AppointmentResponseIxUri", "ResourceId", "dbo.AppointmentResponseRes");
            DropForeignKey("dbo.AppointmentResponseIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentResponseIxTok", "ResourceId", "dbo.AppointmentResponseRes");
            DropForeignKey("dbo.AppointmentResponseIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentResponseIxStr", "ResourceId", "dbo.AppointmentResponseRes");
            DropForeignKey("dbo.AppointmentResponseIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentResponseIxRef", "ResourceId", "dbo.AppointmentResponseRes");
            DropForeignKey("dbo.AppointmentResponseIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentResponseIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.AppointmentResponseIxQty", "ResourceId", "dbo.AppointmentResponseRes");
            DropForeignKey("dbo.AppointmentResponseIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentResponseIxDT", "ResourceId", "dbo.AppointmentResponseRes");
            DropForeignKey("dbo.AppointmentResponseIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentResponseRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.AppointmentIxUri", "ResourceId", "dbo.AppointmentRes");
            DropForeignKey("dbo.AppointmentIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentIxTok", "ResourceId", "dbo.AppointmentRes");
            DropForeignKey("dbo.AppointmentIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentIxStr", "ResourceId", "dbo.AppointmentRes");
            DropForeignKey("dbo.AppointmentIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentIxRef", "ResourceId", "dbo.AppointmentRes");
            DropForeignKey("dbo.AppointmentIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.AppointmentIxQty", "ResourceId", "dbo.AppointmentRes");
            DropForeignKey("dbo.AppointmentIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentIxDT", "ResourceId", "dbo.AppointmentRes");
            DropForeignKey("dbo.AppointmentIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AppointmentRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.AllergyIntoleranceIxUri", "ResourceId", "dbo.AllergyIntoleranceRes");
            DropForeignKey("dbo.AllergyIntoleranceIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AllergyIntoleranceIxTok", "ResourceId", "dbo.AllergyIntoleranceRes");
            DropForeignKey("dbo.AllergyIntoleranceIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AllergyIntoleranceIxStr", "ResourceId", "dbo.AllergyIntoleranceRes");
            DropForeignKey("dbo.AllergyIntoleranceIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AllergyIntoleranceIxRef", "ResourceId", "dbo.AllergyIntoleranceRes");
            DropForeignKey("dbo.AllergyIntoleranceIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AllergyIntoleranceIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.AllergyIntoleranceIxQty", "ResourceId", "dbo.AllergyIntoleranceRes");
            DropForeignKey("dbo.AllergyIntoleranceIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AllergyIntoleranceIxDT", "ResourceId", "dbo.AllergyIntoleranceRes");
            DropForeignKey("dbo.AllergyIntoleranceIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AllergyIntoleranceRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.AdverseEventIxUri", "ResourceId", "dbo.AdverseEventRes");
            DropForeignKey("dbo.AdverseEventIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AdverseEventIxTok", "ResourceId", "dbo.AdverseEventRes");
            DropForeignKey("dbo.AdverseEventIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AdverseEventIxStr", "ResourceId", "dbo.AdverseEventRes");
            DropForeignKey("dbo.AdverseEventIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AdverseEventIxRef", "ResourceId", "dbo.AdverseEventRes");
            DropForeignKey("dbo.AdverseEventIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AdverseEventIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.AdverseEventIxQty", "ResourceId", "dbo.AdverseEventRes");
            DropForeignKey("dbo.AdverseEventIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AdverseEventIxDT", "ResourceId", "dbo.AdverseEventRes");
            DropForeignKey("dbo.AdverseEventIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.AdverseEventRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.ActivityDefinitionIxUri", "ResourceId", "dbo.ActivityDefinitionRes");
            DropForeignKey("dbo.ActivityDefinitionIxUri", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ActivityDefinitionIxTok", "ResourceId", "dbo.ActivityDefinitionRes");
            DropForeignKey("dbo.ActivityDefinitionIxTok", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ActivityDefinitionIxStr", "ResourceId", "dbo.ActivityDefinitionRes");
            DropForeignKey("dbo.ActivityDefinitionIxStr", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ActivityDefinitionIxRef", "ResourceId", "dbo.ActivityDefinitionRes");
            DropForeignKey("dbo.ActivityDefinitionIxRef", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ActivityDefinitionIxRef", "ReferenceServiceBaseUrlId", "dbo._BaseUrl");
            DropForeignKey("dbo.ActivityDefinitionIxQty", "ResourceId", "dbo.ActivityDefinitionRes");
            DropForeignKey("dbo.ActivityDefinitionIxQty", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ActivityDefinitionIxDT", "ResourceId", "dbo.ActivityDefinitionRes");
            DropForeignKey("dbo.ActivityDefinitionIxDT", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo._SParamResource", "ServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo._SCompositePivot", "ParentServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo._SCompositePivot", "ChildServiceSearchParameterId", "dbo._SearchParam");
            DropForeignKey("dbo.ActivityDefinitionRes", "FhirReleaseId", "dbo._FhirRelease");
            DropForeignKey("dbo.AccountRes", "FhirReleaseId", "dbo._FhirRelease");
            DropIndex("dbo._CompartmentRes", "ix_CompartmentId");
            DropIndex("dbo._Compartment", "ix_CompartmentCode");
            DropIndex("dbo._FhirTaskWorker", "ix_ClaimedBy");
            DropIndex("dbo._FhirTaskWorker", "ix_TaskType");
            DropIndex("dbo._FhirTaskQueue", "ix_Status");
            DropIndex("dbo._FhirTaskQueue", "ix_PConnectId");
            DropIndex("dbo._FhirTaskQueue", "uq_TaskFhirIdAndType");
            DropIndex("dbo._BackburnerConnection", "ix_ConnectId");
            DropIndex("dbo.AccountIxUri", new[] { "ResourceId" });
            DropIndex("dbo.AccountIxUri", "ix_SearchParamId");
            DropIndex("dbo.AccountIxUri", "ix_Uri");
            DropIndex("dbo.AccountIxTok", new[] { "ResourceId" });
            DropIndex("dbo.AccountIxTok", "ix_SearchParamId");
            DropIndex("dbo.AccountIxTok", "ix_System");
            DropIndex("dbo.AccountIxTok", "ix_Code");
            DropIndex("dbo.AccountIxStr", new[] { "ResourceId" });
            DropIndex("dbo.AccountIxStr", "ix_SearchParamId");
            DropIndex("dbo.AccountIxStr", "ix_String");
            DropIndex("dbo.AccountIxRef", new[] { "ResourceId" });
            DropIndex("dbo.AccountIxRef", "ix_SearchParamId");
            DropIndex("dbo.AccountIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.AccountIxRef", "ix_RefFhirId");
            DropIndex("dbo.AccountIxQty", new[] { "ResourceId" });
            DropIndex("dbo.AccountIxQty", "ix_SearchParamId");
            DropIndex("dbo.AccountIxQty", "ix_System");
            DropIndex("dbo.AccountIxQty", "ix_Code");
            DropIndex("dbo.AccountIxDT", new[] { "ResourceId" });
            DropIndex("dbo.AccountIxDT", "ix_SearchParamId");
            DropIndex("dbo.AccountIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.AccountIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.VisionPrescriptionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.VisionPrescriptionIxUri", "ix_SearchParamId");
            DropIndex("dbo.VisionPrescriptionIxUri", "ix_Uri");
            DropIndex("dbo.VisionPrescriptionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.VisionPrescriptionIxTok", "ix_SearchParamId");
            DropIndex("dbo.VisionPrescriptionIxTok", "ix_System");
            DropIndex("dbo.VisionPrescriptionIxTok", "ix_Code");
            DropIndex("dbo.VisionPrescriptionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.VisionPrescriptionIxStr", "ix_SearchParamId");
            DropIndex("dbo.VisionPrescriptionIxStr", "ix_String");
            DropIndex("dbo.VisionPrescriptionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.VisionPrescriptionIxRef", "ix_SearchParamId");
            DropIndex("dbo.VisionPrescriptionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.VisionPrescriptionIxRef", "ix_RefFhirId");
            DropIndex("dbo.VisionPrescriptionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.VisionPrescriptionIxQty", "ix_SearchParamId");
            DropIndex("dbo.VisionPrescriptionIxQty", "ix_System");
            DropIndex("dbo.VisionPrescriptionIxQty", "ix_Code");
            DropIndex("dbo.VisionPrescriptionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.VisionPrescriptionIxDT", "ix_SearchParamId");
            DropIndex("dbo.VisionPrescriptionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.VisionPrescriptionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.VisionPrescriptionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.VisionPrescriptionRes", "ix_LastUpdated");
            DropIndex("dbo.VisionPrescriptionRes", "ix_IsDeleted");
            DropIndex("dbo.VisionPrescriptionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.VisionPrescriptionRes", "ix_IsCurrent");
            DropIndex("dbo.VerificationResultIxUri", new[] { "ResourceId" });
            DropIndex("dbo.VerificationResultIxUri", "ix_SearchParamId");
            DropIndex("dbo.VerificationResultIxUri", "ix_Uri");
            DropIndex("dbo.VerificationResultIxTok", new[] { "ResourceId" });
            DropIndex("dbo.VerificationResultIxTok", "ix_SearchParamId");
            DropIndex("dbo.VerificationResultIxTok", "ix_System");
            DropIndex("dbo.VerificationResultIxTok", "ix_Code");
            DropIndex("dbo.VerificationResultIxStr", new[] { "ResourceId" });
            DropIndex("dbo.VerificationResultIxStr", "ix_SearchParamId");
            DropIndex("dbo.VerificationResultIxStr", "ix_String");
            DropIndex("dbo.VerificationResultIxRef", new[] { "ResourceId" });
            DropIndex("dbo.VerificationResultIxRef", "ix_SearchParamId");
            DropIndex("dbo.VerificationResultIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.VerificationResultIxRef", "ix_RefFhirId");
            DropIndex("dbo.VerificationResultIxQty", new[] { "ResourceId" });
            DropIndex("dbo.VerificationResultIxQty", "ix_SearchParamId");
            DropIndex("dbo.VerificationResultIxQty", "ix_System");
            DropIndex("dbo.VerificationResultIxQty", "ix_Code");
            DropIndex("dbo.VerificationResultIxDT", new[] { "ResourceId" });
            DropIndex("dbo.VerificationResultIxDT", "ix_SearchParamId");
            DropIndex("dbo.VerificationResultIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.VerificationResultIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.VerificationResultRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.VerificationResultRes", "ix_LastUpdated");
            DropIndex("dbo.VerificationResultRes", "ix_IsDeleted");
            DropIndex("dbo.VerificationResultRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.VerificationResultRes", "ix_IsCurrent");
            DropIndex("dbo.ValueSetIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ValueSetIxUri", "ix_SearchParamId");
            DropIndex("dbo.ValueSetIxUri", "ix_Uri");
            DropIndex("dbo.ValueSetIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ValueSetIxTok", "ix_SearchParamId");
            DropIndex("dbo.ValueSetIxTok", "ix_System");
            DropIndex("dbo.ValueSetIxTok", "ix_Code");
            DropIndex("dbo.ValueSetIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ValueSetIxStr", "ix_SearchParamId");
            DropIndex("dbo.ValueSetIxStr", "ix_String");
            DropIndex("dbo.ValueSetIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ValueSetIxRef", "ix_SearchParamId");
            DropIndex("dbo.ValueSetIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ValueSetIxRef", "ix_RefFhirId");
            DropIndex("dbo.ValueSetIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ValueSetIxQty", "ix_SearchParamId");
            DropIndex("dbo.ValueSetIxQty", "ix_System");
            DropIndex("dbo.ValueSetIxQty", "ix_Code");
            DropIndex("dbo.ValueSetIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ValueSetIxDT", "ix_SearchParamId");
            DropIndex("dbo.ValueSetIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ValueSetIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ValueSetRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ValueSetRes", "ix_LastUpdated");
            DropIndex("dbo.ValueSetRes", "ix_IsDeleted");
            DropIndex("dbo.ValueSetRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ValueSetRes", "ix_IsCurrent");
            DropIndex("dbo.TestScriptIxUri", new[] { "ResourceId" });
            DropIndex("dbo.TestScriptIxUri", "ix_SearchParamId");
            DropIndex("dbo.TestScriptIxUri", "ix_Uri");
            DropIndex("dbo.TestScriptIxTok", new[] { "ResourceId" });
            DropIndex("dbo.TestScriptIxTok", "ix_SearchParamId");
            DropIndex("dbo.TestScriptIxTok", "ix_System");
            DropIndex("dbo.TestScriptIxTok", "ix_Code");
            DropIndex("dbo.TestScriptIxStr", new[] { "ResourceId" });
            DropIndex("dbo.TestScriptIxStr", "ix_SearchParamId");
            DropIndex("dbo.TestScriptIxStr", "ix_String");
            DropIndex("dbo.TestScriptIxRef", new[] { "ResourceId" });
            DropIndex("dbo.TestScriptIxRef", "ix_SearchParamId");
            DropIndex("dbo.TestScriptIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.TestScriptIxRef", "ix_RefFhirId");
            DropIndex("dbo.TestScriptIxQty", new[] { "ResourceId" });
            DropIndex("dbo.TestScriptIxQty", "ix_SearchParamId");
            DropIndex("dbo.TestScriptIxQty", "ix_System");
            DropIndex("dbo.TestScriptIxQty", "ix_Code");
            DropIndex("dbo.TestScriptIxDT", new[] { "ResourceId" });
            DropIndex("dbo.TestScriptIxDT", "ix_SearchParamId");
            DropIndex("dbo.TestScriptIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.TestScriptIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.TestScriptRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.TestScriptRes", "ix_LastUpdated");
            DropIndex("dbo.TestScriptRes", "ix_IsDeleted");
            DropIndex("dbo.TestScriptRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.TestScriptRes", "ix_IsCurrent");
            DropIndex("dbo.TestReportIxUri", new[] { "ResourceId" });
            DropIndex("dbo.TestReportIxUri", "ix_SearchParamId");
            DropIndex("dbo.TestReportIxUri", "ix_Uri");
            DropIndex("dbo.TestReportIxTok", new[] { "ResourceId" });
            DropIndex("dbo.TestReportIxTok", "ix_SearchParamId");
            DropIndex("dbo.TestReportIxTok", "ix_System");
            DropIndex("dbo.TestReportIxTok", "ix_Code");
            DropIndex("dbo.TestReportIxStr", new[] { "ResourceId" });
            DropIndex("dbo.TestReportIxStr", "ix_SearchParamId");
            DropIndex("dbo.TestReportIxStr", "ix_String");
            DropIndex("dbo.TestReportIxRef", new[] { "ResourceId" });
            DropIndex("dbo.TestReportIxRef", "ix_SearchParamId");
            DropIndex("dbo.TestReportIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.TestReportIxRef", "ix_RefFhirId");
            DropIndex("dbo.TestReportIxQty", new[] { "ResourceId" });
            DropIndex("dbo.TestReportIxQty", "ix_SearchParamId");
            DropIndex("dbo.TestReportIxQty", "ix_System");
            DropIndex("dbo.TestReportIxQty", "ix_Code");
            DropIndex("dbo.TestReportIxDT", new[] { "ResourceId" });
            DropIndex("dbo.TestReportIxDT", "ix_SearchParamId");
            DropIndex("dbo.TestReportIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.TestReportIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.TestReportRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.TestReportRes", "ix_LastUpdated");
            DropIndex("dbo.TestReportRes", "ix_IsDeleted");
            DropIndex("dbo.TestReportRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.TestReportRes", "ix_IsCurrent");
            DropIndex("dbo.TerminologyCapabilitiesIxUri", new[] { "ResourceId" });
            DropIndex("dbo.TerminologyCapabilitiesIxUri", "ix_SearchParamId");
            DropIndex("dbo.TerminologyCapabilitiesIxUri", "ix_Uri");
            DropIndex("dbo.TerminologyCapabilitiesIxTok", new[] { "ResourceId" });
            DropIndex("dbo.TerminologyCapabilitiesIxTok", "ix_SearchParamId");
            DropIndex("dbo.TerminologyCapabilitiesIxTok", "ix_System");
            DropIndex("dbo.TerminologyCapabilitiesIxTok", "ix_Code");
            DropIndex("dbo.TerminologyCapabilitiesIxStr", new[] { "ResourceId" });
            DropIndex("dbo.TerminologyCapabilitiesIxStr", "ix_SearchParamId");
            DropIndex("dbo.TerminologyCapabilitiesIxStr", "ix_String");
            DropIndex("dbo.TerminologyCapabilitiesIxRef", new[] { "ResourceId" });
            DropIndex("dbo.TerminologyCapabilitiesIxRef", "ix_SearchParamId");
            DropIndex("dbo.TerminologyCapabilitiesIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.TerminologyCapabilitiesIxRef", "ix_RefFhirId");
            DropIndex("dbo.TerminologyCapabilitiesIxQty", new[] { "ResourceId" });
            DropIndex("dbo.TerminologyCapabilitiesIxQty", "ix_SearchParamId");
            DropIndex("dbo.TerminologyCapabilitiesIxQty", "ix_System");
            DropIndex("dbo.TerminologyCapabilitiesIxQty", "ix_Code");
            DropIndex("dbo.TerminologyCapabilitiesIxDT", new[] { "ResourceId" });
            DropIndex("dbo.TerminologyCapabilitiesIxDT", "ix_SearchParamId");
            DropIndex("dbo.TerminologyCapabilitiesIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.TerminologyCapabilitiesIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.TerminologyCapabilitiesRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.TerminologyCapabilitiesRes", "ix_LastUpdated");
            DropIndex("dbo.TerminologyCapabilitiesRes", "ix_IsDeleted");
            DropIndex("dbo.TerminologyCapabilitiesRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.TerminologyCapabilitiesRes", "ix_IsCurrent");
            DropIndex("dbo.TaskIxUri", new[] { "ResourceId" });
            DropIndex("dbo.TaskIxUri", "ix_SearchParamId");
            DropIndex("dbo.TaskIxUri", "ix_Uri");
            DropIndex("dbo.TaskIxTok", new[] { "ResourceId" });
            DropIndex("dbo.TaskIxTok", "ix_SearchParamId");
            DropIndex("dbo.TaskIxTok", "ix_System");
            DropIndex("dbo.TaskIxTok", "ix_Code");
            DropIndex("dbo.TaskIxStr", new[] { "ResourceId" });
            DropIndex("dbo.TaskIxStr", "ix_SearchParamId");
            DropIndex("dbo.TaskIxStr", "ix_String");
            DropIndex("dbo.TaskIxRef", new[] { "ResourceId" });
            DropIndex("dbo.TaskIxRef", "ix_SearchParamId");
            DropIndex("dbo.TaskIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.TaskIxRef", "ix_RefFhirId");
            DropIndex("dbo.TaskIxQty", new[] { "ResourceId" });
            DropIndex("dbo.TaskIxQty", "ix_SearchParamId");
            DropIndex("dbo.TaskIxQty", "ix_System");
            DropIndex("dbo.TaskIxQty", "ix_Code");
            DropIndex("dbo.TaskIxDT", new[] { "ResourceId" });
            DropIndex("dbo.TaskIxDT", "ix_SearchParamId");
            DropIndex("dbo.TaskIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.TaskIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.TaskRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.TaskRes", "ix_LastUpdated");
            DropIndex("dbo.TaskRes", "ix_IsDeleted");
            DropIndex("dbo.TaskRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.TaskRes", "ix_IsCurrent");
            DropIndex("dbo.SupplyRequestIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SupplyRequestIxUri", "ix_SearchParamId");
            DropIndex("dbo.SupplyRequestIxUri", "ix_Uri");
            DropIndex("dbo.SupplyRequestIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SupplyRequestIxTok", "ix_SearchParamId");
            DropIndex("dbo.SupplyRequestIxTok", "ix_System");
            DropIndex("dbo.SupplyRequestIxTok", "ix_Code");
            DropIndex("dbo.SupplyRequestIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SupplyRequestIxStr", "ix_SearchParamId");
            DropIndex("dbo.SupplyRequestIxStr", "ix_String");
            DropIndex("dbo.SupplyRequestIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SupplyRequestIxRef", "ix_SearchParamId");
            DropIndex("dbo.SupplyRequestIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SupplyRequestIxRef", "ix_RefFhirId");
            DropIndex("dbo.SupplyRequestIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SupplyRequestIxQty", "ix_SearchParamId");
            DropIndex("dbo.SupplyRequestIxQty", "ix_System");
            DropIndex("dbo.SupplyRequestIxQty", "ix_Code");
            DropIndex("dbo.SupplyRequestIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SupplyRequestIxDT", "ix_SearchParamId");
            DropIndex("dbo.SupplyRequestIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SupplyRequestIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SupplyRequestRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SupplyRequestRes", "ix_LastUpdated");
            DropIndex("dbo.SupplyRequestRes", "ix_IsDeleted");
            DropIndex("dbo.SupplyRequestRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SupplyRequestRes", "ix_IsCurrent");
            DropIndex("dbo.SupplyDeliveryIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SupplyDeliveryIxUri", "ix_SearchParamId");
            DropIndex("dbo.SupplyDeliveryIxUri", "ix_Uri");
            DropIndex("dbo.SupplyDeliveryIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SupplyDeliveryIxTok", "ix_SearchParamId");
            DropIndex("dbo.SupplyDeliveryIxTok", "ix_System");
            DropIndex("dbo.SupplyDeliveryIxTok", "ix_Code");
            DropIndex("dbo.SupplyDeliveryIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SupplyDeliveryIxStr", "ix_SearchParamId");
            DropIndex("dbo.SupplyDeliveryIxStr", "ix_String");
            DropIndex("dbo.SupplyDeliveryIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SupplyDeliveryIxRef", "ix_SearchParamId");
            DropIndex("dbo.SupplyDeliveryIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SupplyDeliveryIxRef", "ix_RefFhirId");
            DropIndex("dbo.SupplyDeliveryIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SupplyDeliveryIxQty", "ix_SearchParamId");
            DropIndex("dbo.SupplyDeliveryIxQty", "ix_System");
            DropIndex("dbo.SupplyDeliveryIxQty", "ix_Code");
            DropIndex("dbo.SupplyDeliveryIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SupplyDeliveryIxDT", "ix_SearchParamId");
            DropIndex("dbo.SupplyDeliveryIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SupplyDeliveryIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SupplyDeliveryRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SupplyDeliveryRes", "ix_LastUpdated");
            DropIndex("dbo.SupplyDeliveryRes", "ix_IsDeleted");
            DropIndex("dbo.SupplyDeliveryRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SupplyDeliveryRes", "ix_IsCurrent");
            DropIndex("dbo.SubstanceSpecificationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSpecificationIxUri", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSpecificationIxUri", "ix_Uri");
            DropIndex("dbo.SubstanceSpecificationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSpecificationIxTok", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSpecificationIxTok", "ix_System");
            DropIndex("dbo.SubstanceSpecificationIxTok", "ix_Code");
            DropIndex("dbo.SubstanceSpecificationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSpecificationIxStr", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSpecificationIxStr", "ix_String");
            DropIndex("dbo.SubstanceSpecificationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSpecificationIxRef", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSpecificationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SubstanceSpecificationIxRef", "ix_RefFhirId");
            DropIndex("dbo.SubstanceSpecificationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSpecificationIxQty", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSpecificationIxQty", "ix_System");
            DropIndex("dbo.SubstanceSpecificationIxQty", "ix_Code");
            DropIndex("dbo.SubstanceSpecificationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSpecificationIxDT", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSpecificationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SubstanceSpecificationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SubstanceSpecificationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SubstanceSpecificationRes", "ix_LastUpdated");
            DropIndex("dbo.SubstanceSpecificationRes", "ix_IsDeleted");
            DropIndex("dbo.SubstanceSpecificationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SubstanceSpecificationRes", "ix_IsCurrent");
            DropIndex("dbo.SubstanceSourceMaterialIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSourceMaterialIxUri", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSourceMaterialIxUri", "ix_Uri");
            DropIndex("dbo.SubstanceSourceMaterialIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSourceMaterialIxTok", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSourceMaterialIxTok", "ix_System");
            DropIndex("dbo.SubstanceSourceMaterialIxTok", "ix_Code");
            DropIndex("dbo.SubstanceSourceMaterialIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSourceMaterialIxStr", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSourceMaterialIxStr", "ix_String");
            DropIndex("dbo.SubstanceSourceMaterialIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSourceMaterialIxRef", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSourceMaterialIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SubstanceSourceMaterialIxRef", "ix_RefFhirId");
            DropIndex("dbo.SubstanceSourceMaterialIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSourceMaterialIxQty", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSourceMaterialIxQty", "ix_System");
            DropIndex("dbo.SubstanceSourceMaterialIxQty", "ix_Code");
            DropIndex("dbo.SubstanceSourceMaterialIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceSourceMaterialIxDT", "ix_SearchParamId");
            DropIndex("dbo.SubstanceSourceMaterialIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SubstanceSourceMaterialIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SubstanceSourceMaterialRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SubstanceSourceMaterialRes", "ix_LastUpdated");
            DropIndex("dbo.SubstanceSourceMaterialRes", "ix_IsDeleted");
            DropIndex("dbo.SubstanceSourceMaterialRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SubstanceSourceMaterialRes", "ix_IsCurrent");
            DropIndex("dbo.SubstanceReferenceInformationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceReferenceInformationIxUri", "ix_SearchParamId");
            DropIndex("dbo.SubstanceReferenceInformationIxUri", "ix_Uri");
            DropIndex("dbo.SubstanceReferenceInformationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceReferenceInformationIxTok", "ix_SearchParamId");
            DropIndex("dbo.SubstanceReferenceInformationIxTok", "ix_System");
            DropIndex("dbo.SubstanceReferenceInformationIxTok", "ix_Code");
            DropIndex("dbo.SubstanceReferenceInformationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceReferenceInformationIxStr", "ix_SearchParamId");
            DropIndex("dbo.SubstanceReferenceInformationIxStr", "ix_String");
            DropIndex("dbo.SubstanceReferenceInformationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceReferenceInformationIxRef", "ix_SearchParamId");
            DropIndex("dbo.SubstanceReferenceInformationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SubstanceReferenceInformationIxRef", "ix_RefFhirId");
            DropIndex("dbo.SubstanceReferenceInformationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceReferenceInformationIxQty", "ix_SearchParamId");
            DropIndex("dbo.SubstanceReferenceInformationIxQty", "ix_System");
            DropIndex("dbo.SubstanceReferenceInformationIxQty", "ix_Code");
            DropIndex("dbo.SubstanceReferenceInformationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceReferenceInformationIxDT", "ix_SearchParamId");
            DropIndex("dbo.SubstanceReferenceInformationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SubstanceReferenceInformationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SubstanceReferenceInformationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SubstanceReferenceInformationRes", "ix_LastUpdated");
            DropIndex("dbo.SubstanceReferenceInformationRes", "ix_IsDeleted");
            DropIndex("dbo.SubstanceReferenceInformationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SubstanceReferenceInformationRes", "ix_IsCurrent");
            DropIndex("dbo.SubstanceProteinIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceProteinIxUri", "ix_SearchParamId");
            DropIndex("dbo.SubstanceProteinIxUri", "ix_Uri");
            DropIndex("dbo.SubstanceProteinIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceProteinIxTok", "ix_SearchParamId");
            DropIndex("dbo.SubstanceProteinIxTok", "ix_System");
            DropIndex("dbo.SubstanceProteinIxTok", "ix_Code");
            DropIndex("dbo.SubstanceProteinIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceProteinIxStr", "ix_SearchParamId");
            DropIndex("dbo.SubstanceProteinIxStr", "ix_String");
            DropIndex("dbo.SubstanceProteinIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceProteinIxRef", "ix_SearchParamId");
            DropIndex("dbo.SubstanceProteinIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SubstanceProteinIxRef", "ix_RefFhirId");
            DropIndex("dbo.SubstanceProteinIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceProteinIxQty", "ix_SearchParamId");
            DropIndex("dbo.SubstanceProteinIxQty", "ix_System");
            DropIndex("dbo.SubstanceProteinIxQty", "ix_Code");
            DropIndex("dbo.SubstanceProteinIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceProteinIxDT", "ix_SearchParamId");
            DropIndex("dbo.SubstanceProteinIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SubstanceProteinIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SubstanceProteinRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SubstanceProteinRes", "ix_LastUpdated");
            DropIndex("dbo.SubstanceProteinRes", "ix_IsDeleted");
            DropIndex("dbo.SubstanceProteinRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SubstanceProteinRes", "ix_IsCurrent");
            DropIndex("dbo.SubstancePolymerIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SubstancePolymerIxUri", "ix_SearchParamId");
            DropIndex("dbo.SubstancePolymerIxUri", "ix_Uri");
            DropIndex("dbo.SubstancePolymerIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SubstancePolymerIxTok", "ix_SearchParamId");
            DropIndex("dbo.SubstancePolymerIxTok", "ix_System");
            DropIndex("dbo.SubstancePolymerIxTok", "ix_Code");
            DropIndex("dbo.SubstancePolymerIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SubstancePolymerIxStr", "ix_SearchParamId");
            DropIndex("dbo.SubstancePolymerIxStr", "ix_String");
            DropIndex("dbo.SubstancePolymerIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SubstancePolymerIxRef", "ix_SearchParamId");
            DropIndex("dbo.SubstancePolymerIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SubstancePolymerIxRef", "ix_RefFhirId");
            DropIndex("dbo.SubstancePolymerIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SubstancePolymerIxQty", "ix_SearchParamId");
            DropIndex("dbo.SubstancePolymerIxQty", "ix_System");
            DropIndex("dbo.SubstancePolymerIxQty", "ix_Code");
            DropIndex("dbo.SubstancePolymerIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SubstancePolymerIxDT", "ix_SearchParamId");
            DropIndex("dbo.SubstancePolymerIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SubstancePolymerIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SubstancePolymerRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SubstancePolymerRes", "ix_LastUpdated");
            DropIndex("dbo.SubstancePolymerRes", "ix_IsDeleted");
            DropIndex("dbo.SubstancePolymerRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SubstancePolymerRes", "ix_IsCurrent");
            DropIndex("dbo.SubstanceNucleicAcidIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceNucleicAcidIxUri", "ix_SearchParamId");
            DropIndex("dbo.SubstanceNucleicAcidIxUri", "ix_Uri");
            DropIndex("dbo.SubstanceNucleicAcidIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceNucleicAcidIxTok", "ix_SearchParamId");
            DropIndex("dbo.SubstanceNucleicAcidIxTok", "ix_System");
            DropIndex("dbo.SubstanceNucleicAcidIxTok", "ix_Code");
            DropIndex("dbo.SubstanceNucleicAcidIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceNucleicAcidIxStr", "ix_SearchParamId");
            DropIndex("dbo.SubstanceNucleicAcidIxStr", "ix_String");
            DropIndex("dbo.SubstanceNucleicAcidIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceNucleicAcidIxRef", "ix_SearchParamId");
            DropIndex("dbo.SubstanceNucleicAcidIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SubstanceNucleicAcidIxRef", "ix_RefFhirId");
            DropIndex("dbo.SubstanceNucleicAcidIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceNucleicAcidIxQty", "ix_SearchParamId");
            DropIndex("dbo.SubstanceNucleicAcidIxQty", "ix_System");
            DropIndex("dbo.SubstanceNucleicAcidIxQty", "ix_Code");
            DropIndex("dbo.SubstanceNucleicAcidIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceNucleicAcidIxDT", "ix_SearchParamId");
            DropIndex("dbo.SubstanceNucleicAcidIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SubstanceNucleicAcidIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SubstanceNucleicAcidRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SubstanceNucleicAcidRes", "ix_LastUpdated");
            DropIndex("dbo.SubstanceNucleicAcidRes", "ix_IsDeleted");
            DropIndex("dbo.SubstanceNucleicAcidRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SubstanceNucleicAcidRes", "ix_IsCurrent");
            DropIndex("dbo.SubstanceIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceIxUri", "ix_SearchParamId");
            DropIndex("dbo.SubstanceIxUri", "ix_Uri");
            DropIndex("dbo.SubstanceIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceIxTok", "ix_SearchParamId");
            DropIndex("dbo.SubstanceIxTok", "ix_System");
            DropIndex("dbo.SubstanceIxTok", "ix_Code");
            DropIndex("dbo.SubstanceIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceIxStr", "ix_SearchParamId");
            DropIndex("dbo.SubstanceIxStr", "ix_String");
            DropIndex("dbo.SubstanceIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceIxRef", "ix_SearchParamId");
            DropIndex("dbo.SubstanceIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SubstanceIxRef", "ix_RefFhirId");
            DropIndex("dbo.SubstanceIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceIxQty", "ix_SearchParamId");
            DropIndex("dbo.SubstanceIxQty", "ix_System");
            DropIndex("dbo.SubstanceIxQty", "ix_Code");
            DropIndex("dbo.SubstanceIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SubstanceIxDT", "ix_SearchParamId");
            DropIndex("dbo.SubstanceIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SubstanceIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SubstanceRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SubstanceRes", "ix_LastUpdated");
            DropIndex("dbo.SubstanceRes", "ix_IsDeleted");
            DropIndex("dbo.SubstanceRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SubstanceRes", "ix_IsCurrent");
            DropIndex("dbo.SubscriptionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SubscriptionIxUri", "ix_SearchParamId");
            DropIndex("dbo.SubscriptionIxUri", "ix_Uri");
            DropIndex("dbo.SubscriptionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SubscriptionIxTok", "ix_SearchParamId");
            DropIndex("dbo.SubscriptionIxTok", "ix_System");
            DropIndex("dbo.SubscriptionIxTok", "ix_Code");
            DropIndex("dbo.SubscriptionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SubscriptionIxStr", "ix_SearchParamId");
            DropIndex("dbo.SubscriptionIxStr", "ix_String");
            DropIndex("dbo.SubscriptionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SubscriptionIxRef", "ix_SearchParamId");
            DropIndex("dbo.SubscriptionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SubscriptionIxRef", "ix_RefFhirId");
            DropIndex("dbo.SubscriptionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SubscriptionIxQty", "ix_SearchParamId");
            DropIndex("dbo.SubscriptionIxQty", "ix_System");
            DropIndex("dbo.SubscriptionIxQty", "ix_Code");
            DropIndex("dbo.SubscriptionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SubscriptionIxDT", "ix_SearchParamId");
            DropIndex("dbo.SubscriptionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SubscriptionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SubscriptionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SubscriptionRes", "ix_LastUpdated");
            DropIndex("dbo.SubscriptionRes", "ix_IsDeleted");
            DropIndex("dbo.SubscriptionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SubscriptionRes", "ix_IsCurrent");
            DropIndex("dbo.StructureMapIxUri", new[] { "ResourceId" });
            DropIndex("dbo.StructureMapIxUri", "ix_SearchParamId");
            DropIndex("dbo.StructureMapIxUri", "ix_Uri");
            DropIndex("dbo.StructureMapIxTok", new[] { "ResourceId" });
            DropIndex("dbo.StructureMapIxTok", "ix_SearchParamId");
            DropIndex("dbo.StructureMapIxTok", "ix_System");
            DropIndex("dbo.StructureMapIxTok", "ix_Code");
            DropIndex("dbo.StructureMapIxStr", new[] { "ResourceId" });
            DropIndex("dbo.StructureMapIxStr", "ix_SearchParamId");
            DropIndex("dbo.StructureMapIxStr", "ix_String");
            DropIndex("dbo.StructureMapIxRef", new[] { "ResourceId" });
            DropIndex("dbo.StructureMapIxRef", "ix_SearchParamId");
            DropIndex("dbo.StructureMapIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.StructureMapIxRef", "ix_RefFhirId");
            DropIndex("dbo.StructureMapIxQty", new[] { "ResourceId" });
            DropIndex("dbo.StructureMapIxQty", "ix_SearchParamId");
            DropIndex("dbo.StructureMapIxQty", "ix_System");
            DropIndex("dbo.StructureMapIxQty", "ix_Code");
            DropIndex("dbo.StructureMapIxDT", new[] { "ResourceId" });
            DropIndex("dbo.StructureMapIxDT", "ix_SearchParamId");
            DropIndex("dbo.StructureMapIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.StructureMapIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.StructureMapRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.StructureMapRes", "ix_LastUpdated");
            DropIndex("dbo.StructureMapRes", "ix_IsDeleted");
            DropIndex("dbo.StructureMapRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.StructureMapRes", "ix_IsCurrent");
            DropIndex("dbo.StructureDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.StructureDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.StructureDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.StructureDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.StructureDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.StructureDefinitionIxTok", "ix_System");
            DropIndex("dbo.StructureDefinitionIxTok", "ix_Code");
            DropIndex("dbo.StructureDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.StructureDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.StructureDefinitionIxStr", "ix_String");
            DropIndex("dbo.StructureDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.StructureDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.StructureDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.StructureDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.StructureDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.StructureDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.StructureDefinitionIxQty", "ix_System");
            DropIndex("dbo.StructureDefinitionIxQty", "ix_Code");
            DropIndex("dbo.StructureDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.StructureDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.StructureDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.StructureDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.StructureDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.StructureDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.StructureDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.StructureDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.StructureDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.SpecimenIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenIxUri", "ix_SearchParamId");
            DropIndex("dbo.SpecimenIxUri", "ix_Uri");
            DropIndex("dbo.SpecimenIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenIxTok", "ix_SearchParamId");
            DropIndex("dbo.SpecimenIxTok", "ix_System");
            DropIndex("dbo.SpecimenIxTok", "ix_Code");
            DropIndex("dbo.SpecimenIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenIxStr", "ix_SearchParamId");
            DropIndex("dbo.SpecimenIxStr", "ix_String");
            DropIndex("dbo.SpecimenIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenIxRef", "ix_SearchParamId");
            DropIndex("dbo.SpecimenIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SpecimenIxRef", "ix_RefFhirId");
            DropIndex("dbo.SpecimenIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenIxQty", "ix_SearchParamId");
            DropIndex("dbo.SpecimenIxQty", "ix_System");
            DropIndex("dbo.SpecimenIxQty", "ix_Code");
            DropIndex("dbo.SpecimenIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenIxDT", "ix_SearchParamId");
            DropIndex("dbo.SpecimenIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SpecimenIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SpecimenRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SpecimenRes", "ix_LastUpdated");
            DropIndex("dbo.SpecimenRes", "ix_IsDeleted");
            DropIndex("dbo.SpecimenRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SpecimenRes", "ix_IsCurrent");
            DropIndex("dbo.SpecimenDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.SpecimenDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.SpecimenDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.SpecimenDefinitionIxTok", "ix_System");
            DropIndex("dbo.SpecimenDefinitionIxTok", "ix_Code");
            DropIndex("dbo.SpecimenDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.SpecimenDefinitionIxStr", "ix_String");
            DropIndex("dbo.SpecimenDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.SpecimenDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SpecimenDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.SpecimenDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.SpecimenDefinitionIxQty", "ix_System");
            DropIndex("dbo.SpecimenDefinitionIxQty", "ix_Code");
            DropIndex("dbo.SpecimenDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SpecimenDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.SpecimenDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SpecimenDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SpecimenDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SpecimenDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.SpecimenDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.SpecimenDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SpecimenDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.SlotIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SlotIxUri", "ix_SearchParamId");
            DropIndex("dbo.SlotIxUri", "ix_Uri");
            DropIndex("dbo.SlotIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SlotIxTok", "ix_SearchParamId");
            DropIndex("dbo.SlotIxTok", "ix_System");
            DropIndex("dbo.SlotIxTok", "ix_Code");
            DropIndex("dbo.SlotIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SlotIxStr", "ix_SearchParamId");
            DropIndex("dbo.SlotIxStr", "ix_String");
            DropIndex("dbo.SlotIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SlotIxRef", "ix_SearchParamId");
            DropIndex("dbo.SlotIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SlotIxRef", "ix_RefFhirId");
            DropIndex("dbo.SlotIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SlotIxQty", "ix_SearchParamId");
            DropIndex("dbo.SlotIxQty", "ix_System");
            DropIndex("dbo.SlotIxQty", "ix_Code");
            DropIndex("dbo.SlotIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SlotIxDT", "ix_SearchParamId");
            DropIndex("dbo.SlotIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SlotIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SlotRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SlotRes", "ix_LastUpdated");
            DropIndex("dbo.SlotRes", "ix_IsDeleted");
            DropIndex("dbo.SlotRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SlotRes", "ix_IsCurrent");
            DropIndex("dbo.ServiceRequestIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ServiceRequestIxUri", "ix_SearchParamId");
            DropIndex("dbo.ServiceRequestIxUri", "ix_Uri");
            DropIndex("dbo.ServiceRequestIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ServiceRequestIxTok", "ix_SearchParamId");
            DropIndex("dbo.ServiceRequestIxTok", "ix_System");
            DropIndex("dbo.ServiceRequestIxTok", "ix_Code");
            DropIndex("dbo.ServiceRequestIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ServiceRequestIxStr", "ix_SearchParamId");
            DropIndex("dbo.ServiceRequestIxStr", "ix_String");
            DropIndex("dbo.ServiceRequestIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ServiceRequestIxRef", "ix_SearchParamId");
            DropIndex("dbo.ServiceRequestIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ServiceRequestIxRef", "ix_RefFhirId");
            DropIndex("dbo.ServiceRequestIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ServiceRequestIxQty", "ix_SearchParamId");
            DropIndex("dbo.ServiceRequestIxQty", "ix_System");
            DropIndex("dbo.ServiceRequestIxQty", "ix_Code");
            DropIndex("dbo.ServiceRequestIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ServiceRequestIxDT", "ix_SearchParamId");
            DropIndex("dbo.ServiceRequestIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ServiceRequestIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ServiceRequestRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ServiceRequestRes", "ix_LastUpdated");
            DropIndex("dbo.ServiceRequestRes", "ix_IsDeleted");
            DropIndex("dbo.ServiceRequestRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ServiceRequestRes", "ix_IsCurrent");
            DropIndex("dbo.SearchParameterIxUri", new[] { "ResourceId" });
            DropIndex("dbo.SearchParameterIxUri", "ix_SearchParamId");
            DropIndex("dbo.SearchParameterIxUri", "ix_Uri");
            DropIndex("dbo.SearchParameterIxTok", new[] { "ResourceId" });
            DropIndex("dbo.SearchParameterIxTok", "ix_SearchParamId");
            DropIndex("dbo.SearchParameterIxTok", "ix_System");
            DropIndex("dbo.SearchParameterIxTok", "ix_Code");
            DropIndex("dbo.SearchParameterIxStr", new[] { "ResourceId" });
            DropIndex("dbo.SearchParameterIxStr", "ix_SearchParamId");
            DropIndex("dbo.SearchParameterIxStr", "ix_String");
            DropIndex("dbo.SearchParameterIxRef", new[] { "ResourceId" });
            DropIndex("dbo.SearchParameterIxRef", "ix_SearchParamId");
            DropIndex("dbo.SearchParameterIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.SearchParameterIxRef", "ix_RefFhirId");
            DropIndex("dbo.SearchParameterIxQty", new[] { "ResourceId" });
            DropIndex("dbo.SearchParameterIxQty", "ix_SearchParamId");
            DropIndex("dbo.SearchParameterIxQty", "ix_System");
            DropIndex("dbo.SearchParameterIxQty", "ix_Code");
            DropIndex("dbo.SearchParameterIxDT", new[] { "ResourceId" });
            DropIndex("dbo.SearchParameterIxDT", "ix_SearchParamId");
            DropIndex("dbo.SearchParameterIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.SearchParameterIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.SearchParameterRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.SearchParameterRes", "ix_LastUpdated");
            DropIndex("dbo.SearchParameterRes", "ix_IsDeleted");
            DropIndex("dbo.SearchParameterRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.SearchParameterRes", "ix_IsCurrent");
            DropIndex("dbo.ScheduleIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ScheduleIxUri", "ix_SearchParamId");
            DropIndex("dbo.ScheduleIxUri", "ix_Uri");
            DropIndex("dbo.ScheduleIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ScheduleIxTok", "ix_SearchParamId");
            DropIndex("dbo.ScheduleIxTok", "ix_System");
            DropIndex("dbo.ScheduleIxTok", "ix_Code");
            DropIndex("dbo.ScheduleIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ScheduleIxStr", "ix_SearchParamId");
            DropIndex("dbo.ScheduleIxStr", "ix_String");
            DropIndex("dbo.ScheduleIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ScheduleIxRef", "ix_SearchParamId");
            DropIndex("dbo.ScheduleIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ScheduleIxRef", "ix_RefFhirId");
            DropIndex("dbo.ScheduleIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ScheduleIxQty", "ix_SearchParamId");
            DropIndex("dbo.ScheduleIxQty", "ix_System");
            DropIndex("dbo.ScheduleIxQty", "ix_Code");
            DropIndex("dbo.ScheduleIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ScheduleIxDT", "ix_SearchParamId");
            DropIndex("dbo.ScheduleIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ScheduleIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ScheduleRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ScheduleRes", "ix_LastUpdated");
            DropIndex("dbo.ScheduleRes", "ix_IsDeleted");
            DropIndex("dbo.ScheduleRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ScheduleRes", "ix_IsCurrent");
            DropIndex("dbo.RiskEvidenceSynthesisIxUri", new[] { "ResourceId" });
            DropIndex("dbo.RiskEvidenceSynthesisIxUri", "ix_SearchParamId");
            DropIndex("dbo.RiskEvidenceSynthesisIxUri", "ix_Uri");
            DropIndex("dbo.RiskEvidenceSynthesisIxTok", new[] { "ResourceId" });
            DropIndex("dbo.RiskEvidenceSynthesisIxTok", "ix_SearchParamId");
            DropIndex("dbo.RiskEvidenceSynthesisIxTok", "ix_System");
            DropIndex("dbo.RiskEvidenceSynthesisIxTok", "ix_Code");
            DropIndex("dbo.RiskEvidenceSynthesisIxStr", new[] { "ResourceId" });
            DropIndex("dbo.RiskEvidenceSynthesisIxStr", "ix_SearchParamId");
            DropIndex("dbo.RiskEvidenceSynthesisIxStr", "ix_String");
            DropIndex("dbo.RiskEvidenceSynthesisIxRef", new[] { "ResourceId" });
            DropIndex("dbo.RiskEvidenceSynthesisIxRef", "ix_SearchParamId");
            DropIndex("dbo.RiskEvidenceSynthesisIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.RiskEvidenceSynthesisIxRef", "ix_RefFhirId");
            DropIndex("dbo.RiskEvidenceSynthesisIxQty", new[] { "ResourceId" });
            DropIndex("dbo.RiskEvidenceSynthesisIxQty", "ix_SearchParamId");
            DropIndex("dbo.RiskEvidenceSynthesisIxQty", "ix_System");
            DropIndex("dbo.RiskEvidenceSynthesisIxQty", "ix_Code");
            DropIndex("dbo.RiskEvidenceSynthesisIxDT", new[] { "ResourceId" });
            DropIndex("dbo.RiskEvidenceSynthesisIxDT", "ix_SearchParamId");
            DropIndex("dbo.RiskEvidenceSynthesisIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.RiskEvidenceSynthesisIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.RiskEvidenceSynthesisRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.RiskEvidenceSynthesisRes", "ix_LastUpdated");
            DropIndex("dbo.RiskEvidenceSynthesisRes", "ix_IsDeleted");
            DropIndex("dbo.RiskEvidenceSynthesisRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.RiskEvidenceSynthesisRes", "ix_IsCurrent");
            DropIndex("dbo.RiskAssessmentIxUri", new[] { "ResourceId" });
            DropIndex("dbo.RiskAssessmentIxUri", "ix_SearchParamId");
            DropIndex("dbo.RiskAssessmentIxUri", "ix_Uri");
            DropIndex("dbo.RiskAssessmentIxTok", new[] { "ResourceId" });
            DropIndex("dbo.RiskAssessmentIxTok", "ix_SearchParamId");
            DropIndex("dbo.RiskAssessmentIxTok", "ix_System");
            DropIndex("dbo.RiskAssessmentIxTok", "ix_Code");
            DropIndex("dbo.RiskAssessmentIxStr", new[] { "ResourceId" });
            DropIndex("dbo.RiskAssessmentIxStr", "ix_SearchParamId");
            DropIndex("dbo.RiskAssessmentIxStr", "ix_String");
            DropIndex("dbo.RiskAssessmentIxRef", new[] { "ResourceId" });
            DropIndex("dbo.RiskAssessmentIxRef", "ix_SearchParamId");
            DropIndex("dbo.RiskAssessmentIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.RiskAssessmentIxRef", "ix_RefFhirId");
            DropIndex("dbo.RiskAssessmentIxQty", new[] { "ResourceId" });
            DropIndex("dbo.RiskAssessmentIxQty", "ix_SearchParamId");
            DropIndex("dbo.RiskAssessmentIxQty", "ix_System");
            DropIndex("dbo.RiskAssessmentIxQty", "ix_Code");
            DropIndex("dbo.RiskAssessmentIxDT", new[] { "ResourceId" });
            DropIndex("dbo.RiskAssessmentIxDT", "ix_SearchParamId");
            DropIndex("dbo.RiskAssessmentIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.RiskAssessmentIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.RiskAssessmentRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.RiskAssessmentRes", "ix_LastUpdated");
            DropIndex("dbo.RiskAssessmentRes", "ix_IsDeleted");
            DropIndex("dbo.RiskAssessmentRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.RiskAssessmentRes", "ix_IsCurrent");
            DropIndex("dbo.ResearchSubjectIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ResearchSubjectIxUri", "ix_SearchParamId");
            DropIndex("dbo.ResearchSubjectIxUri", "ix_Uri");
            DropIndex("dbo.ResearchSubjectIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ResearchSubjectIxTok", "ix_SearchParamId");
            DropIndex("dbo.ResearchSubjectIxTok", "ix_System");
            DropIndex("dbo.ResearchSubjectIxTok", "ix_Code");
            DropIndex("dbo.ResearchSubjectIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ResearchSubjectIxStr", "ix_SearchParamId");
            DropIndex("dbo.ResearchSubjectIxStr", "ix_String");
            DropIndex("dbo.ResearchSubjectIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ResearchSubjectIxRef", "ix_SearchParamId");
            DropIndex("dbo.ResearchSubjectIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ResearchSubjectIxRef", "ix_RefFhirId");
            DropIndex("dbo.ResearchSubjectIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ResearchSubjectIxQty", "ix_SearchParamId");
            DropIndex("dbo.ResearchSubjectIxQty", "ix_System");
            DropIndex("dbo.ResearchSubjectIxQty", "ix_Code");
            DropIndex("dbo.ResearchSubjectIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ResearchSubjectIxDT", "ix_SearchParamId");
            DropIndex("dbo.ResearchSubjectIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ResearchSubjectIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ResearchSubjectRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ResearchSubjectRes", "ix_LastUpdated");
            DropIndex("dbo.ResearchSubjectRes", "ix_IsDeleted");
            DropIndex("dbo.ResearchSubjectRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ResearchSubjectRes", "ix_IsCurrent");
            DropIndex("dbo.ResearchStudyIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ResearchStudyIxUri", "ix_SearchParamId");
            DropIndex("dbo.ResearchStudyIxUri", "ix_Uri");
            DropIndex("dbo.ResearchStudyIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ResearchStudyIxTok", "ix_SearchParamId");
            DropIndex("dbo.ResearchStudyIxTok", "ix_System");
            DropIndex("dbo.ResearchStudyIxTok", "ix_Code");
            DropIndex("dbo.ResearchStudyIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ResearchStudyIxStr", "ix_SearchParamId");
            DropIndex("dbo.ResearchStudyIxStr", "ix_String");
            DropIndex("dbo.ResearchStudyIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ResearchStudyIxRef", "ix_SearchParamId");
            DropIndex("dbo.ResearchStudyIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ResearchStudyIxRef", "ix_RefFhirId");
            DropIndex("dbo.ResearchStudyIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ResearchStudyIxQty", "ix_SearchParamId");
            DropIndex("dbo.ResearchStudyIxQty", "ix_System");
            DropIndex("dbo.ResearchStudyIxQty", "ix_Code");
            DropIndex("dbo.ResearchStudyIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ResearchStudyIxDT", "ix_SearchParamId");
            DropIndex("dbo.ResearchStudyIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ResearchStudyIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ResearchStudyRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ResearchStudyRes", "ix_LastUpdated");
            DropIndex("dbo.ResearchStudyRes", "ix_IsDeleted");
            DropIndex("dbo.ResearchStudyRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ResearchStudyRes", "ix_IsCurrent");
            DropIndex("dbo.ResearchElementDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ResearchElementDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.ResearchElementDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.ResearchElementDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ResearchElementDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.ResearchElementDefinitionIxTok", "ix_System");
            DropIndex("dbo.ResearchElementDefinitionIxTok", "ix_Code");
            DropIndex("dbo.ResearchElementDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ResearchElementDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.ResearchElementDefinitionIxStr", "ix_String");
            DropIndex("dbo.ResearchElementDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ResearchElementDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.ResearchElementDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ResearchElementDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.ResearchElementDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ResearchElementDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.ResearchElementDefinitionIxQty", "ix_System");
            DropIndex("dbo.ResearchElementDefinitionIxQty", "ix_Code");
            DropIndex("dbo.ResearchElementDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ResearchElementDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.ResearchElementDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ResearchElementDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ResearchElementDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ResearchElementDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.ResearchElementDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.ResearchElementDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ResearchElementDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.ResearchDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ResearchDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.ResearchDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.ResearchDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ResearchDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.ResearchDefinitionIxTok", "ix_System");
            DropIndex("dbo.ResearchDefinitionIxTok", "ix_Code");
            DropIndex("dbo.ResearchDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ResearchDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.ResearchDefinitionIxStr", "ix_String");
            DropIndex("dbo.ResearchDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ResearchDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.ResearchDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ResearchDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.ResearchDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ResearchDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.ResearchDefinitionIxQty", "ix_System");
            DropIndex("dbo.ResearchDefinitionIxQty", "ix_Code");
            DropIndex("dbo.ResearchDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ResearchDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.ResearchDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ResearchDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ResearchDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ResearchDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.ResearchDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.ResearchDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ResearchDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.RequestGroupIxUri", new[] { "ResourceId" });
            DropIndex("dbo.RequestGroupIxUri", "ix_SearchParamId");
            DropIndex("dbo.RequestGroupIxUri", "ix_Uri");
            DropIndex("dbo.RequestGroupIxTok", new[] { "ResourceId" });
            DropIndex("dbo.RequestGroupIxTok", "ix_SearchParamId");
            DropIndex("dbo.RequestGroupIxTok", "ix_System");
            DropIndex("dbo.RequestGroupIxTok", "ix_Code");
            DropIndex("dbo.RequestGroupIxStr", new[] { "ResourceId" });
            DropIndex("dbo.RequestGroupIxStr", "ix_SearchParamId");
            DropIndex("dbo.RequestGroupIxStr", "ix_String");
            DropIndex("dbo.RequestGroupIxRef", new[] { "ResourceId" });
            DropIndex("dbo.RequestGroupIxRef", "ix_SearchParamId");
            DropIndex("dbo.RequestGroupIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.RequestGroupIxRef", "ix_RefFhirId");
            DropIndex("dbo.RequestGroupIxQty", new[] { "ResourceId" });
            DropIndex("dbo.RequestGroupIxQty", "ix_SearchParamId");
            DropIndex("dbo.RequestGroupIxQty", "ix_System");
            DropIndex("dbo.RequestGroupIxQty", "ix_Code");
            DropIndex("dbo.RequestGroupIxDT", new[] { "ResourceId" });
            DropIndex("dbo.RequestGroupIxDT", "ix_SearchParamId");
            DropIndex("dbo.RequestGroupIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.RequestGroupIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.RequestGroupRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.RequestGroupRes", "ix_LastUpdated");
            DropIndex("dbo.RequestGroupRes", "ix_IsDeleted");
            DropIndex("dbo.RequestGroupRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.RequestGroupRes", "ix_IsCurrent");
            DropIndex("dbo.RelatedPersonIxUri", new[] { "ResourceId" });
            DropIndex("dbo.RelatedPersonIxUri", "ix_SearchParamId");
            DropIndex("dbo.RelatedPersonIxUri", "ix_Uri");
            DropIndex("dbo.RelatedPersonIxTok", new[] { "ResourceId" });
            DropIndex("dbo.RelatedPersonIxTok", "ix_SearchParamId");
            DropIndex("dbo.RelatedPersonIxTok", "ix_System");
            DropIndex("dbo.RelatedPersonIxTok", "ix_Code");
            DropIndex("dbo.RelatedPersonIxStr", new[] { "ResourceId" });
            DropIndex("dbo.RelatedPersonIxStr", "ix_SearchParamId");
            DropIndex("dbo.RelatedPersonIxStr", "ix_String");
            DropIndex("dbo.RelatedPersonIxRef", new[] { "ResourceId" });
            DropIndex("dbo.RelatedPersonIxRef", "ix_SearchParamId");
            DropIndex("dbo.RelatedPersonIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.RelatedPersonIxRef", "ix_RefFhirId");
            DropIndex("dbo.RelatedPersonIxQty", new[] { "ResourceId" });
            DropIndex("dbo.RelatedPersonIxQty", "ix_SearchParamId");
            DropIndex("dbo.RelatedPersonIxQty", "ix_System");
            DropIndex("dbo.RelatedPersonIxQty", "ix_Code");
            DropIndex("dbo.RelatedPersonIxDT", new[] { "ResourceId" });
            DropIndex("dbo.RelatedPersonIxDT", "ix_SearchParamId");
            DropIndex("dbo.RelatedPersonIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.RelatedPersonIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.RelatedPersonRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.RelatedPersonRes", "ix_LastUpdated");
            DropIndex("dbo.RelatedPersonRes", "ix_IsDeleted");
            DropIndex("dbo.RelatedPersonRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.RelatedPersonRes", "ix_IsCurrent");
            DropIndex("dbo.QuestionnaireResponseIxUri", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireResponseIxUri", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireResponseIxUri", "ix_Uri");
            DropIndex("dbo.QuestionnaireResponseIxTok", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireResponseIxTok", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireResponseIxTok", "ix_System");
            DropIndex("dbo.QuestionnaireResponseIxTok", "ix_Code");
            DropIndex("dbo.QuestionnaireResponseIxStr", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireResponseIxStr", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireResponseIxStr", "ix_String");
            DropIndex("dbo.QuestionnaireResponseIxRef", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireResponseIxRef", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireResponseIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.QuestionnaireResponseIxRef", "ix_RefFhirId");
            DropIndex("dbo.QuestionnaireResponseIxQty", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireResponseIxQty", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireResponseIxQty", "ix_System");
            DropIndex("dbo.QuestionnaireResponseIxQty", "ix_Code");
            DropIndex("dbo.QuestionnaireResponseIxDT", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireResponseIxDT", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireResponseIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.QuestionnaireResponseIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.QuestionnaireResponseRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.QuestionnaireResponseRes", "ix_LastUpdated");
            DropIndex("dbo.QuestionnaireResponseRes", "ix_IsDeleted");
            DropIndex("dbo.QuestionnaireResponseRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.QuestionnaireResponseRes", "ix_IsCurrent");
            DropIndex("dbo.QuestionnaireIxUri", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireIxUri", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireIxUri", "ix_Uri");
            DropIndex("dbo.QuestionnaireIxTok", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireIxTok", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireIxTok", "ix_System");
            DropIndex("dbo.QuestionnaireIxTok", "ix_Code");
            DropIndex("dbo.QuestionnaireIxStr", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireIxStr", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireIxStr", "ix_String");
            DropIndex("dbo.QuestionnaireIxRef", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireIxRef", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.QuestionnaireIxRef", "ix_RefFhirId");
            DropIndex("dbo.QuestionnaireIxQty", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireIxQty", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireIxQty", "ix_System");
            DropIndex("dbo.QuestionnaireIxQty", "ix_Code");
            DropIndex("dbo.QuestionnaireIxDT", new[] { "ResourceId" });
            DropIndex("dbo.QuestionnaireIxDT", "ix_SearchParamId");
            DropIndex("dbo.QuestionnaireIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.QuestionnaireIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.QuestionnaireRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.QuestionnaireRes", "ix_LastUpdated");
            DropIndex("dbo.QuestionnaireRes", "ix_IsDeleted");
            DropIndex("dbo.QuestionnaireRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.QuestionnaireRes", "ix_IsCurrent");
            DropIndex("dbo.ProvenanceIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ProvenanceIxUri", "ix_SearchParamId");
            DropIndex("dbo.ProvenanceIxUri", "ix_Uri");
            DropIndex("dbo.ProvenanceIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ProvenanceIxTok", "ix_SearchParamId");
            DropIndex("dbo.ProvenanceIxTok", "ix_System");
            DropIndex("dbo.ProvenanceIxTok", "ix_Code");
            DropIndex("dbo.ProvenanceIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ProvenanceIxStr", "ix_SearchParamId");
            DropIndex("dbo.ProvenanceIxStr", "ix_String");
            DropIndex("dbo.ProvenanceIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ProvenanceIxRef", "ix_SearchParamId");
            DropIndex("dbo.ProvenanceIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ProvenanceIxRef", "ix_RefFhirId");
            DropIndex("dbo.ProvenanceIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ProvenanceIxQty", "ix_SearchParamId");
            DropIndex("dbo.ProvenanceIxQty", "ix_System");
            DropIndex("dbo.ProvenanceIxQty", "ix_Code");
            DropIndex("dbo.ProvenanceIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ProvenanceIxDT", "ix_SearchParamId");
            DropIndex("dbo.ProvenanceIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ProvenanceIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ProvenanceRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ProvenanceRes", "ix_LastUpdated");
            DropIndex("dbo.ProvenanceRes", "ix_IsDeleted");
            DropIndex("dbo.ProvenanceRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ProvenanceRes", "ix_IsCurrent");
            DropIndex("dbo.ProcedureIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ProcedureIxUri", "ix_SearchParamId");
            DropIndex("dbo.ProcedureIxUri", "ix_Uri");
            DropIndex("dbo.ProcedureIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ProcedureIxTok", "ix_SearchParamId");
            DropIndex("dbo.ProcedureIxTok", "ix_System");
            DropIndex("dbo.ProcedureIxTok", "ix_Code");
            DropIndex("dbo.ProcedureIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ProcedureIxStr", "ix_SearchParamId");
            DropIndex("dbo.ProcedureIxStr", "ix_String");
            DropIndex("dbo.ProcedureIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ProcedureIxRef", "ix_SearchParamId");
            DropIndex("dbo.ProcedureIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ProcedureIxRef", "ix_RefFhirId");
            DropIndex("dbo.ProcedureIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ProcedureIxQty", "ix_SearchParamId");
            DropIndex("dbo.ProcedureIxQty", "ix_System");
            DropIndex("dbo.ProcedureIxQty", "ix_Code");
            DropIndex("dbo.ProcedureIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ProcedureIxDT", "ix_SearchParamId");
            DropIndex("dbo.ProcedureIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ProcedureIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ProcedureRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ProcedureRes", "ix_LastUpdated");
            DropIndex("dbo.ProcedureRes", "ix_IsDeleted");
            DropIndex("dbo.ProcedureRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ProcedureRes", "ix_IsCurrent");
            DropIndex("dbo.PractitionerRoleIxUri", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerRoleIxUri", "ix_SearchParamId");
            DropIndex("dbo.PractitionerRoleIxUri", "ix_Uri");
            DropIndex("dbo.PractitionerRoleIxTok", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerRoleIxTok", "ix_SearchParamId");
            DropIndex("dbo.PractitionerRoleIxTok", "ix_System");
            DropIndex("dbo.PractitionerRoleIxTok", "ix_Code");
            DropIndex("dbo.PractitionerRoleIxStr", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerRoleIxStr", "ix_SearchParamId");
            DropIndex("dbo.PractitionerRoleIxStr", "ix_String");
            DropIndex("dbo.PractitionerRoleIxRef", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerRoleIxRef", "ix_SearchParamId");
            DropIndex("dbo.PractitionerRoleIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.PractitionerRoleIxRef", "ix_RefFhirId");
            DropIndex("dbo.PractitionerRoleIxQty", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerRoleIxQty", "ix_SearchParamId");
            DropIndex("dbo.PractitionerRoleIxQty", "ix_System");
            DropIndex("dbo.PractitionerRoleIxQty", "ix_Code");
            DropIndex("dbo.PractitionerRoleIxDT", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerRoleIxDT", "ix_SearchParamId");
            DropIndex("dbo.PractitionerRoleIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.PractitionerRoleIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.PractitionerRoleRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.PractitionerRoleRes", "ix_LastUpdated");
            DropIndex("dbo.PractitionerRoleRes", "ix_IsDeleted");
            DropIndex("dbo.PractitionerRoleRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.PractitionerRoleRes", "ix_IsCurrent");
            DropIndex("dbo.PractitionerIxUri", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerIxUri", "ix_SearchParamId");
            DropIndex("dbo.PractitionerIxUri", "ix_Uri");
            DropIndex("dbo.PractitionerIxTok", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerIxTok", "ix_SearchParamId");
            DropIndex("dbo.PractitionerIxTok", "ix_System");
            DropIndex("dbo.PractitionerIxTok", "ix_Code");
            DropIndex("dbo.PractitionerIxStr", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerIxStr", "ix_SearchParamId");
            DropIndex("dbo.PractitionerIxStr", "ix_String");
            DropIndex("dbo.PractitionerIxRef", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerIxRef", "ix_SearchParamId");
            DropIndex("dbo.PractitionerIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.PractitionerIxRef", "ix_RefFhirId");
            DropIndex("dbo.PractitionerIxQty", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerIxQty", "ix_SearchParamId");
            DropIndex("dbo.PractitionerIxQty", "ix_System");
            DropIndex("dbo.PractitionerIxQty", "ix_Code");
            DropIndex("dbo.PractitionerIxDT", new[] { "ResourceId" });
            DropIndex("dbo.PractitionerIxDT", "ix_SearchParamId");
            DropIndex("dbo.PractitionerIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.PractitionerIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.PractitionerRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.PractitionerRes", "ix_LastUpdated");
            DropIndex("dbo.PractitionerRes", "ix_IsDeleted");
            DropIndex("dbo.PractitionerRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.PractitionerRes", "ix_IsCurrent");
            DropIndex("dbo.PlanDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.PlanDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.PlanDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.PlanDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.PlanDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.PlanDefinitionIxTok", "ix_System");
            DropIndex("dbo.PlanDefinitionIxTok", "ix_Code");
            DropIndex("dbo.PlanDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.PlanDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.PlanDefinitionIxStr", "ix_String");
            DropIndex("dbo.PlanDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.PlanDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.PlanDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.PlanDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.PlanDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.PlanDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.PlanDefinitionIxQty", "ix_System");
            DropIndex("dbo.PlanDefinitionIxQty", "ix_Code");
            DropIndex("dbo.PlanDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.PlanDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.PlanDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.PlanDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.PlanDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.PlanDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.PlanDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.PlanDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.PlanDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.PersonIxUri", new[] { "ResourceId" });
            DropIndex("dbo.PersonIxUri", "ix_SearchParamId");
            DropIndex("dbo.PersonIxUri", "ix_Uri");
            DropIndex("dbo.PersonIxTok", new[] { "ResourceId" });
            DropIndex("dbo.PersonIxTok", "ix_SearchParamId");
            DropIndex("dbo.PersonIxTok", "ix_System");
            DropIndex("dbo.PersonIxTok", "ix_Code");
            DropIndex("dbo.PersonIxStr", new[] { "ResourceId" });
            DropIndex("dbo.PersonIxStr", "ix_SearchParamId");
            DropIndex("dbo.PersonIxStr", "ix_String");
            DropIndex("dbo.PersonIxRef", new[] { "ResourceId" });
            DropIndex("dbo.PersonIxRef", "ix_SearchParamId");
            DropIndex("dbo.PersonIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.PersonIxRef", "ix_RefFhirId");
            DropIndex("dbo.PersonIxQty", new[] { "ResourceId" });
            DropIndex("dbo.PersonIxQty", "ix_SearchParamId");
            DropIndex("dbo.PersonIxQty", "ix_System");
            DropIndex("dbo.PersonIxQty", "ix_Code");
            DropIndex("dbo.PersonIxDT", new[] { "ResourceId" });
            DropIndex("dbo.PersonIxDT", "ix_SearchParamId");
            DropIndex("dbo.PersonIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.PersonIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.PersonRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.PersonRes", "ix_LastUpdated");
            DropIndex("dbo.PersonRes", "ix_IsDeleted");
            DropIndex("dbo.PersonRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.PersonRes", "ix_IsCurrent");
            DropIndex("dbo.PaymentReconciliationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.PaymentReconciliationIxUri", "ix_SearchParamId");
            DropIndex("dbo.PaymentReconciliationIxUri", "ix_Uri");
            DropIndex("dbo.PaymentReconciliationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.PaymentReconciliationIxTok", "ix_SearchParamId");
            DropIndex("dbo.PaymentReconciliationIxTok", "ix_System");
            DropIndex("dbo.PaymentReconciliationIxTok", "ix_Code");
            DropIndex("dbo.PaymentReconciliationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.PaymentReconciliationIxStr", "ix_SearchParamId");
            DropIndex("dbo.PaymentReconciliationIxStr", "ix_String");
            DropIndex("dbo.PaymentReconciliationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.PaymentReconciliationIxRef", "ix_SearchParamId");
            DropIndex("dbo.PaymentReconciliationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.PaymentReconciliationIxRef", "ix_RefFhirId");
            DropIndex("dbo.PaymentReconciliationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.PaymentReconciliationIxQty", "ix_SearchParamId");
            DropIndex("dbo.PaymentReconciliationIxQty", "ix_System");
            DropIndex("dbo.PaymentReconciliationIxQty", "ix_Code");
            DropIndex("dbo.PaymentReconciliationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.PaymentReconciliationIxDT", "ix_SearchParamId");
            DropIndex("dbo.PaymentReconciliationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.PaymentReconciliationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.PaymentReconciliationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.PaymentReconciliationRes", "ix_LastUpdated");
            DropIndex("dbo.PaymentReconciliationRes", "ix_IsDeleted");
            DropIndex("dbo.PaymentReconciliationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.PaymentReconciliationRes", "ix_IsCurrent");
            DropIndex("dbo.PaymentNoticeIxUri", new[] { "ResourceId" });
            DropIndex("dbo.PaymentNoticeIxUri", "ix_SearchParamId");
            DropIndex("dbo.PaymentNoticeIxUri", "ix_Uri");
            DropIndex("dbo.PaymentNoticeIxTok", new[] { "ResourceId" });
            DropIndex("dbo.PaymentNoticeIxTok", "ix_SearchParamId");
            DropIndex("dbo.PaymentNoticeIxTok", "ix_System");
            DropIndex("dbo.PaymentNoticeIxTok", "ix_Code");
            DropIndex("dbo.PaymentNoticeIxStr", new[] { "ResourceId" });
            DropIndex("dbo.PaymentNoticeIxStr", "ix_SearchParamId");
            DropIndex("dbo.PaymentNoticeIxStr", "ix_String");
            DropIndex("dbo.PaymentNoticeIxRef", new[] { "ResourceId" });
            DropIndex("dbo.PaymentNoticeIxRef", "ix_SearchParamId");
            DropIndex("dbo.PaymentNoticeIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.PaymentNoticeIxRef", "ix_RefFhirId");
            DropIndex("dbo.PaymentNoticeIxQty", new[] { "ResourceId" });
            DropIndex("dbo.PaymentNoticeIxQty", "ix_SearchParamId");
            DropIndex("dbo.PaymentNoticeIxQty", "ix_System");
            DropIndex("dbo.PaymentNoticeIxQty", "ix_Code");
            DropIndex("dbo.PaymentNoticeIxDT", new[] { "ResourceId" });
            DropIndex("dbo.PaymentNoticeIxDT", "ix_SearchParamId");
            DropIndex("dbo.PaymentNoticeIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.PaymentNoticeIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.PaymentNoticeRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.PaymentNoticeRes", "ix_LastUpdated");
            DropIndex("dbo.PaymentNoticeRes", "ix_IsDeleted");
            DropIndex("dbo.PaymentNoticeRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.PaymentNoticeRes", "ix_IsCurrent");
            DropIndex("dbo.PatientIxUri", new[] { "ResourceId" });
            DropIndex("dbo.PatientIxUri", "ix_SearchParamId");
            DropIndex("dbo.PatientIxUri", "ix_Uri");
            DropIndex("dbo.PatientIxTok", new[] { "ResourceId" });
            DropIndex("dbo.PatientIxTok", "ix_SearchParamId");
            DropIndex("dbo.PatientIxTok", "ix_System");
            DropIndex("dbo.PatientIxTok", "ix_Code");
            DropIndex("dbo.PatientIxStr", new[] { "ResourceId" });
            DropIndex("dbo.PatientIxStr", "ix_SearchParamId");
            DropIndex("dbo.PatientIxStr", "ix_String");
            DropIndex("dbo.PatientIxRef", new[] { "ResourceId" });
            DropIndex("dbo.PatientIxRef", "ix_SearchParamId");
            DropIndex("dbo.PatientIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.PatientIxRef", "ix_RefFhirId");
            DropIndex("dbo.PatientIxQty", new[] { "ResourceId" });
            DropIndex("dbo.PatientIxQty", "ix_SearchParamId");
            DropIndex("dbo.PatientIxQty", "ix_System");
            DropIndex("dbo.PatientIxQty", "ix_Code");
            DropIndex("dbo.PatientIxDT", new[] { "ResourceId" });
            DropIndex("dbo.PatientIxDT", "ix_SearchParamId");
            DropIndex("dbo.PatientIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.PatientIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.PatientRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.PatientRes", "ix_LastUpdated");
            DropIndex("dbo.PatientRes", "ix_IsDeleted");
            DropIndex("dbo.PatientRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.PatientRes", "ix_IsCurrent");
            DropIndex("dbo.ParametersIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ParametersIxUri", "ix_SearchParamId");
            DropIndex("dbo.ParametersIxUri", "ix_Uri");
            DropIndex("dbo.ParametersIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ParametersIxTok", "ix_SearchParamId");
            DropIndex("dbo.ParametersIxTok", "ix_System");
            DropIndex("dbo.ParametersIxTok", "ix_Code");
            DropIndex("dbo.ParametersIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ParametersIxStr", "ix_SearchParamId");
            DropIndex("dbo.ParametersIxStr", "ix_String");
            DropIndex("dbo.ParametersIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ParametersIxRef", "ix_SearchParamId");
            DropIndex("dbo.ParametersIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ParametersIxRef", "ix_RefFhirId");
            DropIndex("dbo.ParametersIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ParametersIxQty", "ix_SearchParamId");
            DropIndex("dbo.ParametersIxQty", "ix_System");
            DropIndex("dbo.ParametersIxQty", "ix_Code");
            DropIndex("dbo.ParametersIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ParametersIxDT", "ix_SearchParamId");
            DropIndex("dbo.ParametersIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ParametersIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ParametersRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ParametersRes", "ix_LastUpdated");
            DropIndex("dbo.ParametersRes", "ix_IsDeleted");
            DropIndex("dbo.ParametersRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ParametersRes", "ix_IsCurrent");
            DropIndex("dbo.OrganizationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationIxUri", "ix_SearchParamId");
            DropIndex("dbo.OrganizationIxUri", "ix_Uri");
            DropIndex("dbo.OrganizationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationIxTok", "ix_SearchParamId");
            DropIndex("dbo.OrganizationIxTok", "ix_System");
            DropIndex("dbo.OrganizationIxTok", "ix_Code");
            DropIndex("dbo.OrganizationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationIxStr", "ix_SearchParamId");
            DropIndex("dbo.OrganizationIxStr", "ix_String");
            DropIndex("dbo.OrganizationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationIxRef", "ix_SearchParamId");
            DropIndex("dbo.OrganizationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.OrganizationIxRef", "ix_RefFhirId");
            DropIndex("dbo.OrganizationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationIxQty", "ix_SearchParamId");
            DropIndex("dbo.OrganizationIxQty", "ix_System");
            DropIndex("dbo.OrganizationIxQty", "ix_Code");
            DropIndex("dbo.OrganizationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationIxDT", "ix_SearchParamId");
            DropIndex("dbo.OrganizationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.OrganizationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.OrganizationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.OrganizationRes", "ix_LastUpdated");
            DropIndex("dbo.OrganizationRes", "ix_IsDeleted");
            DropIndex("dbo.OrganizationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.OrganizationRes", "ix_IsCurrent");
            DropIndex("dbo.OrganizationAffiliationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationAffiliationIxUri", "ix_SearchParamId");
            DropIndex("dbo.OrganizationAffiliationIxUri", "ix_Uri");
            DropIndex("dbo.OrganizationAffiliationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationAffiliationIxTok", "ix_SearchParamId");
            DropIndex("dbo.OrganizationAffiliationIxTok", "ix_System");
            DropIndex("dbo.OrganizationAffiliationIxTok", "ix_Code");
            DropIndex("dbo.OrganizationAffiliationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationAffiliationIxStr", "ix_SearchParamId");
            DropIndex("dbo.OrganizationAffiliationIxStr", "ix_String");
            DropIndex("dbo.OrganizationAffiliationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationAffiliationIxRef", "ix_SearchParamId");
            DropIndex("dbo.OrganizationAffiliationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.OrganizationAffiliationIxRef", "ix_RefFhirId");
            DropIndex("dbo.OrganizationAffiliationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationAffiliationIxQty", "ix_SearchParamId");
            DropIndex("dbo.OrganizationAffiliationIxQty", "ix_System");
            DropIndex("dbo.OrganizationAffiliationIxQty", "ix_Code");
            DropIndex("dbo.OrganizationAffiliationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.OrganizationAffiliationIxDT", "ix_SearchParamId");
            DropIndex("dbo.OrganizationAffiliationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.OrganizationAffiliationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.OrganizationAffiliationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.OrganizationAffiliationRes", "ix_LastUpdated");
            DropIndex("dbo.OrganizationAffiliationRes", "ix_IsDeleted");
            DropIndex("dbo.OrganizationAffiliationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.OrganizationAffiliationRes", "ix_IsCurrent");
            DropIndex("dbo.OperationOutcomeIxUri", new[] { "ResourceId" });
            DropIndex("dbo.OperationOutcomeIxUri", "ix_SearchParamId");
            DropIndex("dbo.OperationOutcomeIxUri", "ix_Uri");
            DropIndex("dbo.OperationOutcomeIxTok", new[] { "ResourceId" });
            DropIndex("dbo.OperationOutcomeIxTok", "ix_SearchParamId");
            DropIndex("dbo.OperationOutcomeIxTok", "ix_System");
            DropIndex("dbo.OperationOutcomeIxTok", "ix_Code");
            DropIndex("dbo.OperationOutcomeIxStr", new[] { "ResourceId" });
            DropIndex("dbo.OperationOutcomeIxStr", "ix_SearchParamId");
            DropIndex("dbo.OperationOutcomeIxStr", "ix_String");
            DropIndex("dbo.OperationOutcomeIxRef", new[] { "ResourceId" });
            DropIndex("dbo.OperationOutcomeIxRef", "ix_SearchParamId");
            DropIndex("dbo.OperationOutcomeIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.OperationOutcomeIxRef", "ix_RefFhirId");
            DropIndex("dbo.OperationOutcomeIxQty", new[] { "ResourceId" });
            DropIndex("dbo.OperationOutcomeIxQty", "ix_SearchParamId");
            DropIndex("dbo.OperationOutcomeIxQty", "ix_System");
            DropIndex("dbo.OperationOutcomeIxQty", "ix_Code");
            DropIndex("dbo.OperationOutcomeIxDT", new[] { "ResourceId" });
            DropIndex("dbo.OperationOutcomeIxDT", "ix_SearchParamId");
            DropIndex("dbo.OperationOutcomeIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.OperationOutcomeIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.OperationOutcomeRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.OperationOutcomeRes", "ix_LastUpdated");
            DropIndex("dbo.OperationOutcomeRes", "ix_IsDeleted");
            DropIndex("dbo.OperationOutcomeRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.OperationOutcomeRes", "ix_IsCurrent");
            DropIndex("dbo.OperationDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.OperationDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.OperationDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.OperationDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.OperationDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.OperationDefinitionIxTok", "ix_System");
            DropIndex("dbo.OperationDefinitionIxTok", "ix_Code");
            DropIndex("dbo.OperationDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.OperationDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.OperationDefinitionIxStr", "ix_String");
            DropIndex("dbo.OperationDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.OperationDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.OperationDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.OperationDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.OperationDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.OperationDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.OperationDefinitionIxQty", "ix_System");
            DropIndex("dbo.OperationDefinitionIxQty", "ix_Code");
            DropIndex("dbo.OperationDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.OperationDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.OperationDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.OperationDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.OperationDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.OperationDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.OperationDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.OperationDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.OperationDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.ObservationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ObservationIxUri", "ix_SearchParamId");
            DropIndex("dbo.ObservationIxUri", "ix_Uri");
            DropIndex("dbo.ObservationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ObservationIxTok", "ix_SearchParamId");
            DropIndex("dbo.ObservationIxTok", "ix_System");
            DropIndex("dbo.ObservationIxTok", "ix_Code");
            DropIndex("dbo.ObservationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ObservationIxStr", "ix_SearchParamId");
            DropIndex("dbo.ObservationIxStr", "ix_String");
            DropIndex("dbo.ObservationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ObservationIxRef", "ix_SearchParamId");
            DropIndex("dbo.ObservationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ObservationIxRef", "ix_RefFhirId");
            DropIndex("dbo.ObservationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ObservationIxQty", "ix_SearchParamId");
            DropIndex("dbo.ObservationIxQty", "ix_System");
            DropIndex("dbo.ObservationIxQty", "ix_Code");
            DropIndex("dbo.ObservationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ObservationIxDT", "ix_SearchParamId");
            DropIndex("dbo.ObservationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ObservationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ObservationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ObservationRes", "ix_LastUpdated");
            DropIndex("dbo.ObservationRes", "ix_IsDeleted");
            DropIndex("dbo.ObservationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ObservationRes", "ix_IsCurrent");
            DropIndex("dbo.ObservationDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ObservationDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.ObservationDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.ObservationDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ObservationDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.ObservationDefinitionIxTok", "ix_System");
            DropIndex("dbo.ObservationDefinitionIxTok", "ix_Code");
            DropIndex("dbo.ObservationDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ObservationDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.ObservationDefinitionIxStr", "ix_String");
            DropIndex("dbo.ObservationDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ObservationDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.ObservationDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ObservationDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.ObservationDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ObservationDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.ObservationDefinitionIxQty", "ix_System");
            DropIndex("dbo.ObservationDefinitionIxQty", "ix_Code");
            DropIndex("dbo.ObservationDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ObservationDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.ObservationDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ObservationDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ObservationDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ObservationDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.ObservationDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.ObservationDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ObservationDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.NutritionOrderIxUri", new[] { "ResourceId" });
            DropIndex("dbo.NutritionOrderIxUri", "ix_SearchParamId");
            DropIndex("dbo.NutritionOrderIxUri", "ix_Uri");
            DropIndex("dbo.NutritionOrderIxTok", new[] { "ResourceId" });
            DropIndex("dbo.NutritionOrderIxTok", "ix_SearchParamId");
            DropIndex("dbo.NutritionOrderIxTok", "ix_System");
            DropIndex("dbo.NutritionOrderIxTok", "ix_Code");
            DropIndex("dbo.NutritionOrderIxStr", new[] { "ResourceId" });
            DropIndex("dbo.NutritionOrderIxStr", "ix_SearchParamId");
            DropIndex("dbo.NutritionOrderIxStr", "ix_String");
            DropIndex("dbo.NutritionOrderIxRef", new[] { "ResourceId" });
            DropIndex("dbo.NutritionOrderIxRef", "ix_SearchParamId");
            DropIndex("dbo.NutritionOrderIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.NutritionOrderIxRef", "ix_RefFhirId");
            DropIndex("dbo.NutritionOrderIxQty", new[] { "ResourceId" });
            DropIndex("dbo.NutritionOrderIxQty", "ix_SearchParamId");
            DropIndex("dbo.NutritionOrderIxQty", "ix_System");
            DropIndex("dbo.NutritionOrderIxQty", "ix_Code");
            DropIndex("dbo.NutritionOrderIxDT", new[] { "ResourceId" });
            DropIndex("dbo.NutritionOrderIxDT", "ix_SearchParamId");
            DropIndex("dbo.NutritionOrderIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.NutritionOrderIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.NutritionOrderRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.NutritionOrderRes", "ix_LastUpdated");
            DropIndex("dbo.NutritionOrderRes", "ix_IsDeleted");
            DropIndex("dbo.NutritionOrderRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.NutritionOrderRes", "ix_IsCurrent");
            DropIndex("dbo.NamingSystemIxUri", new[] { "ResourceId" });
            DropIndex("dbo.NamingSystemIxUri", "ix_SearchParamId");
            DropIndex("dbo.NamingSystemIxUri", "ix_Uri");
            DropIndex("dbo.NamingSystemIxTok", new[] { "ResourceId" });
            DropIndex("dbo.NamingSystemIxTok", "ix_SearchParamId");
            DropIndex("dbo.NamingSystemIxTok", "ix_System");
            DropIndex("dbo.NamingSystemIxTok", "ix_Code");
            DropIndex("dbo.NamingSystemIxStr", new[] { "ResourceId" });
            DropIndex("dbo.NamingSystemIxStr", "ix_SearchParamId");
            DropIndex("dbo.NamingSystemIxStr", "ix_String");
            DropIndex("dbo.NamingSystemIxRef", new[] { "ResourceId" });
            DropIndex("dbo.NamingSystemIxRef", "ix_SearchParamId");
            DropIndex("dbo.NamingSystemIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.NamingSystemIxRef", "ix_RefFhirId");
            DropIndex("dbo.NamingSystemIxQty", new[] { "ResourceId" });
            DropIndex("dbo.NamingSystemIxQty", "ix_SearchParamId");
            DropIndex("dbo.NamingSystemIxQty", "ix_System");
            DropIndex("dbo.NamingSystemIxQty", "ix_Code");
            DropIndex("dbo.NamingSystemIxDT", new[] { "ResourceId" });
            DropIndex("dbo.NamingSystemIxDT", "ix_SearchParamId");
            DropIndex("dbo.NamingSystemIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.NamingSystemIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.NamingSystemRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.NamingSystemRes", "ix_LastUpdated");
            DropIndex("dbo.NamingSystemRes", "ix_IsDeleted");
            DropIndex("dbo.NamingSystemRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.NamingSystemRes", "ix_IsCurrent");
            DropIndex("dbo.MolecularSequenceIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MolecularSequenceIxUri", "ix_SearchParamId");
            DropIndex("dbo.MolecularSequenceIxUri", "ix_Uri");
            DropIndex("dbo.MolecularSequenceIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MolecularSequenceIxTok", "ix_SearchParamId");
            DropIndex("dbo.MolecularSequenceIxTok", "ix_System");
            DropIndex("dbo.MolecularSequenceIxTok", "ix_Code");
            DropIndex("dbo.MolecularSequenceIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MolecularSequenceIxStr", "ix_SearchParamId");
            DropIndex("dbo.MolecularSequenceIxStr", "ix_String");
            DropIndex("dbo.MolecularSequenceIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MolecularSequenceIxRef", "ix_SearchParamId");
            DropIndex("dbo.MolecularSequenceIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MolecularSequenceIxRef", "ix_RefFhirId");
            DropIndex("dbo.MolecularSequenceIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MolecularSequenceIxQty", "ix_SearchParamId");
            DropIndex("dbo.MolecularSequenceIxQty", "ix_System");
            DropIndex("dbo.MolecularSequenceIxQty", "ix_Code");
            DropIndex("dbo.MolecularSequenceIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MolecularSequenceIxDT", "ix_SearchParamId");
            DropIndex("dbo.MolecularSequenceIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MolecularSequenceIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MolecularSequenceRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MolecularSequenceRes", "ix_LastUpdated");
            DropIndex("dbo.MolecularSequenceRes", "ix_IsDeleted");
            DropIndex("dbo.MolecularSequenceRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MolecularSequenceRes", "ix_IsCurrent");
            DropIndex("dbo.MessageHeaderIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MessageHeaderIxUri", "ix_SearchParamId");
            DropIndex("dbo.MessageHeaderIxUri", "ix_Uri");
            DropIndex("dbo.MessageHeaderIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MessageHeaderIxTok", "ix_SearchParamId");
            DropIndex("dbo.MessageHeaderIxTok", "ix_System");
            DropIndex("dbo.MessageHeaderIxTok", "ix_Code");
            DropIndex("dbo.MessageHeaderIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MessageHeaderIxStr", "ix_SearchParamId");
            DropIndex("dbo.MessageHeaderIxStr", "ix_String");
            DropIndex("dbo.MessageHeaderIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MessageHeaderIxRef", "ix_SearchParamId");
            DropIndex("dbo.MessageHeaderIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MessageHeaderIxRef", "ix_RefFhirId");
            DropIndex("dbo.MessageHeaderIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MessageHeaderIxQty", "ix_SearchParamId");
            DropIndex("dbo.MessageHeaderIxQty", "ix_System");
            DropIndex("dbo.MessageHeaderIxQty", "ix_Code");
            DropIndex("dbo.MessageHeaderIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MessageHeaderIxDT", "ix_SearchParamId");
            DropIndex("dbo.MessageHeaderIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MessageHeaderIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MessageHeaderRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MessageHeaderRes", "ix_LastUpdated");
            DropIndex("dbo.MessageHeaderRes", "ix_IsDeleted");
            DropIndex("dbo.MessageHeaderRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MessageHeaderRes", "ix_IsCurrent");
            DropIndex("dbo.MessageDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MessageDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.MessageDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.MessageDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MessageDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.MessageDefinitionIxTok", "ix_System");
            DropIndex("dbo.MessageDefinitionIxTok", "ix_Code");
            DropIndex("dbo.MessageDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MessageDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.MessageDefinitionIxStr", "ix_String");
            DropIndex("dbo.MessageDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MessageDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.MessageDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MessageDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.MessageDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MessageDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.MessageDefinitionIxQty", "ix_System");
            DropIndex("dbo.MessageDefinitionIxQty", "ix_Code");
            DropIndex("dbo.MessageDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MessageDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.MessageDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MessageDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MessageDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MessageDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.MessageDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.MessageDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MessageDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductUndesirableEffectIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxUri", "ix_Uri");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductUndesirableEffectIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxTok", "ix_System");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxTok", "ix_Code");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductUndesirableEffectIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxStr", "ix_String");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductUndesirableEffectIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductUndesirableEffectIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxQty", "ix_System");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxQty", "ix_Code");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductUndesirableEffectIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicinalProductUndesirableEffectIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicinalProductUndesirableEffectRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicinalProductUndesirableEffectRes", "ix_LastUpdated");
            DropIndex("dbo.MedicinalProductUndesirableEffectRes", "ix_IsDeleted");
            DropIndex("dbo.MedicinalProductUndesirableEffectRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicinalProductUndesirableEffectRes", "ix_IsCurrent");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPharmaceuticalIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxUri", "ix_Uri");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPharmaceuticalIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxTok", "ix_System");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxTok", "ix_Code");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPharmaceuticalIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxStr", "ix_String");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPharmaceuticalIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPharmaceuticalIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxQty", "ix_System");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxQty", "ix_Code");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPharmaceuticalIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicinalProductPharmaceuticalIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicinalProductPharmaceuticalRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicinalProductPharmaceuticalRes", "ix_LastUpdated");
            DropIndex("dbo.MedicinalProductPharmaceuticalRes", "ix_IsDeleted");
            DropIndex("dbo.MedicinalProductPharmaceuticalRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicinalProductPharmaceuticalRes", "ix_IsCurrent");
            DropIndex("dbo.MedicinalProductPackagedIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPackagedIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPackagedIxUri", "ix_Uri");
            DropIndex("dbo.MedicinalProductPackagedIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPackagedIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPackagedIxTok", "ix_System");
            DropIndex("dbo.MedicinalProductPackagedIxTok", "ix_Code");
            DropIndex("dbo.MedicinalProductPackagedIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPackagedIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPackagedIxStr", "ix_String");
            DropIndex("dbo.MedicinalProductPackagedIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPackagedIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPackagedIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicinalProductPackagedIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicinalProductPackagedIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPackagedIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPackagedIxQty", "ix_System");
            DropIndex("dbo.MedicinalProductPackagedIxQty", "ix_Code");
            DropIndex("dbo.MedicinalProductPackagedIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductPackagedIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductPackagedIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicinalProductPackagedIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicinalProductPackagedRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicinalProductPackagedRes", "ix_LastUpdated");
            DropIndex("dbo.MedicinalProductPackagedRes", "ix_IsDeleted");
            DropIndex("dbo.MedicinalProductPackagedRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicinalProductPackagedRes", "ix_IsCurrent");
            DropIndex("dbo.MedicinalProductManufacturedIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductManufacturedIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductManufacturedIxUri", "ix_Uri");
            DropIndex("dbo.MedicinalProductManufacturedIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductManufacturedIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductManufacturedIxTok", "ix_System");
            DropIndex("dbo.MedicinalProductManufacturedIxTok", "ix_Code");
            DropIndex("dbo.MedicinalProductManufacturedIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductManufacturedIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductManufacturedIxStr", "ix_String");
            DropIndex("dbo.MedicinalProductManufacturedIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductManufacturedIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductManufacturedIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicinalProductManufacturedIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicinalProductManufacturedIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductManufacturedIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductManufacturedIxQty", "ix_System");
            DropIndex("dbo.MedicinalProductManufacturedIxQty", "ix_Code");
            DropIndex("dbo.MedicinalProductManufacturedIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductManufacturedIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductManufacturedIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicinalProductManufacturedIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicinalProductManufacturedRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicinalProductManufacturedRes", "ix_LastUpdated");
            DropIndex("dbo.MedicinalProductManufacturedRes", "ix_IsDeleted");
            DropIndex("dbo.MedicinalProductManufacturedRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicinalProductManufacturedRes", "ix_IsCurrent");
            DropIndex("dbo.MedicinalProductIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIxUri", "ix_Uri");
            DropIndex("dbo.MedicinalProductIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIxTok", "ix_System");
            DropIndex("dbo.MedicinalProductIxTok", "ix_Code");
            DropIndex("dbo.MedicinalProductIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIxStr", "ix_String");
            DropIndex("dbo.MedicinalProductIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicinalProductIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicinalProductIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIxQty", "ix_System");
            DropIndex("dbo.MedicinalProductIxQty", "ix_Code");
            DropIndex("dbo.MedicinalProductIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicinalProductIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicinalProductRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicinalProductRes", "ix_LastUpdated");
            DropIndex("dbo.MedicinalProductRes", "ix_IsDeleted");
            DropIndex("dbo.MedicinalProductRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicinalProductRes", "ix_IsCurrent");
            DropIndex("dbo.MedicinalProductInteractionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductInteractionIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductInteractionIxUri", "ix_Uri");
            DropIndex("dbo.MedicinalProductInteractionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductInteractionIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductInteractionIxTok", "ix_System");
            DropIndex("dbo.MedicinalProductInteractionIxTok", "ix_Code");
            DropIndex("dbo.MedicinalProductInteractionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductInteractionIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductInteractionIxStr", "ix_String");
            DropIndex("dbo.MedicinalProductInteractionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductInteractionIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductInteractionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicinalProductInteractionIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicinalProductInteractionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductInteractionIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductInteractionIxQty", "ix_System");
            DropIndex("dbo.MedicinalProductInteractionIxQty", "ix_Code");
            DropIndex("dbo.MedicinalProductInteractionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductInteractionIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductInteractionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicinalProductInteractionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicinalProductInteractionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicinalProductInteractionRes", "ix_LastUpdated");
            DropIndex("dbo.MedicinalProductInteractionRes", "ix_IsDeleted");
            DropIndex("dbo.MedicinalProductInteractionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicinalProductInteractionRes", "ix_IsCurrent");
            DropIndex("dbo.MedicinalProductIngredientIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIngredientIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIngredientIxUri", "ix_Uri");
            DropIndex("dbo.MedicinalProductIngredientIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIngredientIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIngredientIxTok", "ix_System");
            DropIndex("dbo.MedicinalProductIngredientIxTok", "ix_Code");
            DropIndex("dbo.MedicinalProductIngredientIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIngredientIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIngredientIxStr", "ix_String");
            DropIndex("dbo.MedicinalProductIngredientIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIngredientIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIngredientIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicinalProductIngredientIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicinalProductIngredientIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIngredientIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIngredientIxQty", "ix_System");
            DropIndex("dbo.MedicinalProductIngredientIxQty", "ix_Code");
            DropIndex("dbo.MedicinalProductIngredientIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIngredientIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIngredientIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicinalProductIngredientIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicinalProductIngredientRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicinalProductIngredientRes", "ix_LastUpdated");
            DropIndex("dbo.MedicinalProductIngredientRes", "ix_IsDeleted");
            DropIndex("dbo.MedicinalProductIngredientRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicinalProductIngredientRes", "ix_IsCurrent");
            DropIndex("dbo.MedicinalProductIndicationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIndicationIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIndicationIxUri", "ix_Uri");
            DropIndex("dbo.MedicinalProductIndicationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIndicationIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIndicationIxTok", "ix_System");
            DropIndex("dbo.MedicinalProductIndicationIxTok", "ix_Code");
            DropIndex("dbo.MedicinalProductIndicationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIndicationIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIndicationIxStr", "ix_String");
            DropIndex("dbo.MedicinalProductIndicationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIndicationIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIndicationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicinalProductIndicationIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicinalProductIndicationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIndicationIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIndicationIxQty", "ix_System");
            DropIndex("dbo.MedicinalProductIndicationIxQty", "ix_Code");
            DropIndex("dbo.MedicinalProductIndicationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductIndicationIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductIndicationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicinalProductIndicationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicinalProductIndicationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicinalProductIndicationRes", "ix_LastUpdated");
            DropIndex("dbo.MedicinalProductIndicationRes", "ix_IsDeleted");
            DropIndex("dbo.MedicinalProductIndicationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicinalProductIndicationRes", "ix_IsCurrent");
            DropIndex("dbo.MedicinalProductContraindicationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductContraindicationIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductContraindicationIxUri", "ix_Uri");
            DropIndex("dbo.MedicinalProductContraindicationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductContraindicationIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductContraindicationIxTok", "ix_System");
            DropIndex("dbo.MedicinalProductContraindicationIxTok", "ix_Code");
            DropIndex("dbo.MedicinalProductContraindicationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductContraindicationIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductContraindicationIxStr", "ix_String");
            DropIndex("dbo.MedicinalProductContraindicationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductContraindicationIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductContraindicationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicinalProductContraindicationIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicinalProductContraindicationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductContraindicationIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductContraindicationIxQty", "ix_System");
            DropIndex("dbo.MedicinalProductContraindicationIxQty", "ix_Code");
            DropIndex("dbo.MedicinalProductContraindicationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductContraindicationIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductContraindicationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicinalProductContraindicationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicinalProductContraindicationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicinalProductContraindicationRes", "ix_LastUpdated");
            DropIndex("dbo.MedicinalProductContraindicationRes", "ix_IsDeleted");
            DropIndex("dbo.MedicinalProductContraindicationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicinalProductContraindicationRes", "ix_IsCurrent");
            DropIndex("dbo.MedicinalProductAuthorizationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductAuthorizationIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductAuthorizationIxUri", "ix_Uri");
            DropIndex("dbo.MedicinalProductAuthorizationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductAuthorizationIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductAuthorizationIxTok", "ix_System");
            DropIndex("dbo.MedicinalProductAuthorizationIxTok", "ix_Code");
            DropIndex("dbo.MedicinalProductAuthorizationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductAuthorizationIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductAuthorizationIxStr", "ix_String");
            DropIndex("dbo.MedicinalProductAuthorizationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductAuthorizationIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductAuthorizationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicinalProductAuthorizationIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicinalProductAuthorizationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductAuthorizationIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductAuthorizationIxQty", "ix_System");
            DropIndex("dbo.MedicinalProductAuthorizationIxQty", "ix_Code");
            DropIndex("dbo.MedicinalProductAuthorizationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicinalProductAuthorizationIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicinalProductAuthorizationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicinalProductAuthorizationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicinalProductAuthorizationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicinalProductAuthorizationRes", "ix_LastUpdated");
            DropIndex("dbo.MedicinalProductAuthorizationRes", "ix_IsDeleted");
            DropIndex("dbo.MedicinalProductAuthorizationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicinalProductAuthorizationRes", "ix_IsCurrent");
            DropIndex("dbo.MedicationStatementIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicationStatementIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicationStatementIxUri", "ix_Uri");
            DropIndex("dbo.MedicationStatementIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicationStatementIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicationStatementIxTok", "ix_System");
            DropIndex("dbo.MedicationStatementIxTok", "ix_Code");
            DropIndex("dbo.MedicationStatementIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicationStatementIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicationStatementIxStr", "ix_String");
            DropIndex("dbo.MedicationStatementIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicationStatementIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicationStatementIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicationStatementIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicationStatementIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicationStatementIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicationStatementIxQty", "ix_System");
            DropIndex("dbo.MedicationStatementIxQty", "ix_Code");
            DropIndex("dbo.MedicationStatementIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicationStatementIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicationStatementIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicationStatementIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicationStatementRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicationStatementRes", "ix_LastUpdated");
            DropIndex("dbo.MedicationStatementRes", "ix_IsDeleted");
            DropIndex("dbo.MedicationStatementRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicationStatementRes", "ix_IsCurrent");
            DropIndex("dbo.MedicationRequestIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicationRequestIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicationRequestIxUri", "ix_Uri");
            DropIndex("dbo.MedicationRequestIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicationRequestIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicationRequestIxTok", "ix_System");
            DropIndex("dbo.MedicationRequestIxTok", "ix_Code");
            DropIndex("dbo.MedicationRequestIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicationRequestIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicationRequestIxStr", "ix_String");
            DropIndex("dbo.MedicationRequestIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicationRequestIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicationRequestIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicationRequestIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicationRequestIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicationRequestIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicationRequestIxQty", "ix_System");
            DropIndex("dbo.MedicationRequestIxQty", "ix_Code");
            DropIndex("dbo.MedicationRequestIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicationRequestIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicationRequestIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicationRequestIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicationRequestRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicationRequestRes", "ix_LastUpdated");
            DropIndex("dbo.MedicationRequestRes", "ix_IsDeleted");
            DropIndex("dbo.MedicationRequestRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicationRequestRes", "ix_IsCurrent");
            DropIndex("dbo.MedicationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicationIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicationIxUri", "ix_Uri");
            DropIndex("dbo.MedicationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicationIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicationIxTok", "ix_System");
            DropIndex("dbo.MedicationIxTok", "ix_Code");
            DropIndex("dbo.MedicationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicationIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicationIxStr", "ix_String");
            DropIndex("dbo.MedicationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicationIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicationIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicationIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicationIxQty", "ix_System");
            DropIndex("dbo.MedicationIxQty", "ix_Code");
            DropIndex("dbo.MedicationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicationIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicationRes", "ix_LastUpdated");
            DropIndex("dbo.MedicationRes", "ix_IsDeleted");
            DropIndex("dbo.MedicationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicationRes", "ix_IsCurrent");
            DropIndex("dbo.MedicationKnowledgeIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicationKnowledgeIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicationKnowledgeIxUri", "ix_Uri");
            DropIndex("dbo.MedicationKnowledgeIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicationKnowledgeIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicationKnowledgeIxTok", "ix_System");
            DropIndex("dbo.MedicationKnowledgeIxTok", "ix_Code");
            DropIndex("dbo.MedicationKnowledgeIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicationKnowledgeIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicationKnowledgeIxStr", "ix_String");
            DropIndex("dbo.MedicationKnowledgeIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicationKnowledgeIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicationKnowledgeIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicationKnowledgeIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicationKnowledgeIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicationKnowledgeIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicationKnowledgeIxQty", "ix_System");
            DropIndex("dbo.MedicationKnowledgeIxQty", "ix_Code");
            DropIndex("dbo.MedicationKnowledgeIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicationKnowledgeIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicationKnowledgeIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicationKnowledgeIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicationKnowledgeRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicationKnowledgeRes", "ix_LastUpdated");
            DropIndex("dbo.MedicationKnowledgeRes", "ix_IsDeleted");
            DropIndex("dbo.MedicationKnowledgeRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicationKnowledgeRes", "ix_IsCurrent");
            DropIndex("dbo.MedicationDispenseIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicationDispenseIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicationDispenseIxUri", "ix_Uri");
            DropIndex("dbo.MedicationDispenseIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicationDispenseIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicationDispenseIxTok", "ix_System");
            DropIndex("dbo.MedicationDispenseIxTok", "ix_Code");
            DropIndex("dbo.MedicationDispenseIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicationDispenseIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicationDispenseIxStr", "ix_String");
            DropIndex("dbo.MedicationDispenseIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicationDispenseIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicationDispenseIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicationDispenseIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicationDispenseIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicationDispenseIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicationDispenseIxQty", "ix_System");
            DropIndex("dbo.MedicationDispenseIxQty", "ix_Code");
            DropIndex("dbo.MedicationDispenseIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicationDispenseIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicationDispenseIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicationDispenseIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicationDispenseRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicationDispenseRes", "ix_LastUpdated");
            DropIndex("dbo.MedicationDispenseRes", "ix_IsDeleted");
            DropIndex("dbo.MedicationDispenseRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicationDispenseRes", "ix_IsCurrent");
            DropIndex("dbo.MedicationAdministrationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MedicationAdministrationIxUri", "ix_SearchParamId");
            DropIndex("dbo.MedicationAdministrationIxUri", "ix_Uri");
            DropIndex("dbo.MedicationAdministrationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MedicationAdministrationIxTok", "ix_SearchParamId");
            DropIndex("dbo.MedicationAdministrationIxTok", "ix_System");
            DropIndex("dbo.MedicationAdministrationIxTok", "ix_Code");
            DropIndex("dbo.MedicationAdministrationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MedicationAdministrationIxStr", "ix_SearchParamId");
            DropIndex("dbo.MedicationAdministrationIxStr", "ix_String");
            DropIndex("dbo.MedicationAdministrationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MedicationAdministrationIxRef", "ix_SearchParamId");
            DropIndex("dbo.MedicationAdministrationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MedicationAdministrationIxRef", "ix_RefFhirId");
            DropIndex("dbo.MedicationAdministrationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MedicationAdministrationIxQty", "ix_SearchParamId");
            DropIndex("dbo.MedicationAdministrationIxQty", "ix_System");
            DropIndex("dbo.MedicationAdministrationIxQty", "ix_Code");
            DropIndex("dbo.MedicationAdministrationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MedicationAdministrationIxDT", "ix_SearchParamId");
            DropIndex("dbo.MedicationAdministrationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MedicationAdministrationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MedicationAdministrationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MedicationAdministrationRes", "ix_LastUpdated");
            DropIndex("dbo.MedicationAdministrationRes", "ix_IsDeleted");
            DropIndex("dbo.MedicationAdministrationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MedicationAdministrationRes", "ix_IsCurrent");
            DropIndex("dbo.MediaIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MediaIxUri", "ix_SearchParamId");
            DropIndex("dbo.MediaIxUri", "ix_Uri");
            DropIndex("dbo.MediaIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MediaIxTok", "ix_SearchParamId");
            DropIndex("dbo.MediaIxTok", "ix_System");
            DropIndex("dbo.MediaIxTok", "ix_Code");
            DropIndex("dbo.MediaIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MediaIxStr", "ix_SearchParamId");
            DropIndex("dbo.MediaIxStr", "ix_String");
            DropIndex("dbo.MediaIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MediaIxRef", "ix_SearchParamId");
            DropIndex("dbo.MediaIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MediaIxRef", "ix_RefFhirId");
            DropIndex("dbo.MediaIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MediaIxQty", "ix_SearchParamId");
            DropIndex("dbo.MediaIxQty", "ix_System");
            DropIndex("dbo.MediaIxQty", "ix_Code");
            DropIndex("dbo.MediaIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MediaIxDT", "ix_SearchParamId");
            DropIndex("dbo.MediaIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MediaIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MediaRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MediaRes", "ix_LastUpdated");
            DropIndex("dbo.MediaRes", "ix_IsDeleted");
            DropIndex("dbo.MediaRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MediaRes", "ix_IsCurrent");
            DropIndex("dbo.MeasureReportIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MeasureReportIxUri", "ix_SearchParamId");
            DropIndex("dbo.MeasureReportIxUri", "ix_Uri");
            DropIndex("dbo.MeasureReportIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MeasureReportIxTok", "ix_SearchParamId");
            DropIndex("dbo.MeasureReportIxTok", "ix_System");
            DropIndex("dbo.MeasureReportIxTok", "ix_Code");
            DropIndex("dbo.MeasureReportIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MeasureReportIxStr", "ix_SearchParamId");
            DropIndex("dbo.MeasureReportIxStr", "ix_String");
            DropIndex("dbo.MeasureReportIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MeasureReportIxRef", "ix_SearchParamId");
            DropIndex("dbo.MeasureReportIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MeasureReportIxRef", "ix_RefFhirId");
            DropIndex("dbo.MeasureReportIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MeasureReportIxQty", "ix_SearchParamId");
            DropIndex("dbo.MeasureReportIxQty", "ix_System");
            DropIndex("dbo.MeasureReportIxQty", "ix_Code");
            DropIndex("dbo.MeasureReportIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MeasureReportIxDT", "ix_SearchParamId");
            DropIndex("dbo.MeasureReportIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MeasureReportIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MeasureReportRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MeasureReportRes", "ix_LastUpdated");
            DropIndex("dbo.MeasureReportRes", "ix_IsDeleted");
            DropIndex("dbo.MeasureReportRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MeasureReportRes", "ix_IsCurrent");
            DropIndex("dbo.MeasureIxUri", new[] { "ResourceId" });
            DropIndex("dbo.MeasureIxUri", "ix_SearchParamId");
            DropIndex("dbo.MeasureIxUri", "ix_Uri");
            DropIndex("dbo.MeasureIxTok", new[] { "ResourceId" });
            DropIndex("dbo.MeasureIxTok", "ix_SearchParamId");
            DropIndex("dbo.MeasureIxTok", "ix_System");
            DropIndex("dbo.MeasureIxTok", "ix_Code");
            DropIndex("dbo.MeasureIxStr", new[] { "ResourceId" });
            DropIndex("dbo.MeasureIxStr", "ix_SearchParamId");
            DropIndex("dbo.MeasureIxStr", "ix_String");
            DropIndex("dbo.MeasureIxRef", new[] { "ResourceId" });
            DropIndex("dbo.MeasureIxRef", "ix_SearchParamId");
            DropIndex("dbo.MeasureIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.MeasureIxRef", "ix_RefFhirId");
            DropIndex("dbo.MeasureIxQty", new[] { "ResourceId" });
            DropIndex("dbo.MeasureIxQty", "ix_SearchParamId");
            DropIndex("dbo.MeasureIxQty", "ix_System");
            DropIndex("dbo.MeasureIxQty", "ix_Code");
            DropIndex("dbo.MeasureIxDT", new[] { "ResourceId" });
            DropIndex("dbo.MeasureIxDT", "ix_SearchParamId");
            DropIndex("dbo.MeasureIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.MeasureIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.MeasureRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.MeasureRes", "ix_LastUpdated");
            DropIndex("dbo.MeasureRes", "ix_IsDeleted");
            DropIndex("dbo.MeasureRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.MeasureRes", "ix_IsCurrent");
            DropIndex("dbo.LocationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.LocationIxUri", "ix_SearchParamId");
            DropIndex("dbo.LocationIxUri", "ix_Uri");
            DropIndex("dbo.LocationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.LocationIxTok", "ix_SearchParamId");
            DropIndex("dbo.LocationIxTok", "ix_System");
            DropIndex("dbo.LocationIxTok", "ix_Code");
            DropIndex("dbo.LocationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.LocationIxStr", "ix_SearchParamId");
            DropIndex("dbo.LocationIxStr", "ix_String");
            DropIndex("dbo.LocationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.LocationIxRef", "ix_SearchParamId");
            DropIndex("dbo.LocationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.LocationIxRef", "ix_RefFhirId");
            DropIndex("dbo.LocationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.LocationIxQty", "ix_SearchParamId");
            DropIndex("dbo.LocationIxQty", "ix_System");
            DropIndex("dbo.LocationIxQty", "ix_Code");
            DropIndex("dbo.LocationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.LocationIxDT", "ix_SearchParamId");
            DropIndex("dbo.LocationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.LocationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.LocationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.LocationRes", "ix_LastUpdated");
            DropIndex("dbo.LocationRes", "ix_IsDeleted");
            DropIndex("dbo.LocationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.LocationRes", "ix_IsCurrent");
            DropIndex("dbo.ListIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ListIxUri", "ix_SearchParamId");
            DropIndex("dbo.ListIxUri", "ix_Uri");
            DropIndex("dbo.ListIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ListIxTok", "ix_SearchParamId");
            DropIndex("dbo.ListIxTok", "ix_System");
            DropIndex("dbo.ListIxTok", "ix_Code");
            DropIndex("dbo.ListIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ListIxStr", "ix_SearchParamId");
            DropIndex("dbo.ListIxStr", "ix_String");
            DropIndex("dbo.ListIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ListIxRef", "ix_SearchParamId");
            DropIndex("dbo.ListIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ListIxRef", "ix_RefFhirId");
            DropIndex("dbo.ListIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ListIxQty", "ix_SearchParamId");
            DropIndex("dbo.ListIxQty", "ix_System");
            DropIndex("dbo.ListIxQty", "ix_Code");
            DropIndex("dbo.ListIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ListIxDT", "ix_SearchParamId");
            DropIndex("dbo.ListIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ListIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ListRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ListRes", "ix_LastUpdated");
            DropIndex("dbo.ListRes", "ix_IsDeleted");
            DropIndex("dbo.ListRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ListRes", "ix_IsCurrent");
            DropIndex("dbo.LinkageIxUri", new[] { "ResourceId" });
            DropIndex("dbo.LinkageIxUri", "ix_SearchParamId");
            DropIndex("dbo.LinkageIxUri", "ix_Uri");
            DropIndex("dbo.LinkageIxTok", new[] { "ResourceId" });
            DropIndex("dbo.LinkageIxTok", "ix_SearchParamId");
            DropIndex("dbo.LinkageIxTok", "ix_System");
            DropIndex("dbo.LinkageIxTok", "ix_Code");
            DropIndex("dbo.LinkageIxStr", new[] { "ResourceId" });
            DropIndex("dbo.LinkageIxStr", "ix_SearchParamId");
            DropIndex("dbo.LinkageIxStr", "ix_String");
            DropIndex("dbo.LinkageIxRef", new[] { "ResourceId" });
            DropIndex("dbo.LinkageIxRef", "ix_SearchParamId");
            DropIndex("dbo.LinkageIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.LinkageIxRef", "ix_RefFhirId");
            DropIndex("dbo.LinkageIxQty", new[] { "ResourceId" });
            DropIndex("dbo.LinkageIxQty", "ix_SearchParamId");
            DropIndex("dbo.LinkageIxQty", "ix_System");
            DropIndex("dbo.LinkageIxQty", "ix_Code");
            DropIndex("dbo.LinkageIxDT", new[] { "ResourceId" });
            DropIndex("dbo.LinkageIxDT", "ix_SearchParamId");
            DropIndex("dbo.LinkageIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.LinkageIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.LinkageRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.LinkageRes", "ix_LastUpdated");
            DropIndex("dbo.LinkageRes", "ix_IsDeleted");
            DropIndex("dbo.LinkageRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.LinkageRes", "ix_IsCurrent");
            DropIndex("dbo.LibraryIxUri", new[] { "ResourceId" });
            DropIndex("dbo.LibraryIxUri", "ix_SearchParamId");
            DropIndex("dbo.LibraryIxUri", "ix_Uri");
            DropIndex("dbo.LibraryIxTok", new[] { "ResourceId" });
            DropIndex("dbo.LibraryIxTok", "ix_SearchParamId");
            DropIndex("dbo.LibraryIxTok", "ix_System");
            DropIndex("dbo.LibraryIxTok", "ix_Code");
            DropIndex("dbo.LibraryIxStr", new[] { "ResourceId" });
            DropIndex("dbo.LibraryIxStr", "ix_SearchParamId");
            DropIndex("dbo.LibraryIxStr", "ix_String");
            DropIndex("dbo.LibraryIxRef", new[] { "ResourceId" });
            DropIndex("dbo.LibraryIxRef", "ix_SearchParamId");
            DropIndex("dbo.LibraryIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.LibraryIxRef", "ix_RefFhirId");
            DropIndex("dbo.LibraryIxQty", new[] { "ResourceId" });
            DropIndex("dbo.LibraryIxQty", "ix_SearchParamId");
            DropIndex("dbo.LibraryIxQty", "ix_System");
            DropIndex("dbo.LibraryIxQty", "ix_Code");
            DropIndex("dbo.LibraryIxDT", new[] { "ResourceId" });
            DropIndex("dbo.LibraryIxDT", "ix_SearchParamId");
            DropIndex("dbo.LibraryIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.LibraryIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.LibraryRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.LibraryRes", "ix_LastUpdated");
            DropIndex("dbo.LibraryRes", "ix_IsDeleted");
            DropIndex("dbo.LibraryRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.LibraryRes", "ix_IsCurrent");
            DropIndex("dbo.InvoiceIxUri", new[] { "ResourceId" });
            DropIndex("dbo.InvoiceIxUri", "ix_SearchParamId");
            DropIndex("dbo.InvoiceIxUri", "ix_Uri");
            DropIndex("dbo.InvoiceIxTok", new[] { "ResourceId" });
            DropIndex("dbo.InvoiceIxTok", "ix_SearchParamId");
            DropIndex("dbo.InvoiceIxTok", "ix_System");
            DropIndex("dbo.InvoiceIxTok", "ix_Code");
            DropIndex("dbo.InvoiceIxStr", new[] { "ResourceId" });
            DropIndex("dbo.InvoiceIxStr", "ix_SearchParamId");
            DropIndex("dbo.InvoiceIxStr", "ix_String");
            DropIndex("dbo.InvoiceIxRef", new[] { "ResourceId" });
            DropIndex("dbo.InvoiceIxRef", "ix_SearchParamId");
            DropIndex("dbo.InvoiceIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.InvoiceIxRef", "ix_RefFhirId");
            DropIndex("dbo.InvoiceIxQty", new[] { "ResourceId" });
            DropIndex("dbo.InvoiceIxQty", "ix_SearchParamId");
            DropIndex("dbo.InvoiceIxQty", "ix_System");
            DropIndex("dbo.InvoiceIxQty", "ix_Code");
            DropIndex("dbo.InvoiceIxDT", new[] { "ResourceId" });
            DropIndex("dbo.InvoiceIxDT", "ix_SearchParamId");
            DropIndex("dbo.InvoiceIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.InvoiceIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.InvoiceRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.InvoiceRes", "ix_LastUpdated");
            DropIndex("dbo.InvoiceRes", "ix_IsDeleted");
            DropIndex("dbo.InvoiceRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.InvoiceRes", "ix_IsCurrent");
            DropIndex("dbo.InsurancePlanIxUri", new[] { "ResourceId" });
            DropIndex("dbo.InsurancePlanIxUri", "ix_SearchParamId");
            DropIndex("dbo.InsurancePlanIxUri", "ix_Uri");
            DropIndex("dbo.InsurancePlanIxTok", new[] { "ResourceId" });
            DropIndex("dbo.InsurancePlanIxTok", "ix_SearchParamId");
            DropIndex("dbo.InsurancePlanIxTok", "ix_System");
            DropIndex("dbo.InsurancePlanIxTok", "ix_Code");
            DropIndex("dbo.InsurancePlanIxStr", new[] { "ResourceId" });
            DropIndex("dbo.InsurancePlanIxStr", "ix_SearchParamId");
            DropIndex("dbo.InsurancePlanIxStr", "ix_String");
            DropIndex("dbo.InsurancePlanIxRef", new[] { "ResourceId" });
            DropIndex("dbo.InsurancePlanIxRef", "ix_SearchParamId");
            DropIndex("dbo.InsurancePlanIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.InsurancePlanIxRef", "ix_RefFhirId");
            DropIndex("dbo.InsurancePlanIxQty", new[] { "ResourceId" });
            DropIndex("dbo.InsurancePlanIxQty", "ix_SearchParamId");
            DropIndex("dbo.InsurancePlanIxQty", "ix_System");
            DropIndex("dbo.InsurancePlanIxQty", "ix_Code");
            DropIndex("dbo.InsurancePlanIxDT", new[] { "ResourceId" });
            DropIndex("dbo.InsurancePlanIxDT", "ix_SearchParamId");
            DropIndex("dbo.InsurancePlanIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.InsurancePlanIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.InsurancePlanRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.InsurancePlanRes", "ix_LastUpdated");
            DropIndex("dbo.InsurancePlanRes", "ix_IsDeleted");
            DropIndex("dbo.InsurancePlanRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.InsurancePlanRes", "ix_IsCurrent");
            DropIndex("dbo.ImplementationGuideIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ImplementationGuideIxUri", "ix_SearchParamId");
            DropIndex("dbo.ImplementationGuideIxUri", "ix_Uri");
            DropIndex("dbo.ImplementationGuideIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ImplementationGuideIxTok", "ix_SearchParamId");
            DropIndex("dbo.ImplementationGuideIxTok", "ix_System");
            DropIndex("dbo.ImplementationGuideIxTok", "ix_Code");
            DropIndex("dbo.ImplementationGuideIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ImplementationGuideIxStr", "ix_SearchParamId");
            DropIndex("dbo.ImplementationGuideIxStr", "ix_String");
            DropIndex("dbo.ImplementationGuideIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ImplementationGuideIxRef", "ix_SearchParamId");
            DropIndex("dbo.ImplementationGuideIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ImplementationGuideIxRef", "ix_RefFhirId");
            DropIndex("dbo.ImplementationGuideIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ImplementationGuideIxQty", "ix_SearchParamId");
            DropIndex("dbo.ImplementationGuideIxQty", "ix_System");
            DropIndex("dbo.ImplementationGuideIxQty", "ix_Code");
            DropIndex("dbo.ImplementationGuideIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ImplementationGuideIxDT", "ix_SearchParamId");
            DropIndex("dbo.ImplementationGuideIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ImplementationGuideIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ImplementationGuideRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ImplementationGuideRes", "ix_LastUpdated");
            DropIndex("dbo.ImplementationGuideRes", "ix_IsDeleted");
            DropIndex("dbo.ImplementationGuideRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ImplementationGuideRes", "ix_IsCurrent");
            DropIndex("dbo.ImmunizationRecommendationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationRecommendationIxUri", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationRecommendationIxUri", "ix_Uri");
            DropIndex("dbo.ImmunizationRecommendationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationRecommendationIxTok", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationRecommendationIxTok", "ix_System");
            DropIndex("dbo.ImmunizationRecommendationIxTok", "ix_Code");
            DropIndex("dbo.ImmunizationRecommendationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationRecommendationIxStr", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationRecommendationIxStr", "ix_String");
            DropIndex("dbo.ImmunizationRecommendationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationRecommendationIxRef", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationRecommendationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ImmunizationRecommendationIxRef", "ix_RefFhirId");
            DropIndex("dbo.ImmunizationRecommendationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationRecommendationIxQty", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationRecommendationIxQty", "ix_System");
            DropIndex("dbo.ImmunizationRecommendationIxQty", "ix_Code");
            DropIndex("dbo.ImmunizationRecommendationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationRecommendationIxDT", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationRecommendationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ImmunizationRecommendationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ImmunizationRecommendationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ImmunizationRecommendationRes", "ix_LastUpdated");
            DropIndex("dbo.ImmunizationRecommendationRes", "ix_IsDeleted");
            DropIndex("dbo.ImmunizationRecommendationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ImmunizationRecommendationRes", "ix_IsCurrent");
            DropIndex("dbo.ImmunizationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationIxUri", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationIxUri", "ix_Uri");
            DropIndex("dbo.ImmunizationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationIxTok", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationIxTok", "ix_System");
            DropIndex("dbo.ImmunizationIxTok", "ix_Code");
            DropIndex("dbo.ImmunizationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationIxStr", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationIxStr", "ix_String");
            DropIndex("dbo.ImmunizationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationIxRef", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ImmunizationIxRef", "ix_RefFhirId");
            DropIndex("dbo.ImmunizationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationIxQty", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationIxQty", "ix_System");
            DropIndex("dbo.ImmunizationIxQty", "ix_Code");
            DropIndex("dbo.ImmunizationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationIxDT", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ImmunizationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ImmunizationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ImmunizationRes", "ix_LastUpdated");
            DropIndex("dbo.ImmunizationRes", "ix_IsDeleted");
            DropIndex("dbo.ImmunizationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ImmunizationRes", "ix_IsCurrent");
            DropIndex("dbo.ImmunizationEvaluationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationEvaluationIxUri", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationEvaluationIxUri", "ix_Uri");
            DropIndex("dbo.ImmunizationEvaluationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationEvaluationIxTok", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationEvaluationIxTok", "ix_System");
            DropIndex("dbo.ImmunizationEvaluationIxTok", "ix_Code");
            DropIndex("dbo.ImmunizationEvaluationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationEvaluationIxStr", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationEvaluationIxStr", "ix_String");
            DropIndex("dbo.ImmunizationEvaluationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationEvaluationIxRef", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationEvaluationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ImmunizationEvaluationIxRef", "ix_RefFhirId");
            DropIndex("dbo.ImmunizationEvaluationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationEvaluationIxQty", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationEvaluationIxQty", "ix_System");
            DropIndex("dbo.ImmunizationEvaluationIxQty", "ix_Code");
            DropIndex("dbo.ImmunizationEvaluationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ImmunizationEvaluationIxDT", "ix_SearchParamId");
            DropIndex("dbo.ImmunizationEvaluationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ImmunizationEvaluationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ImmunizationEvaluationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ImmunizationEvaluationRes", "ix_LastUpdated");
            DropIndex("dbo.ImmunizationEvaluationRes", "ix_IsDeleted");
            DropIndex("dbo.ImmunizationEvaluationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ImmunizationEvaluationRes", "ix_IsCurrent");
            DropIndex("dbo.ImagingStudyIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ImagingStudyIxUri", "ix_SearchParamId");
            DropIndex("dbo.ImagingStudyIxUri", "ix_Uri");
            DropIndex("dbo.ImagingStudyIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ImagingStudyIxTok", "ix_SearchParamId");
            DropIndex("dbo.ImagingStudyIxTok", "ix_System");
            DropIndex("dbo.ImagingStudyIxTok", "ix_Code");
            DropIndex("dbo.ImagingStudyIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ImagingStudyIxStr", "ix_SearchParamId");
            DropIndex("dbo.ImagingStudyIxStr", "ix_String");
            DropIndex("dbo.ImagingStudyIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ImagingStudyIxRef", "ix_SearchParamId");
            DropIndex("dbo.ImagingStudyIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ImagingStudyIxRef", "ix_RefFhirId");
            DropIndex("dbo.ImagingStudyIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ImagingStudyIxQty", "ix_SearchParamId");
            DropIndex("dbo.ImagingStudyIxQty", "ix_System");
            DropIndex("dbo.ImagingStudyIxQty", "ix_Code");
            DropIndex("dbo.ImagingStudyIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ImagingStudyIxDT", "ix_SearchParamId");
            DropIndex("dbo.ImagingStudyIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ImagingStudyIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ImagingStudyRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ImagingStudyRes", "ix_LastUpdated");
            DropIndex("dbo.ImagingStudyRes", "ix_IsDeleted");
            DropIndex("dbo.ImagingStudyRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ImagingStudyRes", "ix_IsCurrent");
            DropIndex("dbo.HealthcareServiceIxUri", new[] { "ResourceId" });
            DropIndex("dbo.HealthcareServiceIxUri", "ix_SearchParamId");
            DropIndex("dbo.HealthcareServiceIxUri", "ix_Uri");
            DropIndex("dbo.HealthcareServiceIxTok", new[] { "ResourceId" });
            DropIndex("dbo.HealthcareServiceIxTok", "ix_SearchParamId");
            DropIndex("dbo.HealthcareServiceIxTok", "ix_System");
            DropIndex("dbo.HealthcareServiceIxTok", "ix_Code");
            DropIndex("dbo.HealthcareServiceIxStr", new[] { "ResourceId" });
            DropIndex("dbo.HealthcareServiceIxStr", "ix_SearchParamId");
            DropIndex("dbo.HealthcareServiceIxStr", "ix_String");
            DropIndex("dbo.HealthcareServiceIxRef", new[] { "ResourceId" });
            DropIndex("dbo.HealthcareServiceIxRef", "ix_SearchParamId");
            DropIndex("dbo.HealthcareServiceIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.HealthcareServiceIxRef", "ix_RefFhirId");
            DropIndex("dbo.HealthcareServiceIxQty", new[] { "ResourceId" });
            DropIndex("dbo.HealthcareServiceIxQty", "ix_SearchParamId");
            DropIndex("dbo.HealthcareServiceIxQty", "ix_System");
            DropIndex("dbo.HealthcareServiceIxQty", "ix_Code");
            DropIndex("dbo.HealthcareServiceIxDT", new[] { "ResourceId" });
            DropIndex("dbo.HealthcareServiceIxDT", "ix_SearchParamId");
            DropIndex("dbo.HealthcareServiceIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.HealthcareServiceIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.HealthcareServiceRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.HealthcareServiceRes", "ix_LastUpdated");
            DropIndex("dbo.HealthcareServiceRes", "ix_IsDeleted");
            DropIndex("dbo.HealthcareServiceRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.HealthcareServiceRes", "ix_IsCurrent");
            DropIndex("dbo.GuidanceResponseIxUri", new[] { "ResourceId" });
            DropIndex("dbo.GuidanceResponseIxUri", "ix_SearchParamId");
            DropIndex("dbo.GuidanceResponseIxUri", "ix_Uri");
            DropIndex("dbo.GuidanceResponseIxTok", new[] { "ResourceId" });
            DropIndex("dbo.GuidanceResponseIxTok", "ix_SearchParamId");
            DropIndex("dbo.GuidanceResponseIxTok", "ix_System");
            DropIndex("dbo.GuidanceResponseIxTok", "ix_Code");
            DropIndex("dbo.GuidanceResponseIxStr", new[] { "ResourceId" });
            DropIndex("dbo.GuidanceResponseIxStr", "ix_SearchParamId");
            DropIndex("dbo.GuidanceResponseIxStr", "ix_String");
            DropIndex("dbo.GuidanceResponseIxRef", new[] { "ResourceId" });
            DropIndex("dbo.GuidanceResponseIxRef", "ix_SearchParamId");
            DropIndex("dbo.GuidanceResponseIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.GuidanceResponseIxRef", "ix_RefFhirId");
            DropIndex("dbo.GuidanceResponseIxQty", new[] { "ResourceId" });
            DropIndex("dbo.GuidanceResponseIxQty", "ix_SearchParamId");
            DropIndex("dbo.GuidanceResponseIxQty", "ix_System");
            DropIndex("dbo.GuidanceResponseIxQty", "ix_Code");
            DropIndex("dbo.GuidanceResponseIxDT", new[] { "ResourceId" });
            DropIndex("dbo.GuidanceResponseIxDT", "ix_SearchParamId");
            DropIndex("dbo.GuidanceResponseIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.GuidanceResponseIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.GuidanceResponseRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.GuidanceResponseRes", "ix_LastUpdated");
            DropIndex("dbo.GuidanceResponseRes", "ix_IsDeleted");
            DropIndex("dbo.GuidanceResponseRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.GuidanceResponseRes", "ix_IsCurrent");
            DropIndex("dbo.GroupIxUri", new[] { "ResourceId" });
            DropIndex("dbo.GroupIxUri", "ix_SearchParamId");
            DropIndex("dbo.GroupIxUri", "ix_Uri");
            DropIndex("dbo.GroupIxTok", new[] { "ResourceId" });
            DropIndex("dbo.GroupIxTok", "ix_SearchParamId");
            DropIndex("dbo.GroupIxTok", "ix_System");
            DropIndex("dbo.GroupIxTok", "ix_Code");
            DropIndex("dbo.GroupIxStr", new[] { "ResourceId" });
            DropIndex("dbo.GroupIxStr", "ix_SearchParamId");
            DropIndex("dbo.GroupIxStr", "ix_String");
            DropIndex("dbo.GroupIxRef", new[] { "ResourceId" });
            DropIndex("dbo.GroupIxRef", "ix_SearchParamId");
            DropIndex("dbo.GroupIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.GroupIxRef", "ix_RefFhirId");
            DropIndex("dbo.GroupIxQty", new[] { "ResourceId" });
            DropIndex("dbo.GroupIxQty", "ix_SearchParamId");
            DropIndex("dbo.GroupIxQty", "ix_System");
            DropIndex("dbo.GroupIxQty", "ix_Code");
            DropIndex("dbo.GroupIxDT", new[] { "ResourceId" });
            DropIndex("dbo.GroupIxDT", "ix_SearchParamId");
            DropIndex("dbo.GroupIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.GroupIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.GroupRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.GroupRes", "ix_LastUpdated");
            DropIndex("dbo.GroupRes", "ix_IsDeleted");
            DropIndex("dbo.GroupRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.GroupRes", "ix_IsCurrent");
            DropIndex("dbo.GraphDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.GraphDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.GraphDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.GraphDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.GraphDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.GraphDefinitionIxTok", "ix_System");
            DropIndex("dbo.GraphDefinitionIxTok", "ix_Code");
            DropIndex("dbo.GraphDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.GraphDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.GraphDefinitionIxStr", "ix_String");
            DropIndex("dbo.GraphDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.GraphDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.GraphDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.GraphDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.GraphDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.GraphDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.GraphDefinitionIxQty", "ix_System");
            DropIndex("dbo.GraphDefinitionIxQty", "ix_Code");
            DropIndex("dbo.GraphDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.GraphDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.GraphDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.GraphDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.GraphDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.GraphDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.GraphDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.GraphDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.GraphDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.GoalIxUri", new[] { "ResourceId" });
            DropIndex("dbo.GoalIxUri", "ix_SearchParamId");
            DropIndex("dbo.GoalIxUri", "ix_Uri");
            DropIndex("dbo.GoalIxTok", new[] { "ResourceId" });
            DropIndex("dbo.GoalIxTok", "ix_SearchParamId");
            DropIndex("dbo.GoalIxTok", "ix_System");
            DropIndex("dbo.GoalIxTok", "ix_Code");
            DropIndex("dbo.GoalIxStr", new[] { "ResourceId" });
            DropIndex("dbo.GoalIxStr", "ix_SearchParamId");
            DropIndex("dbo.GoalIxStr", "ix_String");
            DropIndex("dbo.GoalIxRef", new[] { "ResourceId" });
            DropIndex("dbo.GoalIxRef", "ix_SearchParamId");
            DropIndex("dbo.GoalIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.GoalIxRef", "ix_RefFhirId");
            DropIndex("dbo.GoalIxQty", new[] { "ResourceId" });
            DropIndex("dbo.GoalIxQty", "ix_SearchParamId");
            DropIndex("dbo.GoalIxQty", "ix_System");
            DropIndex("dbo.GoalIxQty", "ix_Code");
            DropIndex("dbo.GoalIxDT", new[] { "ResourceId" });
            DropIndex("dbo.GoalIxDT", "ix_SearchParamId");
            DropIndex("dbo.GoalIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.GoalIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.GoalRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.GoalRes", "ix_LastUpdated");
            DropIndex("dbo.GoalRes", "ix_IsDeleted");
            DropIndex("dbo.GoalRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.GoalRes", "ix_IsCurrent");
            DropIndex("dbo.FlagIxUri", new[] { "ResourceId" });
            DropIndex("dbo.FlagIxUri", "ix_SearchParamId");
            DropIndex("dbo.FlagIxUri", "ix_Uri");
            DropIndex("dbo.FlagIxTok", new[] { "ResourceId" });
            DropIndex("dbo.FlagIxTok", "ix_SearchParamId");
            DropIndex("dbo.FlagIxTok", "ix_System");
            DropIndex("dbo.FlagIxTok", "ix_Code");
            DropIndex("dbo.FlagIxStr", new[] { "ResourceId" });
            DropIndex("dbo.FlagIxStr", "ix_SearchParamId");
            DropIndex("dbo.FlagIxStr", "ix_String");
            DropIndex("dbo.FlagIxRef", new[] { "ResourceId" });
            DropIndex("dbo.FlagIxRef", "ix_SearchParamId");
            DropIndex("dbo.FlagIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.FlagIxRef", "ix_RefFhirId");
            DropIndex("dbo.FlagIxQty", new[] { "ResourceId" });
            DropIndex("dbo.FlagIxQty", "ix_SearchParamId");
            DropIndex("dbo.FlagIxQty", "ix_System");
            DropIndex("dbo.FlagIxQty", "ix_Code");
            DropIndex("dbo.FlagIxDT", new[] { "ResourceId" });
            DropIndex("dbo.FlagIxDT", "ix_SearchParamId");
            DropIndex("dbo.FlagIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.FlagIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.FlagRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.FlagRes", "ix_LastUpdated");
            DropIndex("dbo.FlagRes", "ix_IsDeleted");
            DropIndex("dbo.FlagRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.FlagRes", "ix_IsCurrent");
            DropIndex("dbo.FamilyMemberHistoryIxUri", new[] { "ResourceId" });
            DropIndex("dbo.FamilyMemberHistoryIxUri", "ix_SearchParamId");
            DropIndex("dbo.FamilyMemberHistoryIxUri", "ix_Uri");
            DropIndex("dbo.FamilyMemberHistoryIxTok", new[] { "ResourceId" });
            DropIndex("dbo.FamilyMemberHistoryIxTok", "ix_SearchParamId");
            DropIndex("dbo.FamilyMemberHistoryIxTok", "ix_System");
            DropIndex("dbo.FamilyMemberHistoryIxTok", "ix_Code");
            DropIndex("dbo.FamilyMemberHistoryIxStr", new[] { "ResourceId" });
            DropIndex("dbo.FamilyMemberHistoryIxStr", "ix_SearchParamId");
            DropIndex("dbo.FamilyMemberHistoryIxStr", "ix_String");
            DropIndex("dbo.FamilyMemberHistoryIxRef", new[] { "ResourceId" });
            DropIndex("dbo.FamilyMemberHistoryIxRef", "ix_SearchParamId");
            DropIndex("dbo.FamilyMemberHistoryIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.FamilyMemberHistoryIxRef", "ix_RefFhirId");
            DropIndex("dbo.FamilyMemberHistoryIxQty", new[] { "ResourceId" });
            DropIndex("dbo.FamilyMemberHistoryIxQty", "ix_SearchParamId");
            DropIndex("dbo.FamilyMemberHistoryIxQty", "ix_System");
            DropIndex("dbo.FamilyMemberHistoryIxQty", "ix_Code");
            DropIndex("dbo.FamilyMemberHistoryIxDT", new[] { "ResourceId" });
            DropIndex("dbo.FamilyMemberHistoryIxDT", "ix_SearchParamId");
            DropIndex("dbo.FamilyMemberHistoryIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.FamilyMemberHistoryIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.FamilyMemberHistoryRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.FamilyMemberHistoryRes", "ix_LastUpdated");
            DropIndex("dbo.FamilyMemberHistoryRes", "ix_IsDeleted");
            DropIndex("dbo.FamilyMemberHistoryRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.FamilyMemberHistoryRes", "ix_IsCurrent");
            DropIndex("dbo.ExplanationOfBenefitIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ExplanationOfBenefitIxUri", "ix_SearchParamId");
            DropIndex("dbo.ExplanationOfBenefitIxUri", "ix_Uri");
            DropIndex("dbo.ExplanationOfBenefitIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ExplanationOfBenefitIxTok", "ix_SearchParamId");
            DropIndex("dbo.ExplanationOfBenefitIxTok", "ix_System");
            DropIndex("dbo.ExplanationOfBenefitIxTok", "ix_Code");
            DropIndex("dbo.ExplanationOfBenefitIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ExplanationOfBenefitIxStr", "ix_SearchParamId");
            DropIndex("dbo.ExplanationOfBenefitIxStr", "ix_String");
            DropIndex("dbo.ExplanationOfBenefitIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ExplanationOfBenefitIxRef", "ix_SearchParamId");
            DropIndex("dbo.ExplanationOfBenefitIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ExplanationOfBenefitIxRef", "ix_RefFhirId");
            DropIndex("dbo.ExplanationOfBenefitIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ExplanationOfBenefitIxQty", "ix_SearchParamId");
            DropIndex("dbo.ExplanationOfBenefitIxQty", "ix_System");
            DropIndex("dbo.ExplanationOfBenefitIxQty", "ix_Code");
            DropIndex("dbo.ExplanationOfBenefitIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ExplanationOfBenefitIxDT", "ix_SearchParamId");
            DropIndex("dbo.ExplanationOfBenefitIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ExplanationOfBenefitIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ExplanationOfBenefitRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ExplanationOfBenefitRes", "ix_LastUpdated");
            DropIndex("dbo.ExplanationOfBenefitRes", "ix_IsDeleted");
            DropIndex("dbo.ExplanationOfBenefitRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ExplanationOfBenefitRes", "ix_IsCurrent");
            DropIndex("dbo.ExampleScenarioIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ExampleScenarioIxUri", "ix_SearchParamId");
            DropIndex("dbo.ExampleScenarioIxUri", "ix_Uri");
            DropIndex("dbo.ExampleScenarioIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ExampleScenarioIxTok", "ix_SearchParamId");
            DropIndex("dbo.ExampleScenarioIxTok", "ix_System");
            DropIndex("dbo.ExampleScenarioIxTok", "ix_Code");
            DropIndex("dbo.ExampleScenarioIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ExampleScenarioIxStr", "ix_SearchParamId");
            DropIndex("dbo.ExampleScenarioIxStr", "ix_String");
            DropIndex("dbo.ExampleScenarioIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ExampleScenarioIxRef", "ix_SearchParamId");
            DropIndex("dbo.ExampleScenarioIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ExampleScenarioIxRef", "ix_RefFhirId");
            DropIndex("dbo.ExampleScenarioIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ExampleScenarioIxQty", "ix_SearchParamId");
            DropIndex("dbo.ExampleScenarioIxQty", "ix_System");
            DropIndex("dbo.ExampleScenarioIxQty", "ix_Code");
            DropIndex("dbo.ExampleScenarioIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ExampleScenarioIxDT", "ix_SearchParamId");
            DropIndex("dbo.ExampleScenarioIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ExampleScenarioIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ExampleScenarioRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ExampleScenarioRes", "ix_LastUpdated");
            DropIndex("dbo.ExampleScenarioRes", "ix_IsDeleted");
            DropIndex("dbo.ExampleScenarioRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ExampleScenarioRes", "ix_IsCurrent");
            DropIndex("dbo.EvidenceVariableIxUri", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceVariableIxUri", "ix_SearchParamId");
            DropIndex("dbo.EvidenceVariableIxUri", "ix_Uri");
            DropIndex("dbo.EvidenceVariableIxTok", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceVariableIxTok", "ix_SearchParamId");
            DropIndex("dbo.EvidenceVariableIxTok", "ix_System");
            DropIndex("dbo.EvidenceVariableIxTok", "ix_Code");
            DropIndex("dbo.EvidenceVariableIxStr", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceVariableIxStr", "ix_SearchParamId");
            DropIndex("dbo.EvidenceVariableIxStr", "ix_String");
            DropIndex("dbo.EvidenceVariableIxRef", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceVariableIxRef", "ix_SearchParamId");
            DropIndex("dbo.EvidenceVariableIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.EvidenceVariableIxRef", "ix_RefFhirId");
            DropIndex("dbo.EvidenceVariableIxQty", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceVariableIxQty", "ix_SearchParamId");
            DropIndex("dbo.EvidenceVariableIxQty", "ix_System");
            DropIndex("dbo.EvidenceVariableIxQty", "ix_Code");
            DropIndex("dbo.EvidenceVariableIxDT", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceVariableIxDT", "ix_SearchParamId");
            DropIndex("dbo.EvidenceVariableIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.EvidenceVariableIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.EvidenceVariableRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.EvidenceVariableRes", "ix_LastUpdated");
            DropIndex("dbo.EvidenceVariableRes", "ix_IsDeleted");
            DropIndex("dbo.EvidenceVariableRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.EvidenceVariableRes", "ix_IsCurrent");
            DropIndex("dbo.EvidenceIxUri", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceIxUri", "ix_SearchParamId");
            DropIndex("dbo.EvidenceIxUri", "ix_Uri");
            DropIndex("dbo.EvidenceIxTok", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceIxTok", "ix_SearchParamId");
            DropIndex("dbo.EvidenceIxTok", "ix_System");
            DropIndex("dbo.EvidenceIxTok", "ix_Code");
            DropIndex("dbo.EvidenceIxStr", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceIxStr", "ix_SearchParamId");
            DropIndex("dbo.EvidenceIxStr", "ix_String");
            DropIndex("dbo.EvidenceIxRef", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceIxRef", "ix_SearchParamId");
            DropIndex("dbo.EvidenceIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.EvidenceIxRef", "ix_RefFhirId");
            DropIndex("dbo.EvidenceIxQty", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceIxQty", "ix_SearchParamId");
            DropIndex("dbo.EvidenceIxQty", "ix_System");
            DropIndex("dbo.EvidenceIxQty", "ix_Code");
            DropIndex("dbo.EvidenceIxDT", new[] { "ResourceId" });
            DropIndex("dbo.EvidenceIxDT", "ix_SearchParamId");
            DropIndex("dbo.EvidenceIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.EvidenceIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.EvidenceRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.EvidenceRes", "ix_LastUpdated");
            DropIndex("dbo.EvidenceRes", "ix_IsDeleted");
            DropIndex("dbo.EvidenceRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.EvidenceRes", "ix_IsCurrent");
            DropIndex("dbo.EventDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.EventDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.EventDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.EventDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.EventDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.EventDefinitionIxTok", "ix_System");
            DropIndex("dbo.EventDefinitionIxTok", "ix_Code");
            DropIndex("dbo.EventDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.EventDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.EventDefinitionIxStr", "ix_String");
            DropIndex("dbo.EventDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.EventDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.EventDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.EventDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.EventDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.EventDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.EventDefinitionIxQty", "ix_System");
            DropIndex("dbo.EventDefinitionIxQty", "ix_Code");
            DropIndex("dbo.EventDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.EventDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.EventDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.EventDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.EventDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.EventDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.EventDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.EventDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.EventDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.EpisodeOfCareIxUri", new[] { "ResourceId" });
            DropIndex("dbo.EpisodeOfCareIxUri", "ix_SearchParamId");
            DropIndex("dbo.EpisodeOfCareIxUri", "ix_Uri");
            DropIndex("dbo.EpisodeOfCareIxTok", new[] { "ResourceId" });
            DropIndex("dbo.EpisodeOfCareIxTok", "ix_SearchParamId");
            DropIndex("dbo.EpisodeOfCareIxTok", "ix_System");
            DropIndex("dbo.EpisodeOfCareIxTok", "ix_Code");
            DropIndex("dbo.EpisodeOfCareIxStr", new[] { "ResourceId" });
            DropIndex("dbo.EpisodeOfCareIxStr", "ix_SearchParamId");
            DropIndex("dbo.EpisodeOfCareIxStr", "ix_String");
            DropIndex("dbo.EpisodeOfCareIxRef", new[] { "ResourceId" });
            DropIndex("dbo.EpisodeOfCareIxRef", "ix_SearchParamId");
            DropIndex("dbo.EpisodeOfCareIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.EpisodeOfCareIxRef", "ix_RefFhirId");
            DropIndex("dbo.EpisodeOfCareIxQty", new[] { "ResourceId" });
            DropIndex("dbo.EpisodeOfCareIxQty", "ix_SearchParamId");
            DropIndex("dbo.EpisodeOfCareIxQty", "ix_System");
            DropIndex("dbo.EpisodeOfCareIxQty", "ix_Code");
            DropIndex("dbo.EpisodeOfCareIxDT", new[] { "ResourceId" });
            DropIndex("dbo.EpisodeOfCareIxDT", "ix_SearchParamId");
            DropIndex("dbo.EpisodeOfCareIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.EpisodeOfCareIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.EpisodeOfCareRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.EpisodeOfCareRes", "ix_LastUpdated");
            DropIndex("dbo.EpisodeOfCareRes", "ix_IsDeleted");
            DropIndex("dbo.EpisodeOfCareRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.EpisodeOfCareRes", "ix_IsCurrent");
            DropIndex("dbo.EnrollmentResponseIxUri", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentResponseIxUri", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentResponseIxUri", "ix_Uri");
            DropIndex("dbo.EnrollmentResponseIxTok", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentResponseIxTok", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentResponseIxTok", "ix_System");
            DropIndex("dbo.EnrollmentResponseIxTok", "ix_Code");
            DropIndex("dbo.EnrollmentResponseIxStr", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentResponseIxStr", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentResponseIxStr", "ix_String");
            DropIndex("dbo.EnrollmentResponseIxRef", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentResponseIxRef", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentResponseIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.EnrollmentResponseIxRef", "ix_RefFhirId");
            DropIndex("dbo.EnrollmentResponseIxQty", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentResponseIxQty", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentResponseIxQty", "ix_System");
            DropIndex("dbo.EnrollmentResponseIxQty", "ix_Code");
            DropIndex("dbo.EnrollmentResponseIxDT", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentResponseIxDT", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentResponseIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.EnrollmentResponseIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.EnrollmentResponseRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.EnrollmentResponseRes", "ix_LastUpdated");
            DropIndex("dbo.EnrollmentResponseRes", "ix_IsDeleted");
            DropIndex("dbo.EnrollmentResponseRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.EnrollmentResponseRes", "ix_IsCurrent");
            DropIndex("dbo.EnrollmentRequestIxUri", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentRequestIxUri", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentRequestIxUri", "ix_Uri");
            DropIndex("dbo.EnrollmentRequestIxTok", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentRequestIxTok", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentRequestIxTok", "ix_System");
            DropIndex("dbo.EnrollmentRequestIxTok", "ix_Code");
            DropIndex("dbo.EnrollmentRequestIxStr", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentRequestIxStr", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentRequestIxStr", "ix_String");
            DropIndex("dbo.EnrollmentRequestIxRef", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentRequestIxRef", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentRequestIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.EnrollmentRequestIxRef", "ix_RefFhirId");
            DropIndex("dbo.EnrollmentRequestIxQty", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentRequestIxQty", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentRequestIxQty", "ix_System");
            DropIndex("dbo.EnrollmentRequestIxQty", "ix_Code");
            DropIndex("dbo.EnrollmentRequestIxDT", new[] { "ResourceId" });
            DropIndex("dbo.EnrollmentRequestIxDT", "ix_SearchParamId");
            DropIndex("dbo.EnrollmentRequestIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.EnrollmentRequestIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.EnrollmentRequestRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.EnrollmentRequestRes", "ix_LastUpdated");
            DropIndex("dbo.EnrollmentRequestRes", "ix_IsDeleted");
            DropIndex("dbo.EnrollmentRequestRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.EnrollmentRequestRes", "ix_IsCurrent");
            DropIndex("dbo.EndpointIxUri", new[] { "ResourceId" });
            DropIndex("dbo.EndpointIxUri", "ix_SearchParamId");
            DropIndex("dbo.EndpointIxUri", "ix_Uri");
            DropIndex("dbo.EndpointIxTok", new[] { "ResourceId" });
            DropIndex("dbo.EndpointIxTok", "ix_SearchParamId");
            DropIndex("dbo.EndpointIxTok", "ix_System");
            DropIndex("dbo.EndpointIxTok", "ix_Code");
            DropIndex("dbo.EndpointIxStr", new[] { "ResourceId" });
            DropIndex("dbo.EndpointIxStr", "ix_SearchParamId");
            DropIndex("dbo.EndpointIxStr", "ix_String");
            DropIndex("dbo.EndpointIxRef", new[] { "ResourceId" });
            DropIndex("dbo.EndpointIxRef", "ix_SearchParamId");
            DropIndex("dbo.EndpointIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.EndpointIxRef", "ix_RefFhirId");
            DropIndex("dbo.EndpointIxQty", new[] { "ResourceId" });
            DropIndex("dbo.EndpointIxQty", "ix_SearchParamId");
            DropIndex("dbo.EndpointIxQty", "ix_System");
            DropIndex("dbo.EndpointIxQty", "ix_Code");
            DropIndex("dbo.EndpointIxDT", new[] { "ResourceId" });
            DropIndex("dbo.EndpointIxDT", "ix_SearchParamId");
            DropIndex("dbo.EndpointIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.EndpointIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.EndpointRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.EndpointRes", "ix_LastUpdated");
            DropIndex("dbo.EndpointRes", "ix_IsDeleted");
            DropIndex("dbo.EndpointRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.EndpointRes", "ix_IsCurrent");
            DropIndex("dbo.EncounterIxUri", new[] { "ResourceId" });
            DropIndex("dbo.EncounterIxUri", "ix_SearchParamId");
            DropIndex("dbo.EncounterIxUri", "ix_Uri");
            DropIndex("dbo.EncounterIxTok", new[] { "ResourceId" });
            DropIndex("dbo.EncounterIxTok", "ix_SearchParamId");
            DropIndex("dbo.EncounterIxTok", "ix_System");
            DropIndex("dbo.EncounterIxTok", "ix_Code");
            DropIndex("dbo.EncounterIxStr", new[] { "ResourceId" });
            DropIndex("dbo.EncounterIxStr", "ix_SearchParamId");
            DropIndex("dbo.EncounterIxStr", "ix_String");
            DropIndex("dbo.EncounterIxRef", new[] { "ResourceId" });
            DropIndex("dbo.EncounterIxRef", "ix_SearchParamId");
            DropIndex("dbo.EncounterIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.EncounterIxRef", "ix_RefFhirId");
            DropIndex("dbo.EncounterIxQty", new[] { "ResourceId" });
            DropIndex("dbo.EncounterIxQty", "ix_SearchParamId");
            DropIndex("dbo.EncounterIxQty", "ix_System");
            DropIndex("dbo.EncounterIxQty", "ix_Code");
            DropIndex("dbo.EncounterIxDT", new[] { "ResourceId" });
            DropIndex("dbo.EncounterIxDT", "ix_SearchParamId");
            DropIndex("dbo.EncounterIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.EncounterIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.EncounterRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.EncounterRes", "ix_LastUpdated");
            DropIndex("dbo.EncounterRes", "ix_IsDeleted");
            DropIndex("dbo.EncounterRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.EncounterRes", "ix_IsCurrent");
            DropIndex("dbo.EffectEvidenceSynthesisIxUri", new[] { "ResourceId" });
            DropIndex("dbo.EffectEvidenceSynthesisIxUri", "ix_SearchParamId");
            DropIndex("dbo.EffectEvidenceSynthesisIxUri", "ix_Uri");
            DropIndex("dbo.EffectEvidenceSynthesisIxTok", new[] { "ResourceId" });
            DropIndex("dbo.EffectEvidenceSynthesisIxTok", "ix_SearchParamId");
            DropIndex("dbo.EffectEvidenceSynthesisIxTok", "ix_System");
            DropIndex("dbo.EffectEvidenceSynthesisIxTok", "ix_Code");
            DropIndex("dbo.EffectEvidenceSynthesisIxStr", new[] { "ResourceId" });
            DropIndex("dbo.EffectEvidenceSynthesisIxStr", "ix_SearchParamId");
            DropIndex("dbo.EffectEvidenceSynthesisIxStr", "ix_String");
            DropIndex("dbo.EffectEvidenceSynthesisIxRef", new[] { "ResourceId" });
            DropIndex("dbo.EffectEvidenceSynthesisIxRef", "ix_SearchParamId");
            DropIndex("dbo.EffectEvidenceSynthesisIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.EffectEvidenceSynthesisIxRef", "ix_RefFhirId");
            DropIndex("dbo.EffectEvidenceSynthesisIxQty", new[] { "ResourceId" });
            DropIndex("dbo.EffectEvidenceSynthesisIxQty", "ix_SearchParamId");
            DropIndex("dbo.EffectEvidenceSynthesisIxQty", "ix_System");
            DropIndex("dbo.EffectEvidenceSynthesisIxQty", "ix_Code");
            DropIndex("dbo.EffectEvidenceSynthesisIxDT", new[] { "ResourceId" });
            DropIndex("dbo.EffectEvidenceSynthesisIxDT", "ix_SearchParamId");
            DropIndex("dbo.EffectEvidenceSynthesisIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.EffectEvidenceSynthesisIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.EffectEvidenceSynthesisRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.EffectEvidenceSynthesisRes", "ix_LastUpdated");
            DropIndex("dbo.EffectEvidenceSynthesisRes", "ix_IsDeleted");
            DropIndex("dbo.EffectEvidenceSynthesisRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.EffectEvidenceSynthesisRes", "ix_IsCurrent");
            DropIndex("dbo.DocumentReferenceIxUri", new[] { "ResourceId" });
            DropIndex("dbo.DocumentReferenceIxUri", "ix_SearchParamId");
            DropIndex("dbo.DocumentReferenceIxUri", "ix_Uri");
            DropIndex("dbo.DocumentReferenceIxTok", new[] { "ResourceId" });
            DropIndex("dbo.DocumentReferenceIxTok", "ix_SearchParamId");
            DropIndex("dbo.DocumentReferenceIxTok", "ix_System");
            DropIndex("dbo.DocumentReferenceIxTok", "ix_Code");
            DropIndex("dbo.DocumentReferenceIxStr", new[] { "ResourceId" });
            DropIndex("dbo.DocumentReferenceIxStr", "ix_SearchParamId");
            DropIndex("dbo.DocumentReferenceIxStr", "ix_String");
            DropIndex("dbo.DocumentReferenceIxRef", new[] { "ResourceId" });
            DropIndex("dbo.DocumentReferenceIxRef", "ix_SearchParamId");
            DropIndex("dbo.DocumentReferenceIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.DocumentReferenceIxRef", "ix_RefFhirId");
            DropIndex("dbo.DocumentReferenceIxQty", new[] { "ResourceId" });
            DropIndex("dbo.DocumentReferenceIxQty", "ix_SearchParamId");
            DropIndex("dbo.DocumentReferenceIxQty", "ix_System");
            DropIndex("dbo.DocumentReferenceIxQty", "ix_Code");
            DropIndex("dbo.DocumentReferenceIxDT", new[] { "ResourceId" });
            DropIndex("dbo.DocumentReferenceIxDT", "ix_SearchParamId");
            DropIndex("dbo.DocumentReferenceIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.DocumentReferenceIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.DocumentReferenceRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.DocumentReferenceRes", "ix_LastUpdated");
            DropIndex("dbo.DocumentReferenceRes", "ix_IsDeleted");
            DropIndex("dbo.DocumentReferenceRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.DocumentReferenceRes", "ix_IsCurrent");
            DropIndex("dbo.DocumentManifestIxUri", new[] { "ResourceId" });
            DropIndex("dbo.DocumentManifestIxUri", "ix_SearchParamId");
            DropIndex("dbo.DocumentManifestIxUri", "ix_Uri");
            DropIndex("dbo.DocumentManifestIxTok", new[] { "ResourceId" });
            DropIndex("dbo.DocumentManifestIxTok", "ix_SearchParamId");
            DropIndex("dbo.DocumentManifestIxTok", "ix_System");
            DropIndex("dbo.DocumentManifestIxTok", "ix_Code");
            DropIndex("dbo.DocumentManifestIxStr", new[] { "ResourceId" });
            DropIndex("dbo.DocumentManifestIxStr", "ix_SearchParamId");
            DropIndex("dbo.DocumentManifestIxStr", "ix_String");
            DropIndex("dbo.DocumentManifestIxRef", new[] { "ResourceId" });
            DropIndex("dbo.DocumentManifestIxRef", "ix_SearchParamId");
            DropIndex("dbo.DocumentManifestIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.DocumentManifestIxRef", "ix_RefFhirId");
            DropIndex("dbo.DocumentManifestIxQty", new[] { "ResourceId" });
            DropIndex("dbo.DocumentManifestIxQty", "ix_SearchParamId");
            DropIndex("dbo.DocumentManifestIxQty", "ix_System");
            DropIndex("dbo.DocumentManifestIxQty", "ix_Code");
            DropIndex("dbo.DocumentManifestIxDT", new[] { "ResourceId" });
            DropIndex("dbo.DocumentManifestIxDT", "ix_SearchParamId");
            DropIndex("dbo.DocumentManifestIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.DocumentManifestIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.DocumentManifestRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.DocumentManifestRes", "ix_LastUpdated");
            DropIndex("dbo.DocumentManifestRes", "ix_IsDeleted");
            DropIndex("dbo.DocumentManifestRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.DocumentManifestRes", "ix_IsCurrent");
            DropIndex("dbo.DiagnosticReportIxUri", new[] { "ResourceId" });
            DropIndex("dbo.DiagnosticReportIxUri", "ix_SearchParamId");
            DropIndex("dbo.DiagnosticReportIxUri", "ix_Uri");
            DropIndex("dbo.DiagnosticReportIxTok", new[] { "ResourceId" });
            DropIndex("dbo.DiagnosticReportIxTok", "ix_SearchParamId");
            DropIndex("dbo.DiagnosticReportIxTok", "ix_System");
            DropIndex("dbo.DiagnosticReportIxTok", "ix_Code");
            DropIndex("dbo.DiagnosticReportIxStr", new[] { "ResourceId" });
            DropIndex("dbo.DiagnosticReportIxStr", "ix_SearchParamId");
            DropIndex("dbo.DiagnosticReportIxStr", "ix_String");
            DropIndex("dbo.DiagnosticReportIxRef", new[] { "ResourceId" });
            DropIndex("dbo.DiagnosticReportIxRef", "ix_SearchParamId");
            DropIndex("dbo.DiagnosticReportIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.DiagnosticReportIxRef", "ix_RefFhirId");
            DropIndex("dbo.DiagnosticReportIxQty", new[] { "ResourceId" });
            DropIndex("dbo.DiagnosticReportIxQty", "ix_SearchParamId");
            DropIndex("dbo.DiagnosticReportIxQty", "ix_System");
            DropIndex("dbo.DiagnosticReportIxQty", "ix_Code");
            DropIndex("dbo.DiagnosticReportIxDT", new[] { "ResourceId" });
            DropIndex("dbo.DiagnosticReportIxDT", "ix_SearchParamId");
            DropIndex("dbo.DiagnosticReportIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.DiagnosticReportIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.DiagnosticReportRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.DiagnosticReportRes", "ix_LastUpdated");
            DropIndex("dbo.DiagnosticReportRes", "ix_IsDeleted");
            DropIndex("dbo.DiagnosticReportRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.DiagnosticReportRes", "ix_IsCurrent");
            DropIndex("dbo.DeviceUseStatementIxUri", new[] { "ResourceId" });
            DropIndex("dbo.DeviceUseStatementIxUri", "ix_SearchParamId");
            DropIndex("dbo.DeviceUseStatementIxUri", "ix_Uri");
            DropIndex("dbo.DeviceUseStatementIxTok", new[] { "ResourceId" });
            DropIndex("dbo.DeviceUseStatementIxTok", "ix_SearchParamId");
            DropIndex("dbo.DeviceUseStatementIxTok", "ix_System");
            DropIndex("dbo.DeviceUseStatementIxTok", "ix_Code");
            DropIndex("dbo.DeviceUseStatementIxStr", new[] { "ResourceId" });
            DropIndex("dbo.DeviceUseStatementIxStr", "ix_SearchParamId");
            DropIndex("dbo.DeviceUseStatementIxStr", "ix_String");
            DropIndex("dbo.DeviceUseStatementIxRef", new[] { "ResourceId" });
            DropIndex("dbo.DeviceUseStatementIxRef", "ix_SearchParamId");
            DropIndex("dbo.DeviceUseStatementIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.DeviceUseStatementIxRef", "ix_RefFhirId");
            DropIndex("dbo.DeviceUseStatementIxQty", new[] { "ResourceId" });
            DropIndex("dbo.DeviceUseStatementIxQty", "ix_SearchParamId");
            DropIndex("dbo.DeviceUseStatementIxQty", "ix_System");
            DropIndex("dbo.DeviceUseStatementIxQty", "ix_Code");
            DropIndex("dbo.DeviceUseStatementIxDT", new[] { "ResourceId" });
            DropIndex("dbo.DeviceUseStatementIxDT", "ix_SearchParamId");
            DropIndex("dbo.DeviceUseStatementIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.DeviceUseStatementIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.DeviceUseStatementRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.DeviceUseStatementRes", "ix_LastUpdated");
            DropIndex("dbo.DeviceUseStatementRes", "ix_IsDeleted");
            DropIndex("dbo.DeviceUseStatementRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.DeviceUseStatementRes", "ix_IsCurrent");
            DropIndex("dbo.DeviceRequestIxUri", new[] { "ResourceId" });
            DropIndex("dbo.DeviceRequestIxUri", "ix_SearchParamId");
            DropIndex("dbo.DeviceRequestIxUri", "ix_Uri");
            DropIndex("dbo.DeviceRequestIxTok", new[] { "ResourceId" });
            DropIndex("dbo.DeviceRequestIxTok", "ix_SearchParamId");
            DropIndex("dbo.DeviceRequestIxTok", "ix_System");
            DropIndex("dbo.DeviceRequestIxTok", "ix_Code");
            DropIndex("dbo.DeviceRequestIxStr", new[] { "ResourceId" });
            DropIndex("dbo.DeviceRequestIxStr", "ix_SearchParamId");
            DropIndex("dbo.DeviceRequestIxStr", "ix_String");
            DropIndex("dbo.DeviceRequestIxRef", new[] { "ResourceId" });
            DropIndex("dbo.DeviceRequestIxRef", "ix_SearchParamId");
            DropIndex("dbo.DeviceRequestIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.DeviceRequestIxRef", "ix_RefFhirId");
            DropIndex("dbo.DeviceRequestIxQty", new[] { "ResourceId" });
            DropIndex("dbo.DeviceRequestIxQty", "ix_SearchParamId");
            DropIndex("dbo.DeviceRequestIxQty", "ix_System");
            DropIndex("dbo.DeviceRequestIxQty", "ix_Code");
            DropIndex("dbo.DeviceRequestIxDT", new[] { "ResourceId" });
            DropIndex("dbo.DeviceRequestIxDT", "ix_SearchParamId");
            DropIndex("dbo.DeviceRequestIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.DeviceRequestIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.DeviceRequestRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.DeviceRequestRes", "ix_LastUpdated");
            DropIndex("dbo.DeviceRequestRes", "ix_IsDeleted");
            DropIndex("dbo.DeviceRequestRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.DeviceRequestRes", "ix_IsCurrent");
            DropIndex("dbo.DeviceMetricIxUri", new[] { "ResourceId" });
            DropIndex("dbo.DeviceMetricIxUri", "ix_SearchParamId");
            DropIndex("dbo.DeviceMetricIxUri", "ix_Uri");
            DropIndex("dbo.DeviceMetricIxTok", new[] { "ResourceId" });
            DropIndex("dbo.DeviceMetricIxTok", "ix_SearchParamId");
            DropIndex("dbo.DeviceMetricIxTok", "ix_System");
            DropIndex("dbo.DeviceMetricIxTok", "ix_Code");
            DropIndex("dbo.DeviceMetricIxStr", new[] { "ResourceId" });
            DropIndex("dbo.DeviceMetricIxStr", "ix_SearchParamId");
            DropIndex("dbo.DeviceMetricIxStr", "ix_String");
            DropIndex("dbo.DeviceMetricIxRef", new[] { "ResourceId" });
            DropIndex("dbo.DeviceMetricIxRef", "ix_SearchParamId");
            DropIndex("dbo.DeviceMetricIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.DeviceMetricIxRef", "ix_RefFhirId");
            DropIndex("dbo.DeviceMetricIxQty", new[] { "ResourceId" });
            DropIndex("dbo.DeviceMetricIxQty", "ix_SearchParamId");
            DropIndex("dbo.DeviceMetricIxQty", "ix_System");
            DropIndex("dbo.DeviceMetricIxQty", "ix_Code");
            DropIndex("dbo.DeviceMetricIxDT", new[] { "ResourceId" });
            DropIndex("dbo.DeviceMetricIxDT", "ix_SearchParamId");
            DropIndex("dbo.DeviceMetricIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.DeviceMetricIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.DeviceMetricRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.DeviceMetricRes", "ix_LastUpdated");
            DropIndex("dbo.DeviceMetricRes", "ix_IsDeleted");
            DropIndex("dbo.DeviceMetricRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.DeviceMetricRes", "ix_IsCurrent");
            DropIndex("dbo.DeviceIxUri", new[] { "ResourceId" });
            DropIndex("dbo.DeviceIxUri", "ix_SearchParamId");
            DropIndex("dbo.DeviceIxUri", "ix_Uri");
            DropIndex("dbo.DeviceIxTok", new[] { "ResourceId" });
            DropIndex("dbo.DeviceIxTok", "ix_SearchParamId");
            DropIndex("dbo.DeviceIxTok", "ix_System");
            DropIndex("dbo.DeviceIxTok", "ix_Code");
            DropIndex("dbo.DeviceIxStr", new[] { "ResourceId" });
            DropIndex("dbo.DeviceIxStr", "ix_SearchParamId");
            DropIndex("dbo.DeviceIxStr", "ix_String");
            DropIndex("dbo.DeviceIxRef", new[] { "ResourceId" });
            DropIndex("dbo.DeviceIxRef", "ix_SearchParamId");
            DropIndex("dbo.DeviceIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.DeviceIxRef", "ix_RefFhirId");
            DropIndex("dbo.DeviceIxQty", new[] { "ResourceId" });
            DropIndex("dbo.DeviceIxQty", "ix_SearchParamId");
            DropIndex("dbo.DeviceIxQty", "ix_System");
            DropIndex("dbo.DeviceIxQty", "ix_Code");
            DropIndex("dbo.DeviceIxDT", new[] { "ResourceId" });
            DropIndex("dbo.DeviceIxDT", "ix_SearchParamId");
            DropIndex("dbo.DeviceIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.DeviceIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.DeviceRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.DeviceRes", "ix_LastUpdated");
            DropIndex("dbo.DeviceRes", "ix_IsDeleted");
            DropIndex("dbo.DeviceRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.DeviceRes", "ix_IsCurrent");
            DropIndex("dbo.DeviceDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.DeviceDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.DeviceDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.DeviceDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.DeviceDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.DeviceDefinitionIxTok", "ix_System");
            DropIndex("dbo.DeviceDefinitionIxTok", "ix_Code");
            DropIndex("dbo.DeviceDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.DeviceDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.DeviceDefinitionIxStr", "ix_String");
            DropIndex("dbo.DeviceDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.DeviceDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.DeviceDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.DeviceDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.DeviceDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.DeviceDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.DeviceDefinitionIxQty", "ix_System");
            DropIndex("dbo.DeviceDefinitionIxQty", "ix_Code");
            DropIndex("dbo.DeviceDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.DeviceDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.DeviceDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.DeviceDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.DeviceDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.DeviceDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.DeviceDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.DeviceDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.DeviceDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.DetectedIssueIxUri", new[] { "ResourceId" });
            DropIndex("dbo.DetectedIssueIxUri", "ix_SearchParamId");
            DropIndex("dbo.DetectedIssueIxUri", "ix_Uri");
            DropIndex("dbo.DetectedIssueIxTok", new[] { "ResourceId" });
            DropIndex("dbo.DetectedIssueIxTok", "ix_SearchParamId");
            DropIndex("dbo.DetectedIssueIxTok", "ix_System");
            DropIndex("dbo.DetectedIssueIxTok", "ix_Code");
            DropIndex("dbo.DetectedIssueIxStr", new[] { "ResourceId" });
            DropIndex("dbo.DetectedIssueIxStr", "ix_SearchParamId");
            DropIndex("dbo.DetectedIssueIxStr", "ix_String");
            DropIndex("dbo.DetectedIssueIxRef", new[] { "ResourceId" });
            DropIndex("dbo.DetectedIssueIxRef", "ix_SearchParamId");
            DropIndex("dbo.DetectedIssueIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.DetectedIssueIxRef", "ix_RefFhirId");
            DropIndex("dbo.DetectedIssueIxQty", new[] { "ResourceId" });
            DropIndex("dbo.DetectedIssueIxQty", "ix_SearchParamId");
            DropIndex("dbo.DetectedIssueIxQty", "ix_System");
            DropIndex("dbo.DetectedIssueIxQty", "ix_Code");
            DropIndex("dbo.DetectedIssueIxDT", new[] { "ResourceId" });
            DropIndex("dbo.DetectedIssueIxDT", "ix_SearchParamId");
            DropIndex("dbo.DetectedIssueIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.DetectedIssueIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.DetectedIssueRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.DetectedIssueRes", "ix_LastUpdated");
            DropIndex("dbo.DetectedIssueRes", "ix_IsDeleted");
            DropIndex("dbo.DetectedIssueRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.DetectedIssueRes", "ix_IsCurrent");
            DropIndex("dbo.CoverageIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CoverageIxUri", "ix_SearchParamId");
            DropIndex("dbo.CoverageIxUri", "ix_Uri");
            DropIndex("dbo.CoverageIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CoverageIxTok", "ix_SearchParamId");
            DropIndex("dbo.CoverageIxTok", "ix_System");
            DropIndex("dbo.CoverageIxTok", "ix_Code");
            DropIndex("dbo.CoverageIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CoverageIxStr", "ix_SearchParamId");
            DropIndex("dbo.CoverageIxStr", "ix_String");
            DropIndex("dbo.CoverageIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CoverageIxRef", "ix_SearchParamId");
            DropIndex("dbo.CoverageIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CoverageIxRef", "ix_RefFhirId");
            DropIndex("dbo.CoverageIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CoverageIxQty", "ix_SearchParamId");
            DropIndex("dbo.CoverageIxQty", "ix_System");
            DropIndex("dbo.CoverageIxQty", "ix_Code");
            DropIndex("dbo.CoverageIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CoverageIxDT", "ix_SearchParamId");
            DropIndex("dbo.CoverageIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CoverageIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CoverageRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CoverageRes", "ix_LastUpdated");
            DropIndex("dbo.CoverageRes", "ix_IsDeleted");
            DropIndex("dbo.CoverageRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CoverageRes", "ix_IsCurrent");
            DropIndex("dbo.CoverageEligibilityResponseIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityResponseIxUri", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityResponseIxUri", "ix_Uri");
            DropIndex("dbo.CoverageEligibilityResponseIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityResponseIxTok", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityResponseIxTok", "ix_System");
            DropIndex("dbo.CoverageEligibilityResponseIxTok", "ix_Code");
            DropIndex("dbo.CoverageEligibilityResponseIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityResponseIxStr", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityResponseIxStr", "ix_String");
            DropIndex("dbo.CoverageEligibilityResponseIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityResponseIxRef", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityResponseIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CoverageEligibilityResponseIxRef", "ix_RefFhirId");
            DropIndex("dbo.CoverageEligibilityResponseIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityResponseIxQty", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityResponseIxQty", "ix_System");
            DropIndex("dbo.CoverageEligibilityResponseIxQty", "ix_Code");
            DropIndex("dbo.CoverageEligibilityResponseIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityResponseIxDT", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityResponseIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CoverageEligibilityResponseIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CoverageEligibilityResponseRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CoverageEligibilityResponseRes", "ix_LastUpdated");
            DropIndex("dbo.CoverageEligibilityResponseRes", "ix_IsDeleted");
            DropIndex("dbo.CoverageEligibilityResponseRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CoverageEligibilityResponseRes", "ix_IsCurrent");
            DropIndex("dbo.CoverageEligibilityRequestIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityRequestIxUri", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityRequestIxUri", "ix_Uri");
            DropIndex("dbo.CoverageEligibilityRequestIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityRequestIxTok", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityRequestIxTok", "ix_System");
            DropIndex("dbo.CoverageEligibilityRequestIxTok", "ix_Code");
            DropIndex("dbo.CoverageEligibilityRequestIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityRequestIxStr", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityRequestIxStr", "ix_String");
            DropIndex("dbo.CoverageEligibilityRequestIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityRequestIxRef", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityRequestIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CoverageEligibilityRequestIxRef", "ix_RefFhirId");
            DropIndex("dbo.CoverageEligibilityRequestIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityRequestIxQty", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityRequestIxQty", "ix_System");
            DropIndex("dbo.CoverageEligibilityRequestIxQty", "ix_Code");
            DropIndex("dbo.CoverageEligibilityRequestIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CoverageEligibilityRequestIxDT", "ix_SearchParamId");
            DropIndex("dbo.CoverageEligibilityRequestIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CoverageEligibilityRequestIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CoverageEligibilityRequestRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CoverageEligibilityRequestRes", "ix_LastUpdated");
            DropIndex("dbo.CoverageEligibilityRequestRes", "ix_IsDeleted");
            DropIndex("dbo.CoverageEligibilityRequestRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CoverageEligibilityRequestRes", "ix_IsCurrent");
            DropIndex("dbo.ContractIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ContractIxUri", "ix_SearchParamId");
            DropIndex("dbo.ContractIxUri", "ix_Uri");
            DropIndex("dbo.ContractIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ContractIxTok", "ix_SearchParamId");
            DropIndex("dbo.ContractIxTok", "ix_System");
            DropIndex("dbo.ContractIxTok", "ix_Code");
            DropIndex("dbo.ContractIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ContractIxStr", "ix_SearchParamId");
            DropIndex("dbo.ContractIxStr", "ix_String");
            DropIndex("dbo.ContractIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ContractIxRef", "ix_SearchParamId");
            DropIndex("dbo.ContractIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ContractIxRef", "ix_RefFhirId");
            DropIndex("dbo.ContractIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ContractIxQty", "ix_SearchParamId");
            DropIndex("dbo.ContractIxQty", "ix_System");
            DropIndex("dbo.ContractIxQty", "ix_Code");
            DropIndex("dbo.ContractIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ContractIxDT", "ix_SearchParamId");
            DropIndex("dbo.ContractIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ContractIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ContractRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ContractRes", "ix_LastUpdated");
            DropIndex("dbo.ContractRes", "ix_IsDeleted");
            DropIndex("dbo.ContractRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ContractRes", "ix_IsCurrent");
            DropIndex("dbo.ConsentIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ConsentIxUri", "ix_SearchParamId");
            DropIndex("dbo.ConsentIxUri", "ix_Uri");
            DropIndex("dbo.ConsentIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ConsentIxTok", "ix_SearchParamId");
            DropIndex("dbo.ConsentIxTok", "ix_System");
            DropIndex("dbo.ConsentIxTok", "ix_Code");
            DropIndex("dbo.ConsentIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ConsentIxStr", "ix_SearchParamId");
            DropIndex("dbo.ConsentIxStr", "ix_String");
            DropIndex("dbo.ConsentIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ConsentIxRef", "ix_SearchParamId");
            DropIndex("dbo.ConsentIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ConsentIxRef", "ix_RefFhirId");
            DropIndex("dbo.ConsentIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ConsentIxQty", "ix_SearchParamId");
            DropIndex("dbo.ConsentIxQty", "ix_System");
            DropIndex("dbo.ConsentIxQty", "ix_Code");
            DropIndex("dbo.ConsentIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ConsentIxDT", "ix_SearchParamId");
            DropIndex("dbo.ConsentIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ConsentIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ConsentRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ConsentRes", "ix_LastUpdated");
            DropIndex("dbo.ConsentRes", "ix_IsDeleted");
            DropIndex("dbo.ConsentRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ConsentRes", "ix_IsCurrent");
            DropIndex("dbo.ConditionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ConditionIxUri", "ix_SearchParamId");
            DropIndex("dbo.ConditionIxUri", "ix_Uri");
            DropIndex("dbo.ConditionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ConditionIxTok", "ix_SearchParamId");
            DropIndex("dbo.ConditionIxTok", "ix_System");
            DropIndex("dbo.ConditionIxTok", "ix_Code");
            DropIndex("dbo.ConditionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ConditionIxStr", "ix_SearchParamId");
            DropIndex("dbo.ConditionIxStr", "ix_String");
            DropIndex("dbo.ConditionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ConditionIxRef", "ix_SearchParamId");
            DropIndex("dbo.ConditionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ConditionIxRef", "ix_RefFhirId");
            DropIndex("dbo.ConditionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ConditionIxQty", "ix_SearchParamId");
            DropIndex("dbo.ConditionIxQty", "ix_System");
            DropIndex("dbo.ConditionIxQty", "ix_Code");
            DropIndex("dbo.ConditionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ConditionIxDT", "ix_SearchParamId");
            DropIndex("dbo.ConditionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ConditionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ConditionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ConditionRes", "ix_LastUpdated");
            DropIndex("dbo.ConditionRes", "ix_IsDeleted");
            DropIndex("dbo.ConditionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ConditionRes", "ix_IsCurrent");
            DropIndex("dbo.ConceptMapIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ConceptMapIxUri", "ix_SearchParamId");
            DropIndex("dbo.ConceptMapIxUri", "ix_Uri");
            DropIndex("dbo.ConceptMapIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ConceptMapIxTok", "ix_SearchParamId");
            DropIndex("dbo.ConceptMapIxTok", "ix_System");
            DropIndex("dbo.ConceptMapIxTok", "ix_Code");
            DropIndex("dbo.ConceptMapIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ConceptMapIxStr", "ix_SearchParamId");
            DropIndex("dbo.ConceptMapIxStr", "ix_String");
            DropIndex("dbo.ConceptMapIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ConceptMapIxRef", "ix_SearchParamId");
            DropIndex("dbo.ConceptMapIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ConceptMapIxRef", "ix_RefFhirId");
            DropIndex("dbo.ConceptMapIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ConceptMapIxQty", "ix_SearchParamId");
            DropIndex("dbo.ConceptMapIxQty", "ix_System");
            DropIndex("dbo.ConceptMapIxQty", "ix_Code");
            DropIndex("dbo.ConceptMapIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ConceptMapIxDT", "ix_SearchParamId");
            DropIndex("dbo.ConceptMapIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ConceptMapIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ConceptMapRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ConceptMapRes", "ix_LastUpdated");
            DropIndex("dbo.ConceptMapRes", "ix_IsDeleted");
            DropIndex("dbo.ConceptMapRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ConceptMapRes", "ix_IsCurrent");
            DropIndex("dbo.CompositionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CompositionIxUri", "ix_SearchParamId");
            DropIndex("dbo.CompositionIxUri", "ix_Uri");
            DropIndex("dbo.CompositionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CompositionIxTok", "ix_SearchParamId");
            DropIndex("dbo.CompositionIxTok", "ix_System");
            DropIndex("dbo.CompositionIxTok", "ix_Code");
            DropIndex("dbo.CompositionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CompositionIxStr", "ix_SearchParamId");
            DropIndex("dbo.CompositionIxStr", "ix_String");
            DropIndex("dbo.CompositionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CompositionIxRef", "ix_SearchParamId");
            DropIndex("dbo.CompositionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CompositionIxRef", "ix_RefFhirId");
            DropIndex("dbo.CompositionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CompositionIxQty", "ix_SearchParamId");
            DropIndex("dbo.CompositionIxQty", "ix_System");
            DropIndex("dbo.CompositionIxQty", "ix_Code");
            DropIndex("dbo.CompositionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CompositionIxDT", "ix_SearchParamId");
            DropIndex("dbo.CompositionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CompositionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CompositionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CompositionRes", "ix_LastUpdated");
            DropIndex("dbo.CompositionRes", "ix_IsDeleted");
            DropIndex("dbo.CompositionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CompositionRes", "ix_IsCurrent");
            DropIndex("dbo.CompartmentDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CompartmentDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.CompartmentDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.CompartmentDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CompartmentDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.CompartmentDefinitionIxTok", "ix_System");
            DropIndex("dbo.CompartmentDefinitionIxTok", "ix_Code");
            DropIndex("dbo.CompartmentDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CompartmentDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.CompartmentDefinitionIxStr", "ix_String");
            DropIndex("dbo.CompartmentDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CompartmentDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.CompartmentDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CompartmentDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.CompartmentDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CompartmentDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.CompartmentDefinitionIxQty", "ix_System");
            DropIndex("dbo.CompartmentDefinitionIxQty", "ix_Code");
            DropIndex("dbo.CompartmentDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CompartmentDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.CompartmentDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CompartmentDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CompartmentDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CompartmentDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.CompartmentDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.CompartmentDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CompartmentDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.CommunicationRequestIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationRequestIxUri", "ix_SearchParamId");
            DropIndex("dbo.CommunicationRequestIxUri", "ix_Uri");
            DropIndex("dbo.CommunicationRequestIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationRequestIxTok", "ix_SearchParamId");
            DropIndex("dbo.CommunicationRequestIxTok", "ix_System");
            DropIndex("dbo.CommunicationRequestIxTok", "ix_Code");
            DropIndex("dbo.CommunicationRequestIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationRequestIxStr", "ix_SearchParamId");
            DropIndex("dbo.CommunicationRequestIxStr", "ix_String");
            DropIndex("dbo.CommunicationRequestIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationRequestIxRef", "ix_SearchParamId");
            DropIndex("dbo.CommunicationRequestIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CommunicationRequestIxRef", "ix_RefFhirId");
            DropIndex("dbo.CommunicationRequestIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationRequestIxQty", "ix_SearchParamId");
            DropIndex("dbo.CommunicationRequestIxQty", "ix_System");
            DropIndex("dbo.CommunicationRequestIxQty", "ix_Code");
            DropIndex("dbo.CommunicationRequestIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationRequestIxDT", "ix_SearchParamId");
            DropIndex("dbo.CommunicationRequestIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CommunicationRequestIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CommunicationRequestRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CommunicationRequestRes", "ix_LastUpdated");
            DropIndex("dbo.CommunicationRequestRes", "ix_IsDeleted");
            DropIndex("dbo.CommunicationRequestRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CommunicationRequestRes", "ix_IsCurrent");
            DropIndex("dbo.CommunicationIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationIxUri", "ix_SearchParamId");
            DropIndex("dbo.CommunicationIxUri", "ix_Uri");
            DropIndex("dbo.CommunicationIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationIxTok", "ix_SearchParamId");
            DropIndex("dbo.CommunicationIxTok", "ix_System");
            DropIndex("dbo.CommunicationIxTok", "ix_Code");
            DropIndex("dbo.CommunicationIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationIxStr", "ix_SearchParamId");
            DropIndex("dbo.CommunicationIxStr", "ix_String");
            DropIndex("dbo.CommunicationIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationIxRef", "ix_SearchParamId");
            DropIndex("dbo.CommunicationIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CommunicationIxRef", "ix_RefFhirId");
            DropIndex("dbo.CommunicationIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationIxQty", "ix_SearchParamId");
            DropIndex("dbo.CommunicationIxQty", "ix_System");
            DropIndex("dbo.CommunicationIxQty", "ix_Code");
            DropIndex("dbo.CommunicationIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CommunicationIxDT", "ix_SearchParamId");
            DropIndex("dbo.CommunicationIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CommunicationIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CommunicationRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CommunicationRes", "ix_LastUpdated");
            DropIndex("dbo.CommunicationRes", "ix_IsDeleted");
            DropIndex("dbo.CommunicationRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CommunicationRes", "ix_IsCurrent");
            DropIndex("dbo.CodeSystemIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CodeSystemIxUri", "ix_SearchParamId");
            DropIndex("dbo.CodeSystemIxUri", "ix_Uri");
            DropIndex("dbo.CodeSystemIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CodeSystemIxTok", "ix_SearchParamId");
            DropIndex("dbo.CodeSystemIxTok", "ix_System");
            DropIndex("dbo.CodeSystemIxTok", "ix_Code");
            DropIndex("dbo.CodeSystemIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CodeSystemIxStr", "ix_SearchParamId");
            DropIndex("dbo.CodeSystemIxStr", "ix_String");
            DropIndex("dbo.CodeSystemIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CodeSystemIxRef", "ix_SearchParamId");
            DropIndex("dbo.CodeSystemIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CodeSystemIxRef", "ix_RefFhirId");
            DropIndex("dbo.CodeSystemIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CodeSystemIxQty", "ix_SearchParamId");
            DropIndex("dbo.CodeSystemIxQty", "ix_System");
            DropIndex("dbo.CodeSystemIxQty", "ix_Code");
            DropIndex("dbo.CodeSystemIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CodeSystemIxDT", "ix_SearchParamId");
            DropIndex("dbo.CodeSystemIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CodeSystemIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CodeSystemRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CodeSystemRes", "ix_LastUpdated");
            DropIndex("dbo.CodeSystemRes", "ix_IsDeleted");
            DropIndex("dbo.CodeSystemRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CodeSystemRes", "ix_IsCurrent");
            DropIndex("dbo.ClinicalImpressionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ClinicalImpressionIxUri", "ix_SearchParamId");
            DropIndex("dbo.ClinicalImpressionIxUri", "ix_Uri");
            DropIndex("dbo.ClinicalImpressionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ClinicalImpressionIxTok", "ix_SearchParamId");
            DropIndex("dbo.ClinicalImpressionIxTok", "ix_System");
            DropIndex("dbo.ClinicalImpressionIxTok", "ix_Code");
            DropIndex("dbo.ClinicalImpressionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ClinicalImpressionIxStr", "ix_SearchParamId");
            DropIndex("dbo.ClinicalImpressionIxStr", "ix_String");
            DropIndex("dbo.ClinicalImpressionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ClinicalImpressionIxRef", "ix_SearchParamId");
            DropIndex("dbo.ClinicalImpressionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ClinicalImpressionIxRef", "ix_RefFhirId");
            DropIndex("dbo.ClinicalImpressionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ClinicalImpressionIxQty", "ix_SearchParamId");
            DropIndex("dbo.ClinicalImpressionIxQty", "ix_System");
            DropIndex("dbo.ClinicalImpressionIxQty", "ix_Code");
            DropIndex("dbo.ClinicalImpressionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ClinicalImpressionIxDT", "ix_SearchParamId");
            DropIndex("dbo.ClinicalImpressionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ClinicalImpressionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ClinicalImpressionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ClinicalImpressionRes", "ix_LastUpdated");
            DropIndex("dbo.ClinicalImpressionRes", "ix_IsDeleted");
            DropIndex("dbo.ClinicalImpressionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ClinicalImpressionRes", "ix_IsCurrent");
            DropIndex("dbo.ClaimResponseIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ClaimResponseIxUri", "ix_SearchParamId");
            DropIndex("dbo.ClaimResponseIxUri", "ix_Uri");
            DropIndex("dbo.ClaimResponseIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ClaimResponseIxTok", "ix_SearchParamId");
            DropIndex("dbo.ClaimResponseIxTok", "ix_System");
            DropIndex("dbo.ClaimResponseIxTok", "ix_Code");
            DropIndex("dbo.ClaimResponseIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ClaimResponseIxStr", "ix_SearchParamId");
            DropIndex("dbo.ClaimResponseIxStr", "ix_String");
            DropIndex("dbo.ClaimResponseIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ClaimResponseIxRef", "ix_SearchParamId");
            DropIndex("dbo.ClaimResponseIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ClaimResponseIxRef", "ix_RefFhirId");
            DropIndex("dbo.ClaimResponseIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ClaimResponseIxQty", "ix_SearchParamId");
            DropIndex("dbo.ClaimResponseIxQty", "ix_System");
            DropIndex("dbo.ClaimResponseIxQty", "ix_Code");
            DropIndex("dbo.ClaimResponseIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ClaimResponseIxDT", "ix_SearchParamId");
            DropIndex("dbo.ClaimResponseIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ClaimResponseIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ClaimResponseRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ClaimResponseRes", "ix_LastUpdated");
            DropIndex("dbo.ClaimResponseRes", "ix_IsDeleted");
            DropIndex("dbo.ClaimResponseRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ClaimResponseRes", "ix_IsCurrent");
            DropIndex("dbo.ClaimIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ClaimIxUri", "ix_SearchParamId");
            DropIndex("dbo.ClaimIxUri", "ix_Uri");
            DropIndex("dbo.ClaimIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ClaimIxTok", "ix_SearchParamId");
            DropIndex("dbo.ClaimIxTok", "ix_System");
            DropIndex("dbo.ClaimIxTok", "ix_Code");
            DropIndex("dbo.ClaimIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ClaimIxStr", "ix_SearchParamId");
            DropIndex("dbo.ClaimIxStr", "ix_String");
            DropIndex("dbo.ClaimIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ClaimIxRef", "ix_SearchParamId");
            DropIndex("dbo.ClaimIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ClaimIxRef", "ix_RefFhirId");
            DropIndex("dbo.ClaimIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ClaimIxQty", "ix_SearchParamId");
            DropIndex("dbo.ClaimIxQty", "ix_System");
            DropIndex("dbo.ClaimIxQty", "ix_Code");
            DropIndex("dbo.ClaimIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ClaimIxDT", "ix_SearchParamId");
            DropIndex("dbo.ClaimIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ClaimIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ClaimRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ClaimRes", "ix_LastUpdated");
            DropIndex("dbo.ClaimRes", "ix_IsDeleted");
            DropIndex("dbo.ClaimRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ClaimRes", "ix_IsCurrent");
            DropIndex("dbo.ChargeItemIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemIxUri", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemIxUri", "ix_Uri");
            DropIndex("dbo.ChargeItemIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemIxTok", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemIxTok", "ix_System");
            DropIndex("dbo.ChargeItemIxTok", "ix_Code");
            DropIndex("dbo.ChargeItemIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemIxStr", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemIxStr", "ix_String");
            DropIndex("dbo.ChargeItemIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemIxRef", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ChargeItemIxRef", "ix_RefFhirId");
            DropIndex("dbo.ChargeItemIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemIxQty", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemIxQty", "ix_System");
            DropIndex("dbo.ChargeItemIxQty", "ix_Code");
            DropIndex("dbo.ChargeItemIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemIxDT", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ChargeItemIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ChargeItemRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ChargeItemRes", "ix_LastUpdated");
            DropIndex("dbo.ChargeItemRes", "ix_IsDeleted");
            DropIndex("dbo.ChargeItemRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ChargeItemRes", "ix_IsCurrent");
            DropIndex("dbo.ChargeItemDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.ChargeItemDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemDefinitionIxTok", "ix_System");
            DropIndex("dbo.ChargeItemDefinitionIxTok", "ix_Code");
            DropIndex("dbo.ChargeItemDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemDefinitionIxStr", "ix_String");
            DropIndex("dbo.ChargeItemDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ChargeItemDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.ChargeItemDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemDefinitionIxQty", "ix_System");
            DropIndex("dbo.ChargeItemDefinitionIxQty", "ix_Code");
            DropIndex("dbo.ChargeItemDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ChargeItemDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.ChargeItemDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ChargeItemDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ChargeItemDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ChargeItemDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.ChargeItemDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.ChargeItemDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ChargeItemDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.CatalogEntryIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CatalogEntryIxUri", "ix_SearchParamId");
            DropIndex("dbo.CatalogEntryIxUri", "ix_Uri");
            DropIndex("dbo.CatalogEntryIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CatalogEntryIxTok", "ix_SearchParamId");
            DropIndex("dbo.CatalogEntryIxTok", "ix_System");
            DropIndex("dbo.CatalogEntryIxTok", "ix_Code");
            DropIndex("dbo.CatalogEntryIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CatalogEntryIxStr", "ix_SearchParamId");
            DropIndex("dbo.CatalogEntryIxStr", "ix_String");
            DropIndex("dbo.CatalogEntryIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CatalogEntryIxRef", "ix_SearchParamId");
            DropIndex("dbo.CatalogEntryIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CatalogEntryIxRef", "ix_RefFhirId");
            DropIndex("dbo.CatalogEntryIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CatalogEntryIxQty", "ix_SearchParamId");
            DropIndex("dbo.CatalogEntryIxQty", "ix_System");
            DropIndex("dbo.CatalogEntryIxQty", "ix_Code");
            DropIndex("dbo.CatalogEntryIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CatalogEntryIxDT", "ix_SearchParamId");
            DropIndex("dbo.CatalogEntryIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CatalogEntryIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CatalogEntryRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CatalogEntryRes", "ix_LastUpdated");
            DropIndex("dbo.CatalogEntryRes", "ix_IsDeleted");
            DropIndex("dbo.CatalogEntryRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CatalogEntryRes", "ix_IsCurrent");
            DropIndex("dbo.CareTeamIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CareTeamIxUri", "ix_SearchParamId");
            DropIndex("dbo.CareTeamIxUri", "ix_Uri");
            DropIndex("dbo.CareTeamIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CareTeamIxTok", "ix_SearchParamId");
            DropIndex("dbo.CareTeamIxTok", "ix_System");
            DropIndex("dbo.CareTeamIxTok", "ix_Code");
            DropIndex("dbo.CareTeamIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CareTeamIxStr", "ix_SearchParamId");
            DropIndex("dbo.CareTeamIxStr", "ix_String");
            DropIndex("dbo.CareTeamIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CareTeamIxRef", "ix_SearchParamId");
            DropIndex("dbo.CareTeamIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CareTeamIxRef", "ix_RefFhirId");
            DropIndex("dbo.CareTeamIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CareTeamIxQty", "ix_SearchParamId");
            DropIndex("dbo.CareTeamIxQty", "ix_System");
            DropIndex("dbo.CareTeamIxQty", "ix_Code");
            DropIndex("dbo.CareTeamIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CareTeamIxDT", "ix_SearchParamId");
            DropIndex("dbo.CareTeamIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CareTeamIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CareTeamRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CareTeamRes", "ix_LastUpdated");
            DropIndex("dbo.CareTeamRes", "ix_IsDeleted");
            DropIndex("dbo.CareTeamRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CareTeamRes", "ix_IsCurrent");
            DropIndex("dbo.CarePlanIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CarePlanIxUri", "ix_SearchParamId");
            DropIndex("dbo.CarePlanIxUri", "ix_Uri");
            DropIndex("dbo.CarePlanIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CarePlanIxTok", "ix_SearchParamId");
            DropIndex("dbo.CarePlanIxTok", "ix_System");
            DropIndex("dbo.CarePlanIxTok", "ix_Code");
            DropIndex("dbo.CarePlanIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CarePlanIxStr", "ix_SearchParamId");
            DropIndex("dbo.CarePlanIxStr", "ix_String");
            DropIndex("dbo.CarePlanIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CarePlanIxRef", "ix_SearchParamId");
            DropIndex("dbo.CarePlanIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CarePlanIxRef", "ix_RefFhirId");
            DropIndex("dbo.CarePlanIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CarePlanIxQty", "ix_SearchParamId");
            DropIndex("dbo.CarePlanIxQty", "ix_System");
            DropIndex("dbo.CarePlanIxQty", "ix_Code");
            DropIndex("dbo.CarePlanIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CarePlanIxDT", "ix_SearchParamId");
            DropIndex("dbo.CarePlanIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CarePlanIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CarePlanRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CarePlanRes", "ix_LastUpdated");
            DropIndex("dbo.CarePlanRes", "ix_IsDeleted");
            DropIndex("dbo.CarePlanRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CarePlanRes", "ix_IsCurrent");
            DropIndex("dbo.CapabilityStatementIxUri", new[] { "ResourceId" });
            DropIndex("dbo.CapabilityStatementIxUri", "ix_SearchParamId");
            DropIndex("dbo.CapabilityStatementIxUri", "ix_Uri");
            DropIndex("dbo.CapabilityStatementIxTok", new[] { "ResourceId" });
            DropIndex("dbo.CapabilityStatementIxTok", "ix_SearchParamId");
            DropIndex("dbo.CapabilityStatementIxTok", "ix_System");
            DropIndex("dbo.CapabilityStatementIxTok", "ix_Code");
            DropIndex("dbo.CapabilityStatementIxStr", new[] { "ResourceId" });
            DropIndex("dbo.CapabilityStatementIxStr", "ix_SearchParamId");
            DropIndex("dbo.CapabilityStatementIxStr", "ix_String");
            DropIndex("dbo.CapabilityStatementIxRef", new[] { "ResourceId" });
            DropIndex("dbo.CapabilityStatementIxRef", "ix_SearchParamId");
            DropIndex("dbo.CapabilityStatementIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.CapabilityStatementIxRef", "ix_RefFhirId");
            DropIndex("dbo.CapabilityStatementIxQty", new[] { "ResourceId" });
            DropIndex("dbo.CapabilityStatementIxQty", "ix_SearchParamId");
            DropIndex("dbo.CapabilityStatementIxQty", "ix_System");
            DropIndex("dbo.CapabilityStatementIxQty", "ix_Code");
            DropIndex("dbo.CapabilityStatementIxDT", new[] { "ResourceId" });
            DropIndex("dbo.CapabilityStatementIxDT", "ix_SearchParamId");
            DropIndex("dbo.CapabilityStatementIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.CapabilityStatementIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.CapabilityStatementRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.CapabilityStatementRes", "ix_LastUpdated");
            DropIndex("dbo.CapabilityStatementRes", "ix_IsDeleted");
            DropIndex("dbo.CapabilityStatementRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.CapabilityStatementRes", "ix_IsCurrent");
            DropIndex("dbo.BundleIxUri", new[] { "ResourceId" });
            DropIndex("dbo.BundleIxUri", "ix_SearchParamId");
            DropIndex("dbo.BundleIxUri", "ix_Uri");
            DropIndex("dbo.BundleIxTok", new[] { "ResourceId" });
            DropIndex("dbo.BundleIxTok", "ix_SearchParamId");
            DropIndex("dbo.BundleIxTok", "ix_System");
            DropIndex("dbo.BundleIxTok", "ix_Code");
            DropIndex("dbo.BundleIxStr", new[] { "ResourceId" });
            DropIndex("dbo.BundleIxStr", "ix_SearchParamId");
            DropIndex("dbo.BundleIxStr", "ix_String");
            DropIndex("dbo.BundleIxRef", new[] { "ResourceId" });
            DropIndex("dbo.BundleIxRef", "ix_SearchParamId");
            DropIndex("dbo.BundleIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.BundleIxRef", "ix_RefFhirId");
            DropIndex("dbo.BundleIxQty", new[] { "ResourceId" });
            DropIndex("dbo.BundleIxQty", "ix_SearchParamId");
            DropIndex("dbo.BundleIxQty", "ix_System");
            DropIndex("dbo.BundleIxQty", "ix_Code");
            DropIndex("dbo.BundleIxDT", new[] { "ResourceId" });
            DropIndex("dbo.BundleIxDT", "ix_SearchParamId");
            DropIndex("dbo.BundleIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.BundleIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.BundleRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.BundleRes", "ix_LastUpdated");
            DropIndex("dbo.BundleRes", "ix_IsDeleted");
            DropIndex("dbo.BundleRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.BundleRes", "ix_IsCurrent");
            DropIndex("dbo.BodyStructureIxUri", new[] { "ResourceId" });
            DropIndex("dbo.BodyStructureIxUri", "ix_SearchParamId");
            DropIndex("dbo.BodyStructureIxUri", "ix_Uri");
            DropIndex("dbo.BodyStructureIxTok", new[] { "ResourceId" });
            DropIndex("dbo.BodyStructureIxTok", "ix_SearchParamId");
            DropIndex("dbo.BodyStructureIxTok", "ix_System");
            DropIndex("dbo.BodyStructureIxTok", "ix_Code");
            DropIndex("dbo.BodyStructureIxStr", new[] { "ResourceId" });
            DropIndex("dbo.BodyStructureIxStr", "ix_SearchParamId");
            DropIndex("dbo.BodyStructureIxStr", "ix_String");
            DropIndex("dbo.BodyStructureIxRef", new[] { "ResourceId" });
            DropIndex("dbo.BodyStructureIxRef", "ix_SearchParamId");
            DropIndex("dbo.BodyStructureIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.BodyStructureIxRef", "ix_RefFhirId");
            DropIndex("dbo.BodyStructureIxQty", new[] { "ResourceId" });
            DropIndex("dbo.BodyStructureIxQty", "ix_SearchParamId");
            DropIndex("dbo.BodyStructureIxQty", "ix_System");
            DropIndex("dbo.BodyStructureIxQty", "ix_Code");
            DropIndex("dbo.BodyStructureIxDT", new[] { "ResourceId" });
            DropIndex("dbo.BodyStructureIxDT", "ix_SearchParamId");
            DropIndex("dbo.BodyStructureIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.BodyStructureIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.BodyStructureRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.BodyStructureRes", "ix_LastUpdated");
            DropIndex("dbo.BodyStructureRes", "ix_IsDeleted");
            DropIndex("dbo.BodyStructureRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.BodyStructureRes", "ix_IsCurrent");
            DropIndex("dbo.BiologicallyDerivedProductIxUri", new[] { "ResourceId" });
            DropIndex("dbo.BiologicallyDerivedProductIxUri", "ix_SearchParamId");
            DropIndex("dbo.BiologicallyDerivedProductIxUri", "ix_Uri");
            DropIndex("dbo.BiologicallyDerivedProductIxTok", new[] { "ResourceId" });
            DropIndex("dbo.BiologicallyDerivedProductIxTok", "ix_SearchParamId");
            DropIndex("dbo.BiologicallyDerivedProductIxTok", "ix_System");
            DropIndex("dbo.BiologicallyDerivedProductIxTok", "ix_Code");
            DropIndex("dbo.BiologicallyDerivedProductIxStr", new[] { "ResourceId" });
            DropIndex("dbo.BiologicallyDerivedProductIxStr", "ix_SearchParamId");
            DropIndex("dbo.BiologicallyDerivedProductIxStr", "ix_String");
            DropIndex("dbo.BiologicallyDerivedProductIxRef", new[] { "ResourceId" });
            DropIndex("dbo.BiologicallyDerivedProductIxRef", "ix_SearchParamId");
            DropIndex("dbo.BiologicallyDerivedProductIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.BiologicallyDerivedProductIxRef", "ix_RefFhirId");
            DropIndex("dbo.BiologicallyDerivedProductIxQty", new[] { "ResourceId" });
            DropIndex("dbo.BiologicallyDerivedProductIxQty", "ix_SearchParamId");
            DropIndex("dbo.BiologicallyDerivedProductIxQty", "ix_System");
            DropIndex("dbo.BiologicallyDerivedProductIxQty", "ix_Code");
            DropIndex("dbo.BiologicallyDerivedProductIxDT", new[] { "ResourceId" });
            DropIndex("dbo.BiologicallyDerivedProductIxDT", "ix_SearchParamId");
            DropIndex("dbo.BiologicallyDerivedProductIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.BiologicallyDerivedProductIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.BiologicallyDerivedProductRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.BiologicallyDerivedProductRes", "ix_LastUpdated");
            DropIndex("dbo.BiologicallyDerivedProductRes", "ix_IsDeleted");
            DropIndex("dbo.BiologicallyDerivedProductRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.BiologicallyDerivedProductRes", "ix_IsCurrent");
            DropIndex("dbo.BinaryIxUri", new[] { "ResourceId" });
            DropIndex("dbo.BinaryIxUri", "ix_SearchParamId");
            DropIndex("dbo.BinaryIxUri", "ix_Uri");
            DropIndex("dbo.BinaryIxTok", new[] { "ResourceId" });
            DropIndex("dbo.BinaryIxTok", "ix_SearchParamId");
            DropIndex("dbo.BinaryIxTok", "ix_System");
            DropIndex("dbo.BinaryIxTok", "ix_Code");
            DropIndex("dbo.BinaryIxStr", new[] { "ResourceId" });
            DropIndex("dbo.BinaryIxStr", "ix_SearchParamId");
            DropIndex("dbo.BinaryIxStr", "ix_String");
            DropIndex("dbo.BinaryIxRef", new[] { "ResourceId" });
            DropIndex("dbo.BinaryIxRef", "ix_SearchParamId");
            DropIndex("dbo.BinaryIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.BinaryIxRef", "ix_RefFhirId");
            DropIndex("dbo.BinaryIxQty", new[] { "ResourceId" });
            DropIndex("dbo.BinaryIxQty", "ix_SearchParamId");
            DropIndex("dbo.BinaryIxQty", "ix_System");
            DropIndex("dbo.BinaryIxQty", "ix_Code");
            DropIndex("dbo.BinaryIxDT", new[] { "ResourceId" });
            DropIndex("dbo.BinaryIxDT", "ix_SearchParamId");
            DropIndex("dbo.BinaryIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.BinaryIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.BinaryRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.BinaryRes", "ix_LastUpdated");
            DropIndex("dbo.BinaryRes", "ix_IsDeleted");
            DropIndex("dbo.BinaryRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.BinaryRes", "ix_IsCurrent");
            DropIndex("dbo.BasicIxUri", new[] { "ResourceId" });
            DropIndex("dbo.BasicIxUri", "ix_SearchParamId");
            DropIndex("dbo.BasicIxUri", "ix_Uri");
            DropIndex("dbo.BasicIxTok", new[] { "ResourceId" });
            DropIndex("dbo.BasicIxTok", "ix_SearchParamId");
            DropIndex("dbo.BasicIxTok", "ix_System");
            DropIndex("dbo.BasicIxTok", "ix_Code");
            DropIndex("dbo.BasicIxStr", new[] { "ResourceId" });
            DropIndex("dbo.BasicIxStr", "ix_SearchParamId");
            DropIndex("dbo.BasicIxStr", "ix_String");
            DropIndex("dbo.BasicIxRef", new[] { "ResourceId" });
            DropIndex("dbo.BasicIxRef", "ix_SearchParamId");
            DropIndex("dbo.BasicIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.BasicIxRef", "ix_RefFhirId");
            DropIndex("dbo.BasicIxQty", new[] { "ResourceId" });
            DropIndex("dbo.BasicIxQty", "ix_SearchParamId");
            DropIndex("dbo.BasicIxQty", "ix_System");
            DropIndex("dbo.BasicIxQty", "ix_Code");
            DropIndex("dbo.BasicIxDT", new[] { "ResourceId" });
            DropIndex("dbo.BasicIxDT", "ix_SearchParamId");
            DropIndex("dbo.BasicIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.BasicIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.BasicRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.BasicRes", "ix_LastUpdated");
            DropIndex("dbo.BasicRes", "ix_IsDeleted");
            DropIndex("dbo.BasicRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.BasicRes", "ix_IsCurrent");
            DropIndex("dbo.AuditEventIxUri", new[] { "ResourceId" });
            DropIndex("dbo.AuditEventIxUri", "ix_SearchParamId");
            DropIndex("dbo.AuditEventIxUri", "ix_Uri");
            DropIndex("dbo.AuditEventIxTok", new[] { "ResourceId" });
            DropIndex("dbo.AuditEventIxTok", "ix_SearchParamId");
            DropIndex("dbo.AuditEventIxTok", "ix_System");
            DropIndex("dbo.AuditEventIxTok", "ix_Code");
            DropIndex("dbo.AuditEventIxStr", new[] { "ResourceId" });
            DropIndex("dbo.AuditEventIxStr", "ix_SearchParamId");
            DropIndex("dbo.AuditEventIxStr", "ix_String");
            DropIndex("dbo.AuditEventIxRef", new[] { "ResourceId" });
            DropIndex("dbo.AuditEventIxRef", "ix_SearchParamId");
            DropIndex("dbo.AuditEventIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.AuditEventIxRef", "ix_RefFhirId");
            DropIndex("dbo.AuditEventIxQty", new[] { "ResourceId" });
            DropIndex("dbo.AuditEventIxQty", "ix_SearchParamId");
            DropIndex("dbo.AuditEventIxQty", "ix_System");
            DropIndex("dbo.AuditEventIxQty", "ix_Code");
            DropIndex("dbo.AuditEventIxDT", new[] { "ResourceId" });
            DropIndex("dbo.AuditEventIxDT", "ix_SearchParamId");
            DropIndex("dbo.AuditEventIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.AuditEventIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.AuditEventRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.AuditEventRes", "ix_LastUpdated");
            DropIndex("dbo.AuditEventRes", "ix_IsDeleted");
            DropIndex("dbo.AuditEventRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.AuditEventRes", "ix_IsCurrent");
            DropIndex("dbo.AppointmentResponseIxUri", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentResponseIxUri", "ix_SearchParamId");
            DropIndex("dbo.AppointmentResponseIxUri", "ix_Uri");
            DropIndex("dbo.AppointmentResponseIxTok", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentResponseIxTok", "ix_SearchParamId");
            DropIndex("dbo.AppointmentResponseIxTok", "ix_System");
            DropIndex("dbo.AppointmentResponseIxTok", "ix_Code");
            DropIndex("dbo.AppointmentResponseIxStr", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentResponseIxStr", "ix_SearchParamId");
            DropIndex("dbo.AppointmentResponseIxStr", "ix_String");
            DropIndex("dbo.AppointmentResponseIxRef", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentResponseIxRef", "ix_SearchParamId");
            DropIndex("dbo.AppointmentResponseIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.AppointmentResponseIxRef", "ix_RefFhirId");
            DropIndex("dbo.AppointmentResponseIxQty", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentResponseIxQty", "ix_SearchParamId");
            DropIndex("dbo.AppointmentResponseIxQty", "ix_System");
            DropIndex("dbo.AppointmentResponseIxQty", "ix_Code");
            DropIndex("dbo.AppointmentResponseIxDT", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentResponseIxDT", "ix_SearchParamId");
            DropIndex("dbo.AppointmentResponseIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.AppointmentResponseIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.AppointmentResponseRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.AppointmentResponseRes", "ix_LastUpdated");
            DropIndex("dbo.AppointmentResponseRes", "ix_IsDeleted");
            DropIndex("dbo.AppointmentResponseRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.AppointmentResponseRes", "ix_IsCurrent");
            DropIndex("dbo.AppointmentIxUri", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentIxUri", "ix_SearchParamId");
            DropIndex("dbo.AppointmentIxUri", "ix_Uri");
            DropIndex("dbo.AppointmentIxTok", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentIxTok", "ix_SearchParamId");
            DropIndex("dbo.AppointmentIxTok", "ix_System");
            DropIndex("dbo.AppointmentIxTok", "ix_Code");
            DropIndex("dbo.AppointmentIxStr", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentIxStr", "ix_SearchParamId");
            DropIndex("dbo.AppointmentIxStr", "ix_String");
            DropIndex("dbo.AppointmentIxRef", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentIxRef", "ix_SearchParamId");
            DropIndex("dbo.AppointmentIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.AppointmentIxRef", "ix_RefFhirId");
            DropIndex("dbo.AppointmentIxQty", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentIxQty", "ix_SearchParamId");
            DropIndex("dbo.AppointmentIxQty", "ix_System");
            DropIndex("dbo.AppointmentIxQty", "ix_Code");
            DropIndex("dbo.AppointmentIxDT", new[] { "ResourceId" });
            DropIndex("dbo.AppointmentIxDT", "ix_SearchParamId");
            DropIndex("dbo.AppointmentIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.AppointmentIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.AppointmentRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.AppointmentRes", "ix_LastUpdated");
            DropIndex("dbo.AppointmentRes", "ix_IsDeleted");
            DropIndex("dbo.AppointmentRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.AppointmentRes", "ix_IsCurrent");
            DropIndex("dbo.AllergyIntoleranceIxUri", new[] { "ResourceId" });
            DropIndex("dbo.AllergyIntoleranceIxUri", "ix_SearchParamId");
            DropIndex("dbo.AllergyIntoleranceIxUri", "ix_Uri");
            DropIndex("dbo.AllergyIntoleranceIxTok", new[] { "ResourceId" });
            DropIndex("dbo.AllergyIntoleranceIxTok", "ix_SearchParamId");
            DropIndex("dbo.AllergyIntoleranceIxTok", "ix_System");
            DropIndex("dbo.AllergyIntoleranceIxTok", "ix_Code");
            DropIndex("dbo.AllergyIntoleranceIxStr", new[] { "ResourceId" });
            DropIndex("dbo.AllergyIntoleranceIxStr", "ix_SearchParamId");
            DropIndex("dbo.AllergyIntoleranceIxStr", "ix_String");
            DropIndex("dbo.AllergyIntoleranceIxRef", new[] { "ResourceId" });
            DropIndex("dbo.AllergyIntoleranceIxRef", "ix_SearchParamId");
            DropIndex("dbo.AllergyIntoleranceIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.AllergyIntoleranceIxRef", "ix_RefFhirId");
            DropIndex("dbo.AllergyIntoleranceIxQty", new[] { "ResourceId" });
            DropIndex("dbo.AllergyIntoleranceIxQty", "ix_SearchParamId");
            DropIndex("dbo.AllergyIntoleranceIxQty", "ix_System");
            DropIndex("dbo.AllergyIntoleranceIxQty", "ix_Code");
            DropIndex("dbo.AllergyIntoleranceIxDT", new[] { "ResourceId" });
            DropIndex("dbo.AllergyIntoleranceIxDT", "ix_SearchParamId");
            DropIndex("dbo.AllergyIntoleranceIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.AllergyIntoleranceIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.AllergyIntoleranceRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.AllergyIntoleranceRes", "ix_LastUpdated");
            DropIndex("dbo.AllergyIntoleranceRes", "ix_IsDeleted");
            DropIndex("dbo.AllergyIntoleranceRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.AllergyIntoleranceRes", "ix_IsCurrent");
            DropIndex("dbo.AdverseEventIxUri", new[] { "ResourceId" });
            DropIndex("dbo.AdverseEventIxUri", "ix_SearchParamId");
            DropIndex("dbo.AdverseEventIxUri", "ix_Uri");
            DropIndex("dbo.AdverseEventIxTok", new[] { "ResourceId" });
            DropIndex("dbo.AdverseEventIxTok", "ix_SearchParamId");
            DropIndex("dbo.AdverseEventIxTok", "ix_System");
            DropIndex("dbo.AdverseEventIxTok", "ix_Code");
            DropIndex("dbo.AdverseEventIxStr", new[] { "ResourceId" });
            DropIndex("dbo.AdverseEventIxStr", "ix_SearchParamId");
            DropIndex("dbo.AdverseEventIxStr", "ix_String");
            DropIndex("dbo.AdverseEventIxRef", new[] { "ResourceId" });
            DropIndex("dbo.AdverseEventIxRef", "ix_SearchParamId");
            DropIndex("dbo.AdverseEventIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.AdverseEventIxRef", "ix_RefFhirId");
            DropIndex("dbo.AdverseEventIxQty", new[] { "ResourceId" });
            DropIndex("dbo.AdverseEventIxQty", "ix_SearchParamId");
            DropIndex("dbo.AdverseEventIxQty", "ix_System");
            DropIndex("dbo.AdverseEventIxQty", "ix_Code");
            DropIndex("dbo.AdverseEventIxDT", new[] { "ResourceId" });
            DropIndex("dbo.AdverseEventIxDT", "ix_SearchParamId");
            DropIndex("dbo.AdverseEventIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.AdverseEventIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.AdverseEventRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.AdverseEventRes", "ix_LastUpdated");
            DropIndex("dbo.AdverseEventRes", "ix_IsDeleted");
            DropIndex("dbo.AdverseEventRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.AdverseEventRes", "ix_IsCurrent");
            DropIndex("dbo.ActivityDefinitionIxUri", new[] { "ResourceId" });
            DropIndex("dbo.ActivityDefinitionIxUri", "ix_SearchParamId");
            DropIndex("dbo.ActivityDefinitionIxUri", "ix_Uri");
            DropIndex("dbo.ActivityDefinitionIxTok", new[] { "ResourceId" });
            DropIndex("dbo.ActivityDefinitionIxTok", "ix_SearchParamId");
            DropIndex("dbo.ActivityDefinitionIxTok", "ix_System");
            DropIndex("dbo.ActivityDefinitionIxTok", "ix_Code");
            DropIndex("dbo.ActivityDefinitionIxStr", new[] { "ResourceId" });
            DropIndex("dbo.ActivityDefinitionIxStr", "ix_SearchParamId");
            DropIndex("dbo.ActivityDefinitionIxStr", "ix_String");
            DropIndex("dbo._BaseUrl", "ix_Url");
            DropIndex("dbo.ActivityDefinitionIxRef", new[] { "ResourceId" });
            DropIndex("dbo.ActivityDefinitionIxRef", "ix_SearchParamId");
            DropIndex("dbo.ActivityDefinitionIxRef", "ix_RefBaseUrlId");
            DropIndex("dbo.ActivityDefinitionIxRef", "ix_RefFhirId");
            DropIndex("dbo.ActivityDefinitionIxQty", new[] { "ResourceId" });
            DropIndex("dbo.ActivityDefinitionIxQty", "ix_SearchParamId");
            DropIndex("dbo.ActivityDefinitionIxQty", "ix_System");
            DropIndex("dbo.ActivityDefinitionIxQty", "ix_Code");
            DropIndex("dbo._SParamResource", "ix_SearchParamId");
            DropIndex("dbo._SCompositePivot", "ix_ChildParamId");
            DropIndex("dbo._SCompositePivot", "ix_ParentParamId");
            DropIndex("dbo._SearchParam", "ix_Status");
            DropIndex("dbo._SearchParam", "ix_IsIndexed");
            DropIndex("dbo._SearchParam", "uq_ResourceAndName");
            DropIndex("dbo.ActivityDefinitionIxDT", new[] { "ResourceId" });
            DropIndex("dbo.ActivityDefinitionIxDT", "ix_SearchParamId");
            DropIndex("dbo.ActivityDefinitionIxDT", "ix_HighUtcDateTime");
            DropIndex("dbo.ActivityDefinitionIxDT", "ix_LowUtcDateTime");
            DropIndex("dbo.ActivityDefinitionRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.ActivityDefinitionRes", "ix_LastUpdated");
            DropIndex("dbo.ActivityDefinitionRes", "ix_IsDeleted");
            DropIndex("dbo.ActivityDefinitionRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.ActivityDefinitionRes", "ix_IsCurrent");
            DropIndex("dbo.AccountRes", new[] { "FhirReleaseId" });
            DropIndex("dbo.AccountRes", "ix_LastUpdated");
            DropIndex("dbo.AccountRes", "ix_IsDeleted");
            DropIndex("dbo.AccountRes", "uq_FhirIdAndVersionId");
            DropIndex("dbo.AccountRes", "ix_IsCurrent");
            DropTable("dbo._ServConfig");
            DropTable("dbo._CompartmentRes");
            DropTable("dbo._Compartment");
            DropTable("dbo._FhirTaskWorker");
            DropTable("dbo._FhirTaskQueue");
            DropTable("dbo._BackburnerConnection");
            DropTable("dbo.AccountIxUri");
            DropTable("dbo.AccountIxTok");
            DropTable("dbo.AccountIxStr");
            DropTable("dbo.AccountIxRef");
            DropTable("dbo.AccountIxQty");
            DropTable("dbo.AccountIxDT");
            DropTable("dbo.VisionPrescriptionIxUri");
            DropTable("dbo.VisionPrescriptionIxTok");
            DropTable("dbo.VisionPrescriptionIxStr");
            DropTable("dbo.VisionPrescriptionIxRef");
            DropTable("dbo.VisionPrescriptionIxQty");
            DropTable("dbo.VisionPrescriptionIxDT");
            DropTable("dbo.VisionPrescriptionRes");
            DropTable("dbo.VerificationResultIxUri");
            DropTable("dbo.VerificationResultIxTok");
            DropTable("dbo.VerificationResultIxStr");
            DropTable("dbo.VerificationResultIxRef");
            DropTable("dbo.VerificationResultIxQty");
            DropTable("dbo.VerificationResultIxDT");
            DropTable("dbo.VerificationResultRes");
            DropTable("dbo.ValueSetIxUri");
            DropTable("dbo.ValueSetIxTok");
            DropTable("dbo.ValueSetIxStr");
            DropTable("dbo.ValueSetIxRef");
            DropTable("dbo.ValueSetIxQty");
            DropTable("dbo.ValueSetIxDT");
            DropTable("dbo.ValueSetRes");
            DropTable("dbo.TestScriptIxUri");
            DropTable("dbo.TestScriptIxTok");
            DropTable("dbo.TestScriptIxStr");
            DropTable("dbo.TestScriptIxRef");
            DropTable("dbo.TestScriptIxQty");
            DropTable("dbo.TestScriptIxDT");
            DropTable("dbo.TestScriptRes");
            DropTable("dbo.TestReportIxUri");
            DropTable("dbo.TestReportIxTok");
            DropTable("dbo.TestReportIxStr");
            DropTable("dbo.TestReportIxRef");
            DropTable("dbo.TestReportIxQty");
            DropTable("dbo.TestReportIxDT");
            DropTable("dbo.TestReportRes");
            DropTable("dbo.TerminologyCapabilitiesIxUri");
            DropTable("dbo.TerminologyCapabilitiesIxTok");
            DropTable("dbo.TerminologyCapabilitiesIxStr");
            DropTable("dbo.TerminologyCapabilitiesIxRef");
            DropTable("dbo.TerminologyCapabilitiesIxQty");
            DropTable("dbo.TerminologyCapabilitiesIxDT");
            DropTable("dbo.TerminologyCapabilitiesRes");
            DropTable("dbo.TaskIxUri");
            DropTable("dbo.TaskIxTok");
            DropTable("dbo.TaskIxStr");
            DropTable("dbo.TaskIxRef");
            DropTable("dbo.TaskIxQty");
            DropTable("dbo.TaskIxDT");
            DropTable("dbo.TaskRes");
            DropTable("dbo.SupplyRequestIxUri");
            DropTable("dbo.SupplyRequestIxTok");
            DropTable("dbo.SupplyRequestIxStr");
            DropTable("dbo.SupplyRequestIxRef");
            DropTable("dbo.SupplyRequestIxQty");
            DropTable("dbo.SupplyRequestIxDT");
            DropTable("dbo.SupplyRequestRes");
            DropTable("dbo.SupplyDeliveryIxUri");
            DropTable("dbo.SupplyDeliveryIxTok");
            DropTable("dbo.SupplyDeliveryIxStr");
            DropTable("dbo.SupplyDeliveryIxRef");
            DropTable("dbo.SupplyDeliveryIxQty");
            DropTable("dbo.SupplyDeliveryIxDT");
            DropTable("dbo.SupplyDeliveryRes");
            DropTable("dbo.SubstanceSpecificationIxUri");
            DropTable("dbo.SubstanceSpecificationIxTok");
            DropTable("dbo.SubstanceSpecificationIxStr");
            DropTable("dbo.SubstanceSpecificationIxRef");
            DropTable("dbo.SubstanceSpecificationIxQty");
            DropTable("dbo.SubstanceSpecificationIxDT");
            DropTable("dbo.SubstanceSpecificationRes");
            DropTable("dbo.SubstanceSourceMaterialIxUri");
            DropTable("dbo.SubstanceSourceMaterialIxTok");
            DropTable("dbo.SubstanceSourceMaterialIxStr");
            DropTable("dbo.SubstanceSourceMaterialIxRef");
            DropTable("dbo.SubstanceSourceMaterialIxQty");
            DropTable("dbo.SubstanceSourceMaterialIxDT");
            DropTable("dbo.SubstanceSourceMaterialRes");
            DropTable("dbo.SubstanceReferenceInformationIxUri");
            DropTable("dbo.SubstanceReferenceInformationIxTok");
            DropTable("dbo.SubstanceReferenceInformationIxStr");
            DropTable("dbo.SubstanceReferenceInformationIxRef");
            DropTable("dbo.SubstanceReferenceInformationIxQty");
            DropTable("dbo.SubstanceReferenceInformationIxDT");
            DropTable("dbo.SubstanceReferenceInformationRes");
            DropTable("dbo.SubstanceProteinIxUri");
            DropTable("dbo.SubstanceProteinIxTok");
            DropTable("dbo.SubstanceProteinIxStr");
            DropTable("dbo.SubstanceProteinIxRef");
            DropTable("dbo.SubstanceProteinIxQty");
            DropTable("dbo.SubstanceProteinIxDT");
            DropTable("dbo.SubstanceProteinRes");
            DropTable("dbo.SubstancePolymerIxUri");
            DropTable("dbo.SubstancePolymerIxTok");
            DropTable("dbo.SubstancePolymerIxStr");
            DropTable("dbo.SubstancePolymerIxRef");
            DropTable("dbo.SubstancePolymerIxQty");
            DropTable("dbo.SubstancePolymerIxDT");
            DropTable("dbo.SubstancePolymerRes");
            DropTable("dbo.SubstanceNucleicAcidIxUri");
            DropTable("dbo.SubstanceNucleicAcidIxTok");
            DropTable("dbo.SubstanceNucleicAcidIxStr");
            DropTable("dbo.SubstanceNucleicAcidIxRef");
            DropTable("dbo.SubstanceNucleicAcidIxQty");
            DropTable("dbo.SubstanceNucleicAcidIxDT");
            DropTable("dbo.SubstanceNucleicAcidRes");
            DropTable("dbo.SubstanceIxUri");
            DropTable("dbo.SubstanceIxTok");
            DropTable("dbo.SubstanceIxStr");
            DropTable("dbo.SubstanceIxRef");
            DropTable("dbo.SubstanceIxQty");
            DropTable("dbo.SubstanceIxDT");
            DropTable("dbo.SubstanceRes");
            DropTable("dbo.SubscriptionIxUri");
            DropTable("dbo.SubscriptionIxTok");
            DropTable("dbo.SubscriptionIxStr");
            DropTable("dbo.SubscriptionIxRef");
            DropTable("dbo.SubscriptionIxQty");
            DropTable("dbo.SubscriptionIxDT");
            DropTable("dbo.SubscriptionRes");
            DropTable("dbo.StructureMapIxUri");
            DropTable("dbo.StructureMapIxTok");
            DropTable("dbo.StructureMapIxStr");
            DropTable("dbo.StructureMapIxRef");
            DropTable("dbo.StructureMapIxQty");
            DropTable("dbo.StructureMapIxDT");
            DropTable("dbo.StructureMapRes");
            DropTable("dbo.StructureDefinitionIxUri");
            DropTable("dbo.StructureDefinitionIxTok");
            DropTable("dbo.StructureDefinitionIxStr");
            DropTable("dbo.StructureDefinitionIxRef");
            DropTable("dbo.StructureDefinitionIxQty");
            DropTable("dbo.StructureDefinitionIxDT");
            DropTable("dbo.StructureDefinitionRes");
            DropTable("dbo.SpecimenIxUri");
            DropTable("dbo.SpecimenIxTok");
            DropTable("dbo.SpecimenIxStr");
            DropTable("dbo.SpecimenIxRef");
            DropTable("dbo.SpecimenIxQty");
            DropTable("dbo.SpecimenIxDT");
            DropTable("dbo.SpecimenRes");
            DropTable("dbo.SpecimenDefinitionIxUri");
            DropTable("dbo.SpecimenDefinitionIxTok");
            DropTable("dbo.SpecimenDefinitionIxStr");
            DropTable("dbo.SpecimenDefinitionIxRef");
            DropTable("dbo.SpecimenDefinitionIxQty");
            DropTable("dbo.SpecimenDefinitionIxDT");
            DropTable("dbo.SpecimenDefinitionRes");
            DropTable("dbo.SlotIxUri");
            DropTable("dbo.SlotIxTok");
            DropTable("dbo.SlotIxStr");
            DropTable("dbo.SlotIxRef");
            DropTable("dbo.SlotIxQty");
            DropTable("dbo.SlotIxDT");
            DropTable("dbo.SlotRes");
            DropTable("dbo.ServiceRequestIxUri");
            DropTable("dbo.ServiceRequestIxTok");
            DropTable("dbo.ServiceRequestIxStr");
            DropTable("dbo.ServiceRequestIxRef");
            DropTable("dbo.ServiceRequestIxQty");
            DropTable("dbo.ServiceRequestIxDT");
            DropTable("dbo.ServiceRequestRes");
            DropTable("dbo.SearchParameterIxUri");
            DropTable("dbo.SearchParameterIxTok");
            DropTable("dbo.SearchParameterIxStr");
            DropTable("dbo.SearchParameterIxRef");
            DropTable("dbo.SearchParameterIxQty");
            DropTable("dbo.SearchParameterIxDT");
            DropTable("dbo.SearchParameterRes");
            DropTable("dbo.ScheduleIxUri");
            DropTable("dbo.ScheduleIxTok");
            DropTable("dbo.ScheduleIxStr");
            DropTable("dbo.ScheduleIxRef");
            DropTable("dbo.ScheduleIxQty");
            DropTable("dbo.ScheduleIxDT");
            DropTable("dbo.ScheduleRes");
            DropTable("dbo.RiskEvidenceSynthesisIxUri");
            DropTable("dbo.RiskEvidenceSynthesisIxTok");
            DropTable("dbo.RiskEvidenceSynthesisIxStr");
            DropTable("dbo.RiskEvidenceSynthesisIxRef");
            DropTable("dbo.RiskEvidenceSynthesisIxQty");
            DropTable("dbo.RiskEvidenceSynthesisIxDT");
            DropTable("dbo.RiskEvidenceSynthesisRes");
            DropTable("dbo.RiskAssessmentIxUri");
            DropTable("dbo.RiskAssessmentIxTok");
            DropTable("dbo.RiskAssessmentIxStr");
            DropTable("dbo.RiskAssessmentIxRef");
            DropTable("dbo.RiskAssessmentIxQty");
            DropTable("dbo.RiskAssessmentIxDT");
            DropTable("dbo.RiskAssessmentRes");
            DropTable("dbo.ResearchSubjectIxUri");
            DropTable("dbo.ResearchSubjectIxTok");
            DropTable("dbo.ResearchSubjectIxStr");
            DropTable("dbo.ResearchSubjectIxRef");
            DropTable("dbo.ResearchSubjectIxQty");
            DropTable("dbo.ResearchSubjectIxDT");
            DropTable("dbo.ResearchSubjectRes");
            DropTable("dbo.ResearchStudyIxUri");
            DropTable("dbo.ResearchStudyIxTok");
            DropTable("dbo.ResearchStudyIxStr");
            DropTable("dbo.ResearchStudyIxRef");
            DropTable("dbo.ResearchStudyIxQty");
            DropTable("dbo.ResearchStudyIxDT");
            DropTable("dbo.ResearchStudyRes");
            DropTable("dbo.ResearchElementDefinitionIxUri");
            DropTable("dbo.ResearchElementDefinitionIxTok");
            DropTable("dbo.ResearchElementDefinitionIxStr");
            DropTable("dbo.ResearchElementDefinitionIxRef");
            DropTable("dbo.ResearchElementDefinitionIxQty");
            DropTable("dbo.ResearchElementDefinitionIxDT");
            DropTable("dbo.ResearchElementDefinitionRes");
            DropTable("dbo.ResearchDefinitionIxUri");
            DropTable("dbo.ResearchDefinitionIxTok");
            DropTable("dbo.ResearchDefinitionIxStr");
            DropTable("dbo.ResearchDefinitionIxRef");
            DropTable("dbo.ResearchDefinitionIxQty");
            DropTable("dbo.ResearchDefinitionIxDT");
            DropTable("dbo.ResearchDefinitionRes");
            DropTable("dbo.RequestGroupIxUri");
            DropTable("dbo.RequestGroupIxTok");
            DropTable("dbo.RequestGroupIxStr");
            DropTable("dbo.RequestGroupIxRef");
            DropTable("dbo.RequestGroupIxQty");
            DropTable("dbo.RequestGroupIxDT");
            DropTable("dbo.RequestGroupRes");
            DropTable("dbo.RelatedPersonIxUri");
            DropTable("dbo.RelatedPersonIxTok");
            DropTable("dbo.RelatedPersonIxStr");
            DropTable("dbo.RelatedPersonIxRef");
            DropTable("dbo.RelatedPersonIxQty");
            DropTable("dbo.RelatedPersonIxDT");
            DropTable("dbo.RelatedPersonRes");
            DropTable("dbo.QuestionnaireResponseIxUri");
            DropTable("dbo.QuestionnaireResponseIxTok");
            DropTable("dbo.QuestionnaireResponseIxStr");
            DropTable("dbo.QuestionnaireResponseIxRef");
            DropTable("dbo.QuestionnaireResponseIxQty");
            DropTable("dbo.QuestionnaireResponseIxDT");
            DropTable("dbo.QuestionnaireResponseRes");
            DropTable("dbo.QuestionnaireIxUri");
            DropTable("dbo.QuestionnaireIxTok");
            DropTable("dbo.QuestionnaireIxStr");
            DropTable("dbo.QuestionnaireIxRef");
            DropTable("dbo.QuestionnaireIxQty");
            DropTable("dbo.QuestionnaireIxDT");
            DropTable("dbo.QuestionnaireRes");
            DropTable("dbo.ProvenanceIxUri");
            DropTable("dbo.ProvenanceIxTok");
            DropTable("dbo.ProvenanceIxStr");
            DropTable("dbo.ProvenanceIxRef");
            DropTable("dbo.ProvenanceIxQty");
            DropTable("dbo.ProvenanceIxDT");
            DropTable("dbo.ProvenanceRes");
            DropTable("dbo.ProcedureIxUri");
            DropTable("dbo.ProcedureIxTok");
            DropTable("dbo.ProcedureIxStr");
            DropTable("dbo.ProcedureIxRef");
            DropTable("dbo.ProcedureIxQty");
            DropTable("dbo.ProcedureIxDT");
            DropTable("dbo.ProcedureRes");
            DropTable("dbo.PractitionerRoleIxUri");
            DropTable("dbo.PractitionerRoleIxTok");
            DropTable("dbo.PractitionerRoleIxStr");
            DropTable("dbo.PractitionerRoleIxRef");
            DropTable("dbo.PractitionerRoleIxQty");
            DropTable("dbo.PractitionerRoleIxDT");
            DropTable("dbo.PractitionerRoleRes");
            DropTable("dbo.PractitionerIxUri");
            DropTable("dbo.PractitionerIxTok");
            DropTable("dbo.PractitionerIxStr");
            DropTable("dbo.PractitionerIxRef");
            DropTable("dbo.PractitionerIxQty");
            DropTable("dbo.PractitionerIxDT");
            DropTable("dbo.PractitionerRes");
            DropTable("dbo.PlanDefinitionIxUri");
            DropTable("dbo.PlanDefinitionIxTok");
            DropTable("dbo.PlanDefinitionIxStr");
            DropTable("dbo.PlanDefinitionIxRef");
            DropTable("dbo.PlanDefinitionIxQty");
            DropTable("dbo.PlanDefinitionIxDT");
            DropTable("dbo.PlanDefinitionRes");
            DropTable("dbo.PersonIxUri");
            DropTable("dbo.PersonIxTok");
            DropTable("dbo.PersonIxStr");
            DropTable("dbo.PersonIxRef");
            DropTable("dbo.PersonIxQty");
            DropTable("dbo.PersonIxDT");
            DropTable("dbo.PersonRes");
            DropTable("dbo.PaymentReconciliationIxUri");
            DropTable("dbo.PaymentReconciliationIxTok");
            DropTable("dbo.PaymentReconciliationIxStr");
            DropTable("dbo.PaymentReconciliationIxRef");
            DropTable("dbo.PaymentReconciliationIxQty");
            DropTable("dbo.PaymentReconciliationIxDT");
            DropTable("dbo.PaymentReconciliationRes");
            DropTable("dbo.PaymentNoticeIxUri");
            DropTable("dbo.PaymentNoticeIxTok");
            DropTable("dbo.PaymentNoticeIxStr");
            DropTable("dbo.PaymentNoticeIxRef");
            DropTable("dbo.PaymentNoticeIxQty");
            DropTable("dbo.PaymentNoticeIxDT");
            DropTable("dbo.PaymentNoticeRes");
            DropTable("dbo.PatientIxUri");
            DropTable("dbo.PatientIxTok");
            DropTable("dbo.PatientIxStr");
            DropTable("dbo.PatientIxRef");
            DropTable("dbo.PatientIxQty");
            DropTable("dbo.PatientIxDT");
            DropTable("dbo.PatientRes");
            DropTable("dbo.ParametersIxUri");
            DropTable("dbo.ParametersIxTok");
            DropTable("dbo.ParametersIxStr");
            DropTable("dbo.ParametersIxRef");
            DropTable("dbo.ParametersIxQty");
            DropTable("dbo.ParametersIxDT");
            DropTable("dbo.ParametersRes");
            DropTable("dbo.OrganizationIxUri");
            DropTable("dbo.OrganizationIxTok");
            DropTable("dbo.OrganizationIxStr");
            DropTable("dbo.OrganizationIxRef");
            DropTable("dbo.OrganizationIxQty");
            DropTable("dbo.OrganizationIxDT");
            DropTable("dbo.OrganizationRes");
            DropTable("dbo.OrganizationAffiliationIxUri");
            DropTable("dbo.OrganizationAffiliationIxTok");
            DropTable("dbo.OrganizationAffiliationIxStr");
            DropTable("dbo.OrganizationAffiliationIxRef");
            DropTable("dbo.OrganizationAffiliationIxQty");
            DropTable("dbo.OrganizationAffiliationIxDT");
            DropTable("dbo.OrganizationAffiliationRes");
            DropTable("dbo.OperationOutcomeIxUri");
            DropTable("dbo.OperationOutcomeIxTok");
            DropTable("dbo.OperationOutcomeIxStr");
            DropTable("dbo.OperationOutcomeIxRef");
            DropTable("dbo.OperationOutcomeIxQty");
            DropTable("dbo.OperationOutcomeIxDT");
            DropTable("dbo.OperationOutcomeRes");
            DropTable("dbo.OperationDefinitionIxUri");
            DropTable("dbo.OperationDefinitionIxTok");
            DropTable("dbo.OperationDefinitionIxStr");
            DropTable("dbo.OperationDefinitionIxRef");
            DropTable("dbo.OperationDefinitionIxQty");
            DropTable("dbo.OperationDefinitionIxDT");
            DropTable("dbo.OperationDefinitionRes");
            DropTable("dbo.ObservationIxUri");
            DropTable("dbo.ObservationIxTok");
            DropTable("dbo.ObservationIxStr");
            DropTable("dbo.ObservationIxRef");
            DropTable("dbo.ObservationIxQty");
            DropTable("dbo.ObservationIxDT");
            DropTable("dbo.ObservationRes");
            DropTable("dbo.ObservationDefinitionIxUri");
            DropTable("dbo.ObservationDefinitionIxTok");
            DropTable("dbo.ObservationDefinitionIxStr");
            DropTable("dbo.ObservationDefinitionIxRef");
            DropTable("dbo.ObservationDefinitionIxQty");
            DropTable("dbo.ObservationDefinitionIxDT");
            DropTable("dbo.ObservationDefinitionRes");
            DropTable("dbo.NutritionOrderIxUri");
            DropTable("dbo.NutritionOrderIxTok");
            DropTable("dbo.NutritionOrderIxStr");
            DropTable("dbo.NutritionOrderIxRef");
            DropTable("dbo.NutritionOrderIxQty");
            DropTable("dbo.NutritionOrderIxDT");
            DropTable("dbo.NutritionOrderRes");
            DropTable("dbo.NamingSystemIxUri");
            DropTable("dbo.NamingSystemIxTok");
            DropTable("dbo.NamingSystemIxStr");
            DropTable("dbo.NamingSystemIxRef");
            DropTable("dbo.NamingSystemIxQty");
            DropTable("dbo.NamingSystemIxDT");
            DropTable("dbo.NamingSystemRes");
            DropTable("dbo.MolecularSequenceIxUri");
            DropTable("dbo.MolecularSequenceIxTok");
            DropTable("dbo.MolecularSequenceIxStr");
            DropTable("dbo.MolecularSequenceIxRef");
            DropTable("dbo.MolecularSequenceIxQty");
            DropTable("dbo.MolecularSequenceIxDT");
            DropTable("dbo.MolecularSequenceRes");
            DropTable("dbo.MessageHeaderIxUri");
            DropTable("dbo.MessageHeaderIxTok");
            DropTable("dbo.MessageHeaderIxStr");
            DropTable("dbo.MessageHeaderIxRef");
            DropTable("dbo.MessageHeaderIxQty");
            DropTable("dbo.MessageHeaderIxDT");
            DropTable("dbo.MessageHeaderRes");
            DropTable("dbo.MessageDefinitionIxUri");
            DropTable("dbo.MessageDefinitionIxTok");
            DropTable("dbo.MessageDefinitionIxStr");
            DropTable("dbo.MessageDefinitionIxRef");
            DropTable("dbo.MessageDefinitionIxQty");
            DropTable("dbo.MessageDefinitionIxDT");
            DropTable("dbo.MessageDefinitionRes");
            DropTable("dbo.MedicinalProductUndesirableEffectIxUri");
            DropTable("dbo.MedicinalProductUndesirableEffectIxTok");
            DropTable("dbo.MedicinalProductUndesirableEffectIxStr");
            DropTable("dbo.MedicinalProductUndesirableEffectIxRef");
            DropTable("dbo.MedicinalProductUndesirableEffectIxQty");
            DropTable("dbo.MedicinalProductUndesirableEffectIxDT");
            DropTable("dbo.MedicinalProductUndesirableEffectRes");
            DropTable("dbo.MedicinalProductPharmaceuticalIxUri");
            DropTable("dbo.MedicinalProductPharmaceuticalIxTok");
            DropTable("dbo.MedicinalProductPharmaceuticalIxStr");
            DropTable("dbo.MedicinalProductPharmaceuticalIxRef");
            DropTable("dbo.MedicinalProductPharmaceuticalIxQty");
            DropTable("dbo.MedicinalProductPharmaceuticalIxDT");
            DropTable("dbo.MedicinalProductPharmaceuticalRes");
            DropTable("dbo.MedicinalProductPackagedIxUri");
            DropTable("dbo.MedicinalProductPackagedIxTok");
            DropTable("dbo.MedicinalProductPackagedIxStr");
            DropTable("dbo.MedicinalProductPackagedIxRef");
            DropTable("dbo.MedicinalProductPackagedIxQty");
            DropTable("dbo.MedicinalProductPackagedIxDT");
            DropTable("dbo.MedicinalProductPackagedRes");
            DropTable("dbo.MedicinalProductManufacturedIxUri");
            DropTable("dbo.MedicinalProductManufacturedIxTok");
            DropTable("dbo.MedicinalProductManufacturedIxStr");
            DropTable("dbo.MedicinalProductManufacturedIxRef");
            DropTable("dbo.MedicinalProductManufacturedIxQty");
            DropTable("dbo.MedicinalProductManufacturedIxDT");
            DropTable("dbo.MedicinalProductManufacturedRes");
            DropTable("dbo.MedicinalProductIxUri");
            DropTable("dbo.MedicinalProductIxTok");
            DropTable("dbo.MedicinalProductIxStr");
            DropTable("dbo.MedicinalProductIxRef");
            DropTable("dbo.MedicinalProductIxQty");
            DropTable("dbo.MedicinalProductIxDT");
            DropTable("dbo.MedicinalProductRes");
            DropTable("dbo.MedicinalProductInteractionIxUri");
            DropTable("dbo.MedicinalProductInteractionIxTok");
            DropTable("dbo.MedicinalProductInteractionIxStr");
            DropTable("dbo.MedicinalProductInteractionIxRef");
            DropTable("dbo.MedicinalProductInteractionIxQty");
            DropTable("dbo.MedicinalProductInteractionIxDT");
            DropTable("dbo.MedicinalProductInteractionRes");
            DropTable("dbo.MedicinalProductIngredientIxUri");
            DropTable("dbo.MedicinalProductIngredientIxTok");
            DropTable("dbo.MedicinalProductIngredientIxStr");
            DropTable("dbo.MedicinalProductIngredientIxRef");
            DropTable("dbo.MedicinalProductIngredientIxQty");
            DropTable("dbo.MedicinalProductIngredientIxDT");
            DropTable("dbo.MedicinalProductIngredientRes");
            DropTable("dbo.MedicinalProductIndicationIxUri");
            DropTable("dbo.MedicinalProductIndicationIxTok");
            DropTable("dbo.MedicinalProductIndicationIxStr");
            DropTable("dbo.MedicinalProductIndicationIxRef");
            DropTable("dbo.MedicinalProductIndicationIxQty");
            DropTable("dbo.MedicinalProductIndicationIxDT");
            DropTable("dbo.MedicinalProductIndicationRes");
            DropTable("dbo.MedicinalProductContraindicationIxUri");
            DropTable("dbo.MedicinalProductContraindicationIxTok");
            DropTable("dbo.MedicinalProductContraindicationIxStr");
            DropTable("dbo.MedicinalProductContraindicationIxRef");
            DropTable("dbo.MedicinalProductContraindicationIxQty");
            DropTable("dbo.MedicinalProductContraindicationIxDT");
            DropTable("dbo.MedicinalProductContraindicationRes");
            DropTable("dbo.MedicinalProductAuthorizationIxUri");
            DropTable("dbo.MedicinalProductAuthorizationIxTok");
            DropTable("dbo.MedicinalProductAuthorizationIxStr");
            DropTable("dbo.MedicinalProductAuthorizationIxRef");
            DropTable("dbo.MedicinalProductAuthorizationIxQty");
            DropTable("dbo.MedicinalProductAuthorizationIxDT");
            DropTable("dbo.MedicinalProductAuthorizationRes");
            DropTable("dbo.MedicationStatementIxUri");
            DropTable("dbo.MedicationStatementIxTok");
            DropTable("dbo.MedicationStatementIxStr");
            DropTable("dbo.MedicationStatementIxRef");
            DropTable("dbo.MedicationStatementIxQty");
            DropTable("dbo.MedicationStatementIxDT");
            DropTable("dbo.MedicationStatementRes");
            DropTable("dbo.MedicationRequestIxUri");
            DropTable("dbo.MedicationRequestIxTok");
            DropTable("dbo.MedicationRequestIxStr");
            DropTable("dbo.MedicationRequestIxRef");
            DropTable("dbo.MedicationRequestIxQty");
            DropTable("dbo.MedicationRequestIxDT");
            DropTable("dbo.MedicationRequestRes");
            DropTable("dbo.MedicationIxUri");
            DropTable("dbo.MedicationIxTok");
            DropTable("dbo.MedicationIxStr");
            DropTable("dbo.MedicationIxRef");
            DropTable("dbo.MedicationIxQty");
            DropTable("dbo.MedicationIxDT");
            DropTable("dbo.MedicationRes");
            DropTable("dbo.MedicationKnowledgeIxUri");
            DropTable("dbo.MedicationKnowledgeIxTok");
            DropTable("dbo.MedicationKnowledgeIxStr");
            DropTable("dbo.MedicationKnowledgeIxRef");
            DropTable("dbo.MedicationKnowledgeIxQty");
            DropTable("dbo.MedicationKnowledgeIxDT");
            DropTable("dbo.MedicationKnowledgeRes");
            DropTable("dbo.MedicationDispenseIxUri");
            DropTable("dbo.MedicationDispenseIxTok");
            DropTable("dbo.MedicationDispenseIxStr");
            DropTable("dbo.MedicationDispenseIxRef");
            DropTable("dbo.MedicationDispenseIxQty");
            DropTable("dbo.MedicationDispenseIxDT");
            DropTable("dbo.MedicationDispenseRes");
            DropTable("dbo.MedicationAdministrationIxUri");
            DropTable("dbo.MedicationAdministrationIxTok");
            DropTable("dbo.MedicationAdministrationIxStr");
            DropTable("dbo.MedicationAdministrationIxRef");
            DropTable("dbo.MedicationAdministrationIxQty");
            DropTable("dbo.MedicationAdministrationIxDT");
            DropTable("dbo.MedicationAdministrationRes");
            DropTable("dbo.MediaIxUri");
            DropTable("dbo.MediaIxTok");
            DropTable("dbo.MediaIxStr");
            DropTable("dbo.MediaIxRef");
            DropTable("dbo.MediaIxQty");
            DropTable("dbo.MediaIxDT");
            DropTable("dbo.MediaRes");
            DropTable("dbo.MeasureReportIxUri");
            DropTable("dbo.MeasureReportIxTok");
            DropTable("dbo.MeasureReportIxStr");
            DropTable("dbo.MeasureReportIxRef");
            DropTable("dbo.MeasureReportIxQty");
            DropTable("dbo.MeasureReportIxDT");
            DropTable("dbo.MeasureReportRes");
            DropTable("dbo.MeasureIxUri");
            DropTable("dbo.MeasureIxTok");
            DropTable("dbo.MeasureIxStr");
            DropTable("dbo.MeasureIxRef");
            DropTable("dbo.MeasureIxQty");
            DropTable("dbo.MeasureIxDT");
            DropTable("dbo.MeasureRes");
            DropTable("dbo.LocationIxUri");
            DropTable("dbo.LocationIxTok");
            DropTable("dbo.LocationIxStr");
            DropTable("dbo.LocationIxRef");
            DropTable("dbo.LocationIxQty");
            DropTable("dbo.LocationIxDT");
            DropTable("dbo.LocationRes");
            DropTable("dbo.ListIxUri");
            DropTable("dbo.ListIxTok");
            DropTable("dbo.ListIxStr");
            DropTable("dbo.ListIxRef");
            DropTable("dbo.ListIxQty");
            DropTable("dbo.ListIxDT");
            DropTable("dbo.ListRes");
            DropTable("dbo.LinkageIxUri");
            DropTable("dbo.LinkageIxTok");
            DropTable("dbo.LinkageIxStr");
            DropTable("dbo.LinkageIxRef");
            DropTable("dbo.LinkageIxQty");
            DropTable("dbo.LinkageIxDT");
            DropTable("dbo.LinkageRes");
            DropTable("dbo.LibraryIxUri");
            DropTable("dbo.LibraryIxTok");
            DropTable("dbo.LibraryIxStr");
            DropTable("dbo.LibraryIxRef");
            DropTable("dbo.LibraryIxQty");
            DropTable("dbo.LibraryIxDT");
            DropTable("dbo.LibraryRes");
            DropTable("dbo.InvoiceIxUri");
            DropTable("dbo.InvoiceIxTok");
            DropTable("dbo.InvoiceIxStr");
            DropTable("dbo.InvoiceIxRef");
            DropTable("dbo.InvoiceIxQty");
            DropTable("dbo.InvoiceIxDT");
            DropTable("dbo.InvoiceRes");
            DropTable("dbo.InsurancePlanIxUri");
            DropTable("dbo.InsurancePlanIxTok");
            DropTable("dbo.InsurancePlanIxStr");
            DropTable("dbo.InsurancePlanIxRef");
            DropTable("dbo.InsurancePlanIxQty");
            DropTable("dbo.InsurancePlanIxDT");
            DropTable("dbo.InsurancePlanRes");
            DropTable("dbo.ImplementationGuideIxUri");
            DropTable("dbo.ImplementationGuideIxTok");
            DropTable("dbo.ImplementationGuideIxStr");
            DropTable("dbo.ImplementationGuideIxRef");
            DropTable("dbo.ImplementationGuideIxQty");
            DropTable("dbo.ImplementationGuideIxDT");
            DropTable("dbo.ImplementationGuideRes");
            DropTable("dbo.ImmunizationRecommendationIxUri");
            DropTable("dbo.ImmunizationRecommendationIxTok");
            DropTable("dbo.ImmunizationRecommendationIxStr");
            DropTable("dbo.ImmunizationRecommendationIxRef");
            DropTable("dbo.ImmunizationRecommendationIxQty");
            DropTable("dbo.ImmunizationRecommendationIxDT");
            DropTable("dbo.ImmunizationRecommendationRes");
            DropTable("dbo.ImmunizationIxUri");
            DropTable("dbo.ImmunizationIxTok");
            DropTable("dbo.ImmunizationIxStr");
            DropTable("dbo.ImmunizationIxRef");
            DropTable("dbo.ImmunizationIxQty");
            DropTable("dbo.ImmunizationIxDT");
            DropTable("dbo.ImmunizationRes");
            DropTable("dbo.ImmunizationEvaluationIxUri");
            DropTable("dbo.ImmunizationEvaluationIxTok");
            DropTable("dbo.ImmunizationEvaluationIxStr");
            DropTable("dbo.ImmunizationEvaluationIxRef");
            DropTable("dbo.ImmunizationEvaluationIxQty");
            DropTable("dbo.ImmunizationEvaluationIxDT");
            DropTable("dbo.ImmunizationEvaluationRes");
            DropTable("dbo.ImagingStudyIxUri");
            DropTable("dbo.ImagingStudyIxTok");
            DropTable("dbo.ImagingStudyIxStr");
            DropTable("dbo.ImagingStudyIxRef");
            DropTable("dbo.ImagingStudyIxQty");
            DropTable("dbo.ImagingStudyIxDT");
            DropTable("dbo.ImagingStudyRes");
            DropTable("dbo.HealthcareServiceIxUri");
            DropTable("dbo.HealthcareServiceIxTok");
            DropTable("dbo.HealthcareServiceIxStr");
            DropTable("dbo.HealthcareServiceIxRef");
            DropTable("dbo.HealthcareServiceIxQty");
            DropTable("dbo.HealthcareServiceIxDT");
            DropTable("dbo.HealthcareServiceRes");
            DropTable("dbo.GuidanceResponseIxUri");
            DropTable("dbo.GuidanceResponseIxTok");
            DropTable("dbo.GuidanceResponseIxStr");
            DropTable("dbo.GuidanceResponseIxRef");
            DropTable("dbo.GuidanceResponseIxQty");
            DropTable("dbo.GuidanceResponseIxDT");
            DropTable("dbo.GuidanceResponseRes");
            DropTable("dbo.GroupIxUri");
            DropTable("dbo.GroupIxTok");
            DropTable("dbo.GroupIxStr");
            DropTable("dbo.GroupIxRef");
            DropTable("dbo.GroupIxQty");
            DropTable("dbo.GroupIxDT");
            DropTable("dbo.GroupRes");
            DropTable("dbo.GraphDefinitionIxUri");
            DropTable("dbo.GraphDefinitionIxTok");
            DropTable("dbo.GraphDefinitionIxStr");
            DropTable("dbo.GraphDefinitionIxRef");
            DropTable("dbo.GraphDefinitionIxQty");
            DropTable("dbo.GraphDefinitionIxDT");
            DropTable("dbo.GraphDefinitionRes");
            DropTable("dbo.GoalIxUri");
            DropTable("dbo.GoalIxTok");
            DropTable("dbo.GoalIxStr");
            DropTable("dbo.GoalIxRef");
            DropTable("dbo.GoalIxQty");
            DropTable("dbo.GoalIxDT");
            DropTable("dbo.GoalRes");
            DropTable("dbo.FlagIxUri");
            DropTable("dbo.FlagIxTok");
            DropTable("dbo.FlagIxStr");
            DropTable("dbo.FlagIxRef");
            DropTable("dbo.FlagIxQty");
            DropTable("dbo.FlagIxDT");
            DropTable("dbo.FlagRes");
            DropTable("dbo.FamilyMemberHistoryIxUri");
            DropTable("dbo.FamilyMemberHistoryIxTok");
            DropTable("dbo.FamilyMemberHistoryIxStr");
            DropTable("dbo.FamilyMemberHistoryIxRef");
            DropTable("dbo.FamilyMemberHistoryIxQty");
            DropTable("dbo.FamilyMemberHistoryIxDT");
            DropTable("dbo.FamilyMemberHistoryRes");
            DropTable("dbo.ExplanationOfBenefitIxUri");
            DropTable("dbo.ExplanationOfBenefitIxTok");
            DropTable("dbo.ExplanationOfBenefitIxStr");
            DropTable("dbo.ExplanationOfBenefitIxRef");
            DropTable("dbo.ExplanationOfBenefitIxQty");
            DropTable("dbo.ExplanationOfBenefitIxDT");
            DropTable("dbo.ExplanationOfBenefitRes");
            DropTable("dbo.ExampleScenarioIxUri");
            DropTable("dbo.ExampleScenarioIxTok");
            DropTable("dbo.ExampleScenarioIxStr");
            DropTable("dbo.ExampleScenarioIxRef");
            DropTable("dbo.ExampleScenarioIxQty");
            DropTable("dbo.ExampleScenarioIxDT");
            DropTable("dbo.ExampleScenarioRes");
            DropTable("dbo.EvidenceVariableIxUri");
            DropTable("dbo.EvidenceVariableIxTok");
            DropTable("dbo.EvidenceVariableIxStr");
            DropTable("dbo.EvidenceVariableIxRef");
            DropTable("dbo.EvidenceVariableIxQty");
            DropTable("dbo.EvidenceVariableIxDT");
            DropTable("dbo.EvidenceVariableRes");
            DropTable("dbo.EvidenceIxUri");
            DropTable("dbo.EvidenceIxTok");
            DropTable("dbo.EvidenceIxStr");
            DropTable("dbo.EvidenceIxRef");
            DropTable("dbo.EvidenceIxQty");
            DropTable("dbo.EvidenceIxDT");
            DropTable("dbo.EvidenceRes");
            DropTable("dbo.EventDefinitionIxUri");
            DropTable("dbo.EventDefinitionIxTok");
            DropTable("dbo.EventDefinitionIxStr");
            DropTable("dbo.EventDefinitionIxRef");
            DropTable("dbo.EventDefinitionIxQty");
            DropTable("dbo.EventDefinitionIxDT");
            DropTable("dbo.EventDefinitionRes");
            DropTable("dbo.EpisodeOfCareIxUri");
            DropTable("dbo.EpisodeOfCareIxTok");
            DropTable("dbo.EpisodeOfCareIxStr");
            DropTable("dbo.EpisodeOfCareIxRef");
            DropTable("dbo.EpisodeOfCareIxQty");
            DropTable("dbo.EpisodeOfCareIxDT");
            DropTable("dbo.EpisodeOfCareRes");
            DropTable("dbo.EnrollmentResponseIxUri");
            DropTable("dbo.EnrollmentResponseIxTok");
            DropTable("dbo.EnrollmentResponseIxStr");
            DropTable("dbo.EnrollmentResponseIxRef");
            DropTable("dbo.EnrollmentResponseIxQty");
            DropTable("dbo.EnrollmentResponseIxDT");
            DropTable("dbo.EnrollmentResponseRes");
            DropTable("dbo.EnrollmentRequestIxUri");
            DropTable("dbo.EnrollmentRequestIxTok");
            DropTable("dbo.EnrollmentRequestIxStr");
            DropTable("dbo.EnrollmentRequestIxRef");
            DropTable("dbo.EnrollmentRequestIxQty");
            DropTable("dbo.EnrollmentRequestIxDT");
            DropTable("dbo.EnrollmentRequestRes");
            DropTable("dbo.EndpointIxUri");
            DropTable("dbo.EndpointIxTok");
            DropTable("dbo.EndpointIxStr");
            DropTable("dbo.EndpointIxRef");
            DropTable("dbo.EndpointIxQty");
            DropTable("dbo.EndpointIxDT");
            DropTable("dbo.EndpointRes");
            DropTable("dbo.EncounterIxUri");
            DropTable("dbo.EncounterIxTok");
            DropTable("dbo.EncounterIxStr");
            DropTable("dbo.EncounterIxRef");
            DropTable("dbo.EncounterIxQty");
            DropTable("dbo.EncounterIxDT");
            DropTable("dbo.EncounterRes");
            DropTable("dbo.EffectEvidenceSynthesisIxUri");
            DropTable("dbo.EffectEvidenceSynthesisIxTok");
            DropTable("dbo.EffectEvidenceSynthesisIxStr");
            DropTable("dbo.EffectEvidenceSynthesisIxRef");
            DropTable("dbo.EffectEvidenceSynthesisIxQty");
            DropTable("dbo.EffectEvidenceSynthesisIxDT");
            DropTable("dbo.EffectEvidenceSynthesisRes");
            DropTable("dbo.DocumentReferenceIxUri");
            DropTable("dbo.DocumentReferenceIxTok");
            DropTable("dbo.DocumentReferenceIxStr");
            DropTable("dbo.DocumentReferenceIxRef");
            DropTable("dbo.DocumentReferenceIxQty");
            DropTable("dbo.DocumentReferenceIxDT");
            DropTable("dbo.DocumentReferenceRes");
            DropTable("dbo.DocumentManifestIxUri");
            DropTable("dbo.DocumentManifestIxTok");
            DropTable("dbo.DocumentManifestIxStr");
            DropTable("dbo.DocumentManifestIxRef");
            DropTable("dbo.DocumentManifestIxQty");
            DropTable("dbo.DocumentManifestIxDT");
            DropTable("dbo.DocumentManifestRes");
            DropTable("dbo.DiagnosticReportIxUri");
            DropTable("dbo.DiagnosticReportIxTok");
            DropTable("dbo.DiagnosticReportIxStr");
            DropTable("dbo.DiagnosticReportIxRef");
            DropTable("dbo.DiagnosticReportIxQty");
            DropTable("dbo.DiagnosticReportIxDT");
            DropTable("dbo.DiagnosticReportRes");
            DropTable("dbo.DeviceUseStatementIxUri");
            DropTable("dbo.DeviceUseStatementIxTok");
            DropTable("dbo.DeviceUseStatementIxStr");
            DropTable("dbo.DeviceUseStatementIxRef");
            DropTable("dbo.DeviceUseStatementIxQty");
            DropTable("dbo.DeviceUseStatementIxDT");
            DropTable("dbo.DeviceUseStatementRes");
            DropTable("dbo.DeviceRequestIxUri");
            DropTable("dbo.DeviceRequestIxTok");
            DropTable("dbo.DeviceRequestIxStr");
            DropTable("dbo.DeviceRequestIxRef");
            DropTable("dbo.DeviceRequestIxQty");
            DropTable("dbo.DeviceRequestIxDT");
            DropTable("dbo.DeviceRequestRes");
            DropTable("dbo.DeviceMetricIxUri");
            DropTable("dbo.DeviceMetricIxTok");
            DropTable("dbo.DeviceMetricIxStr");
            DropTable("dbo.DeviceMetricIxRef");
            DropTable("dbo.DeviceMetricIxQty");
            DropTable("dbo.DeviceMetricIxDT");
            DropTable("dbo.DeviceMetricRes");
            DropTable("dbo.DeviceIxUri");
            DropTable("dbo.DeviceIxTok");
            DropTable("dbo.DeviceIxStr");
            DropTable("dbo.DeviceIxRef");
            DropTable("dbo.DeviceIxQty");
            DropTable("dbo.DeviceIxDT");
            DropTable("dbo.DeviceRes");
            DropTable("dbo.DeviceDefinitionIxUri");
            DropTable("dbo.DeviceDefinitionIxTok");
            DropTable("dbo.DeviceDefinitionIxStr");
            DropTable("dbo.DeviceDefinitionIxRef");
            DropTable("dbo.DeviceDefinitionIxQty");
            DropTable("dbo.DeviceDefinitionIxDT");
            DropTable("dbo.DeviceDefinitionRes");
            DropTable("dbo.DetectedIssueIxUri");
            DropTable("dbo.DetectedIssueIxTok");
            DropTable("dbo.DetectedIssueIxStr");
            DropTable("dbo.DetectedIssueIxRef");
            DropTable("dbo.DetectedIssueIxQty");
            DropTable("dbo.DetectedIssueIxDT");
            DropTable("dbo.DetectedIssueRes");
            DropTable("dbo.CoverageIxUri");
            DropTable("dbo.CoverageIxTok");
            DropTable("dbo.CoverageIxStr");
            DropTable("dbo.CoverageIxRef");
            DropTable("dbo.CoverageIxQty");
            DropTable("dbo.CoverageIxDT");
            DropTable("dbo.CoverageRes");
            DropTable("dbo.CoverageEligibilityResponseIxUri");
            DropTable("dbo.CoverageEligibilityResponseIxTok");
            DropTable("dbo.CoverageEligibilityResponseIxStr");
            DropTable("dbo.CoverageEligibilityResponseIxRef");
            DropTable("dbo.CoverageEligibilityResponseIxQty");
            DropTable("dbo.CoverageEligibilityResponseIxDT");
            DropTable("dbo.CoverageEligibilityResponseRes");
            DropTable("dbo.CoverageEligibilityRequestIxUri");
            DropTable("dbo.CoverageEligibilityRequestIxTok");
            DropTable("dbo.CoverageEligibilityRequestIxStr");
            DropTable("dbo.CoverageEligibilityRequestIxRef");
            DropTable("dbo.CoverageEligibilityRequestIxQty");
            DropTable("dbo.CoverageEligibilityRequestIxDT");
            DropTable("dbo.CoverageEligibilityRequestRes");
            DropTable("dbo.ContractIxUri");
            DropTable("dbo.ContractIxTok");
            DropTable("dbo.ContractIxStr");
            DropTable("dbo.ContractIxRef");
            DropTable("dbo.ContractIxQty");
            DropTable("dbo.ContractIxDT");
            DropTable("dbo.ContractRes");
            DropTable("dbo.ConsentIxUri");
            DropTable("dbo.ConsentIxTok");
            DropTable("dbo.ConsentIxStr");
            DropTable("dbo.ConsentIxRef");
            DropTable("dbo.ConsentIxQty");
            DropTable("dbo.ConsentIxDT");
            DropTable("dbo.ConsentRes");
            DropTable("dbo.ConditionIxUri");
            DropTable("dbo.ConditionIxTok");
            DropTable("dbo.ConditionIxStr");
            DropTable("dbo.ConditionIxRef");
            DropTable("dbo.ConditionIxQty");
            DropTable("dbo.ConditionIxDT");
            DropTable("dbo.ConditionRes");
            DropTable("dbo.ConceptMapIxUri");
            DropTable("dbo.ConceptMapIxTok");
            DropTable("dbo.ConceptMapIxStr");
            DropTable("dbo.ConceptMapIxRef");
            DropTable("dbo.ConceptMapIxQty");
            DropTable("dbo.ConceptMapIxDT");
            DropTable("dbo.ConceptMapRes");
            DropTable("dbo.CompositionIxUri");
            DropTable("dbo.CompositionIxTok");
            DropTable("dbo.CompositionIxStr");
            DropTable("dbo.CompositionIxRef");
            DropTable("dbo.CompositionIxQty");
            DropTable("dbo.CompositionIxDT");
            DropTable("dbo.CompositionRes");
            DropTable("dbo.CompartmentDefinitionIxUri");
            DropTable("dbo.CompartmentDefinitionIxTok");
            DropTable("dbo.CompartmentDefinitionIxStr");
            DropTable("dbo.CompartmentDefinitionIxRef");
            DropTable("dbo.CompartmentDefinitionIxQty");
            DropTable("dbo.CompartmentDefinitionIxDT");
            DropTable("dbo.CompartmentDefinitionRes");
            DropTable("dbo.CommunicationRequestIxUri");
            DropTable("dbo.CommunicationRequestIxTok");
            DropTable("dbo.CommunicationRequestIxStr");
            DropTable("dbo.CommunicationRequestIxRef");
            DropTable("dbo.CommunicationRequestIxQty");
            DropTable("dbo.CommunicationRequestIxDT");
            DropTable("dbo.CommunicationRequestRes");
            DropTable("dbo.CommunicationIxUri");
            DropTable("dbo.CommunicationIxTok");
            DropTable("dbo.CommunicationIxStr");
            DropTable("dbo.CommunicationIxRef");
            DropTable("dbo.CommunicationIxQty");
            DropTable("dbo.CommunicationIxDT");
            DropTable("dbo.CommunicationRes");
            DropTable("dbo.CodeSystemIxUri");
            DropTable("dbo.CodeSystemIxTok");
            DropTable("dbo.CodeSystemIxStr");
            DropTable("dbo.CodeSystemIxRef");
            DropTable("dbo.CodeSystemIxQty");
            DropTable("dbo.CodeSystemIxDT");
            DropTable("dbo.CodeSystemRes");
            DropTable("dbo.ClinicalImpressionIxUri");
            DropTable("dbo.ClinicalImpressionIxTok");
            DropTable("dbo.ClinicalImpressionIxStr");
            DropTable("dbo.ClinicalImpressionIxRef");
            DropTable("dbo.ClinicalImpressionIxQty");
            DropTable("dbo.ClinicalImpressionIxDT");
            DropTable("dbo.ClinicalImpressionRes");
            DropTable("dbo.ClaimResponseIxUri");
            DropTable("dbo.ClaimResponseIxTok");
            DropTable("dbo.ClaimResponseIxStr");
            DropTable("dbo.ClaimResponseIxRef");
            DropTable("dbo.ClaimResponseIxQty");
            DropTable("dbo.ClaimResponseIxDT");
            DropTable("dbo.ClaimResponseRes");
            DropTable("dbo.ClaimIxUri");
            DropTable("dbo.ClaimIxTok");
            DropTable("dbo.ClaimIxStr");
            DropTable("dbo.ClaimIxRef");
            DropTable("dbo.ClaimIxQty");
            DropTable("dbo.ClaimIxDT");
            DropTable("dbo.ClaimRes");
            DropTable("dbo.ChargeItemIxUri");
            DropTable("dbo.ChargeItemIxTok");
            DropTable("dbo.ChargeItemIxStr");
            DropTable("dbo.ChargeItemIxRef");
            DropTable("dbo.ChargeItemIxQty");
            DropTable("dbo.ChargeItemIxDT");
            DropTable("dbo.ChargeItemRes");
            DropTable("dbo.ChargeItemDefinitionIxUri");
            DropTable("dbo.ChargeItemDefinitionIxTok");
            DropTable("dbo.ChargeItemDefinitionIxStr");
            DropTable("dbo.ChargeItemDefinitionIxRef");
            DropTable("dbo.ChargeItemDefinitionIxQty");
            DropTable("dbo.ChargeItemDefinitionIxDT");
            DropTable("dbo.ChargeItemDefinitionRes");
            DropTable("dbo.CatalogEntryIxUri");
            DropTable("dbo.CatalogEntryIxTok");
            DropTable("dbo.CatalogEntryIxStr");
            DropTable("dbo.CatalogEntryIxRef");
            DropTable("dbo.CatalogEntryIxQty");
            DropTable("dbo.CatalogEntryIxDT");
            DropTable("dbo.CatalogEntryRes");
            DropTable("dbo.CareTeamIxUri");
            DropTable("dbo.CareTeamIxTok");
            DropTable("dbo.CareTeamIxStr");
            DropTable("dbo.CareTeamIxRef");
            DropTable("dbo.CareTeamIxQty");
            DropTable("dbo.CareTeamIxDT");
            DropTable("dbo.CareTeamRes");
            DropTable("dbo.CarePlanIxUri");
            DropTable("dbo.CarePlanIxTok");
            DropTable("dbo.CarePlanIxStr");
            DropTable("dbo.CarePlanIxRef");
            DropTable("dbo.CarePlanIxQty");
            DropTable("dbo.CarePlanIxDT");
            DropTable("dbo.CarePlanRes");
            DropTable("dbo.CapabilityStatementIxUri");
            DropTable("dbo.CapabilityStatementIxTok");
            DropTable("dbo.CapabilityStatementIxStr");
            DropTable("dbo.CapabilityStatementIxRef");
            DropTable("dbo.CapabilityStatementIxQty");
            DropTable("dbo.CapabilityStatementIxDT");
            DropTable("dbo.CapabilityStatementRes");
            DropTable("dbo.BundleIxUri");
            DropTable("dbo.BundleIxTok");
            DropTable("dbo.BundleIxStr");
            DropTable("dbo.BundleIxRef");
            DropTable("dbo.BundleIxQty");
            DropTable("dbo.BundleIxDT");
            DropTable("dbo.BundleRes");
            DropTable("dbo.BodyStructureIxUri");
            DropTable("dbo.BodyStructureIxTok");
            DropTable("dbo.BodyStructureIxStr");
            DropTable("dbo.BodyStructureIxRef");
            DropTable("dbo.BodyStructureIxQty");
            DropTable("dbo.BodyStructureIxDT");
            DropTable("dbo.BodyStructureRes");
            DropTable("dbo.BiologicallyDerivedProductIxUri");
            DropTable("dbo.BiologicallyDerivedProductIxTok");
            DropTable("dbo.BiologicallyDerivedProductIxStr");
            DropTable("dbo.BiologicallyDerivedProductIxRef");
            DropTable("dbo.BiologicallyDerivedProductIxQty");
            DropTable("dbo.BiologicallyDerivedProductIxDT");
            DropTable("dbo.BiologicallyDerivedProductRes");
            DropTable("dbo.BinaryIxUri");
            DropTable("dbo.BinaryIxTok");
            DropTable("dbo.BinaryIxStr");
            DropTable("dbo.BinaryIxRef");
            DropTable("dbo.BinaryIxQty");
            DropTable("dbo.BinaryIxDT");
            DropTable("dbo.BinaryRes");
            DropTable("dbo.BasicIxUri");
            DropTable("dbo.BasicIxTok");
            DropTable("dbo.BasicIxStr");
            DropTable("dbo.BasicIxRef");
            DropTable("dbo.BasicIxQty");
            DropTable("dbo.BasicIxDT");
            DropTable("dbo.BasicRes");
            DropTable("dbo.AuditEventIxUri");
            DropTable("dbo.AuditEventIxTok");
            DropTable("dbo.AuditEventIxStr");
            DropTable("dbo.AuditEventIxRef");
            DropTable("dbo.AuditEventIxQty");
            DropTable("dbo.AuditEventIxDT");
            DropTable("dbo.AuditEventRes");
            DropTable("dbo.AppointmentResponseIxUri");
            DropTable("dbo.AppointmentResponseIxTok");
            DropTable("dbo.AppointmentResponseIxStr");
            DropTable("dbo.AppointmentResponseIxRef");
            DropTable("dbo.AppointmentResponseIxQty");
            DropTable("dbo.AppointmentResponseIxDT");
            DropTable("dbo.AppointmentResponseRes");
            DropTable("dbo.AppointmentIxUri");
            DropTable("dbo.AppointmentIxTok");
            DropTable("dbo.AppointmentIxStr");
            DropTable("dbo.AppointmentIxRef");
            DropTable("dbo.AppointmentIxQty");
            DropTable("dbo.AppointmentIxDT");
            DropTable("dbo.AppointmentRes");
            DropTable("dbo.AllergyIntoleranceIxUri");
            DropTable("dbo.AllergyIntoleranceIxTok");
            DropTable("dbo.AllergyIntoleranceIxStr");
            DropTable("dbo.AllergyIntoleranceIxRef");
            DropTable("dbo.AllergyIntoleranceIxQty");
            DropTable("dbo.AllergyIntoleranceIxDT");
            DropTable("dbo.AllergyIntoleranceRes");
            DropTable("dbo.AdverseEventIxUri");
            DropTable("dbo.AdverseEventIxTok");
            DropTable("dbo.AdverseEventIxStr");
            DropTable("dbo.AdverseEventIxRef");
            DropTable("dbo.AdverseEventIxQty");
            DropTable("dbo.AdverseEventIxDT");
            DropTable("dbo.AdverseEventRes");
            DropTable("dbo.ActivityDefinitionIxUri");
            DropTable("dbo.ActivityDefinitionIxTok");
            DropTable("dbo.ActivityDefinitionIxStr");
            DropTable("dbo._BaseUrl");
            DropTable("dbo.ActivityDefinitionIxRef");
            DropTable("dbo.ActivityDefinitionIxQty");
            DropTable("dbo._SParamResource");
            DropTable("dbo._SCompositePivot");
            DropTable("dbo._SearchParam");
            DropTable("dbo.ActivityDefinitionIxDT");
            DropTable("dbo.ActivityDefinitionRes");
            DropTable("dbo._FhirRelease");
            DropTable("dbo.AccountRes");
        }
    }
}
