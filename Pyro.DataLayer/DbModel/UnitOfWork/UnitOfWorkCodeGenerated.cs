using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;
using Pyro.Common.Interfaces.Repositories;
using Pyro.DataLayer.Repository;
using Pyro.DataLayer.DbModel.EntityGenerated;
using Hl7.Fhir.Model;

//This file was code generated by Pyro.CodeGeneration.Template.MainTemplate.tt
//Generation TimeStamp: 30/04/2017 10:12:55 PM

namespace Pyro.DataLayer.DbModel.UnitOfWork
{  
  public partial class UnitOfWork : IUnitOfWork, IDisposable
  {    
    private CommonResourceRepository<AccountRes, AccountResIndex> _AccountRepository;
    private CommonResourceRepository<ActivityDefinitionRes, ActivityDefinitionResIndex> _ActivityDefinitionRepository;
    private CommonResourceRepository<AdverseEventRes, AdverseEventResIndex> _AdverseEventRepository;
    private CommonResourceRepository<AllergyIntoleranceRes, AllergyIntoleranceResIndex> _AllergyIntoleranceRepository;
    private CommonResourceRepository<AppointmentRes, AppointmentResIndex> _AppointmentRepository;
    private CommonResourceRepository<AppointmentResponseRes, AppointmentResponseResIndex> _AppointmentResponseRepository;
    private CommonResourceRepository<AuditEventRes, AuditEventResIndex> _AuditEventRepository;
    private CommonResourceRepository<BasicRes, BasicResIndex> _BasicRepository;
    private CommonResourceRepository<BinaryRes, BinaryResIndex> _BinaryRepository;
    private CommonResourceRepository<BodySiteRes, BodySiteResIndex> _BodySiteRepository;
    private CommonResourceRepository<BundleRes, BundleResIndex> _BundleRepository;
    private CommonResourceRepository<CapabilityStatementRes, CapabilityStatementResIndex> _CapabilityStatementRepository;
    private CommonResourceRepository<CarePlanRes, CarePlanResIndex> _CarePlanRepository;
    private CommonResourceRepository<CareTeamRes, CareTeamResIndex> _CareTeamRepository;
    private CommonResourceRepository<ChargeItemRes, ChargeItemResIndex> _ChargeItemRepository;
    private CommonResourceRepository<ClaimRes, ClaimResIndex> _ClaimRepository;
    private CommonResourceRepository<ClaimResponseRes, ClaimResponseResIndex> _ClaimResponseRepository;
    private CommonResourceRepository<ClinicalImpressionRes, ClinicalImpressionResIndex> _ClinicalImpressionRepository;
    private CommonResourceRepository<CodeSystemRes, CodeSystemResIndex> _CodeSystemRepository;
    private CommonResourceRepository<CommunicationRes, CommunicationResIndex> _CommunicationRepository;
    private CommonResourceRepository<CommunicationRequestRes, CommunicationRequestResIndex> _CommunicationRequestRepository;
    private CommonResourceRepository<CompartmentDefinitionRes, CompartmentDefinitionResIndex> _CompartmentDefinitionRepository;
    private CommonResourceRepository<CompositionRes, CompositionResIndex> _CompositionRepository;
    private CommonResourceRepository<ConceptMapRes, ConceptMapResIndex> _ConceptMapRepository;
    private CommonResourceRepository<ConditionRes, ConditionResIndex> _ConditionRepository;
    private CommonResourceRepository<ConsentRes, ConsentResIndex> _ConsentRepository;
    private CommonResourceRepository<ContractRes, ContractResIndex> _ContractRepository;
    private CommonResourceRepository<CoverageRes, CoverageResIndex> _CoverageRepository;
    private CommonResourceRepository<DataElementRes, DataElementResIndex> _DataElementRepository;
    private CommonResourceRepository<DetectedIssueRes, DetectedIssueResIndex> _DetectedIssueRepository;
    private CommonResourceRepository<DeviceRes, DeviceResIndex> _DeviceRepository;
    private CommonResourceRepository<DeviceComponentRes, DeviceComponentResIndex> _DeviceComponentRepository;
    private CommonResourceRepository<DeviceMetricRes, DeviceMetricResIndex> _DeviceMetricRepository;
    private CommonResourceRepository<DeviceRequestRes, DeviceRequestResIndex> _DeviceRequestRepository;
    private CommonResourceRepository<DeviceUseStatementRes, DeviceUseStatementResIndex> _DeviceUseStatementRepository;
    private CommonResourceRepository<DiagnosticReportRes, DiagnosticReportResIndex> _DiagnosticReportRepository;
    private CommonResourceRepository<DocumentManifestRes, DocumentManifestResIndex> _DocumentManifestRepository;
    private CommonResourceRepository<DocumentReferenceRes, DocumentReferenceResIndex> _DocumentReferenceRepository;
    private CommonResourceRepository<EligibilityRequestRes, EligibilityRequestResIndex> _EligibilityRequestRepository;
    private CommonResourceRepository<EligibilityResponseRes, EligibilityResponseResIndex> _EligibilityResponseRepository;
    private CommonResourceRepository<EncounterRes, EncounterResIndex> _EncounterRepository;
    private CommonResourceRepository<EndpointRes, EndpointResIndex> _EndpointRepository;
    private CommonResourceRepository<EnrollmentRequestRes, EnrollmentRequestResIndex> _EnrollmentRequestRepository;
    private CommonResourceRepository<EnrollmentResponseRes, EnrollmentResponseResIndex> _EnrollmentResponseRepository;
    private CommonResourceRepository<EpisodeOfCareRes, EpisodeOfCareResIndex> _EpisodeOfCareRepository;
    private CommonResourceRepository<ExpansionProfileRes, ExpansionProfileResIndex> _ExpansionProfileRepository;
    private CommonResourceRepository<ExplanationOfBenefitRes, ExplanationOfBenefitResIndex> _ExplanationOfBenefitRepository;
    private CommonResourceRepository<FamilyMemberHistoryRes, FamilyMemberHistoryResIndex> _FamilyMemberHistoryRepository;
    private CommonResourceRepository<FlagRes, FlagResIndex> _FlagRepository;
    private CommonResourceRepository<GoalRes, GoalResIndex> _GoalRepository;
    private CommonResourceRepository<GraphDefinitionRes, GraphDefinitionResIndex> _GraphDefinitionRepository;
    private CommonResourceRepository<GroupRes, GroupResIndex> _GroupRepository;
    private CommonResourceRepository<GuidanceResponseRes, GuidanceResponseResIndex> _GuidanceResponseRepository;
    private CommonResourceRepository<HealthcareServiceRes, HealthcareServiceResIndex> _HealthcareServiceRepository;
    private CommonResourceRepository<ImagingManifestRes, ImagingManifestResIndex> _ImagingManifestRepository;
    private CommonResourceRepository<ImagingStudyRes, ImagingStudyResIndex> _ImagingStudyRepository;
    private CommonResourceRepository<ImmunizationRes, ImmunizationResIndex> _ImmunizationRepository;
    private CommonResourceRepository<ImmunizationRecommendationRes, ImmunizationRecommendationResIndex> _ImmunizationRecommendationRepository;
    private CommonResourceRepository<ImplementationGuideRes, ImplementationGuideResIndex> _ImplementationGuideRepository;
    private CommonResourceRepository<LibraryRes, LibraryResIndex> _LibraryRepository;
    private CommonResourceRepository<LinkageRes, LinkageResIndex> _LinkageRepository;
    private CommonResourceRepository<ListRes, ListResIndex> _ListRepository;
    private CommonResourceRepository<LocationRes, LocationResIndex> _LocationRepository;
    private CommonResourceRepository<MeasureRes, MeasureResIndex> _MeasureRepository;
    private CommonResourceRepository<MeasureReportRes, MeasureReportResIndex> _MeasureReportRepository;
    private CommonResourceRepository<MediaRes, MediaResIndex> _MediaRepository;
    private CommonResourceRepository<MedicationRes, MedicationResIndex> _MedicationRepository;
    private CommonResourceRepository<MedicationAdministrationRes, MedicationAdministrationResIndex> _MedicationAdministrationRepository;
    private CommonResourceRepository<MedicationDispenseRes, MedicationDispenseResIndex> _MedicationDispenseRepository;
    private CommonResourceRepository<MedicationRequestRes, MedicationRequestResIndex> _MedicationRequestRepository;
    private CommonResourceRepository<MedicationStatementRes, MedicationStatementResIndex> _MedicationStatementRepository;
    private CommonResourceRepository<MessageDefinitionRes, MessageDefinitionResIndex> _MessageDefinitionRepository;
    private CommonResourceRepository<MessageHeaderRes, MessageHeaderResIndex> _MessageHeaderRepository;
    private CommonResourceRepository<NamingSystemRes, NamingSystemResIndex> _NamingSystemRepository;
    private CommonResourceRepository<NutritionOrderRes, NutritionOrderResIndex> _NutritionOrderRepository;
    private CommonResourceRepository<ObservationRes, ObservationResIndex> _ObservationRepository;
    private CommonResourceRepository<OperationDefinitionRes, OperationDefinitionResIndex> _OperationDefinitionRepository;
    private CommonResourceRepository<OperationOutcomeRes, OperationOutcomeResIndex> _OperationOutcomeRepository;
    private CommonResourceRepository<OrganizationRes, OrganizationResIndex> _OrganizationRepository;
    private CommonResourceRepository<ParametersRes, ParametersResIndex> _ParametersRepository;
    private CommonResourceRepository<PatientRes, PatientResIndex> _PatientRepository;
    private CommonResourceRepository<PaymentNoticeRes, PaymentNoticeResIndex> _PaymentNoticeRepository;
    private CommonResourceRepository<PaymentReconciliationRes, PaymentReconciliationResIndex> _PaymentReconciliationRepository;
    private CommonResourceRepository<PersonRes, PersonResIndex> _PersonRepository;
    private CommonResourceRepository<PlanDefinitionRes, PlanDefinitionResIndex> _PlanDefinitionRepository;
    private CommonResourceRepository<PractitionerRes, PractitionerResIndex> _PractitionerRepository;
    private CommonResourceRepository<PractitionerRoleRes, PractitionerRoleResIndex> _PractitionerRoleRepository;
    private CommonResourceRepository<ProcedureRes, ProcedureResIndex> _ProcedureRepository;
    private CommonResourceRepository<ProcedureRequestRes, ProcedureRequestResIndex> _ProcedureRequestRepository;
    private CommonResourceRepository<ProcessRequestRes, ProcessRequestResIndex> _ProcessRequestRepository;
    private CommonResourceRepository<ProcessResponseRes, ProcessResponseResIndex> _ProcessResponseRepository;
    private CommonResourceRepository<ProvenanceRes, ProvenanceResIndex> _ProvenanceRepository;
    private CommonResourceRepository<QuestionnaireRes, QuestionnaireResIndex> _QuestionnaireRepository;
    private CommonResourceRepository<QuestionnaireResponseRes, QuestionnaireResponseResIndex> _QuestionnaireResponseRepository;
    private CommonResourceRepository<ReferralRequestRes, ReferralRequestResIndex> _ReferralRequestRepository;
    private CommonResourceRepository<RelatedPersonRes, RelatedPersonResIndex> _RelatedPersonRepository;
    private CommonResourceRepository<RequestGroupRes, RequestGroupResIndex> _RequestGroupRepository;
    private CommonResourceRepository<ResearchStudyRes, ResearchStudyResIndex> _ResearchStudyRepository;
    private CommonResourceRepository<ResearchSubjectRes, ResearchSubjectResIndex> _ResearchSubjectRepository;
    private CommonResourceRepository<RiskAssessmentRes, RiskAssessmentResIndex> _RiskAssessmentRepository;
    private CommonResourceRepository<ScheduleRes, ScheduleResIndex> _ScheduleRepository;
    private CommonResourceRepository<SearchParameterRes, SearchParameterResIndex> _SearchParameterRepository;
    private CommonResourceRepository<SequenceRes, SequenceResIndex> _SequenceRepository;
    private CommonResourceRepository<ServiceDefinitionRes, ServiceDefinitionResIndex> _ServiceDefinitionRepository;
    private CommonResourceRepository<SlotRes, SlotResIndex> _SlotRepository;
    private CommonResourceRepository<SpecimenRes, SpecimenResIndex> _SpecimenRepository;
    private CommonResourceRepository<StructureDefinitionRes, StructureDefinitionResIndex> _StructureDefinitionRepository;
    private CommonResourceRepository<StructureMapRes, StructureMapResIndex> _StructureMapRepository;
    private CommonResourceRepository<SubscriptionRes, SubscriptionResIndex> _SubscriptionRepository;
    private CommonResourceRepository<SubstanceRes, SubstanceResIndex> _SubstanceRepository;
    private CommonResourceRepository<SupplyDeliveryRes, SupplyDeliveryResIndex> _SupplyDeliveryRepository;
    private CommonResourceRepository<SupplyRequestRes, SupplyRequestResIndex> _SupplyRequestRepository;
    private CommonResourceRepository<TaskRes, TaskResIndex> _TaskRepository;
    private CommonResourceRepository<TestReportRes, TestReportResIndex> _TestReportRepository;
    private CommonResourceRepository<TestScriptRes, TestScriptResIndex> _TestScriptRepository;
    private CommonResourceRepository<ValueSetRes, ValueSetResIndex> _ValueSetRepository;
    private CommonResourceRepository<VisionPrescriptionRes, VisionPrescriptionResIndex> _VisionPrescriptionRepository;

    public IResourceRepository AccountRepository
    {
      get
      {
        if (this._AccountRepository == null)
          this._AccountRepository = new CommonResourceRepository<AccountRes, AccountResIndex>(_context, FHIRAllTypes.Account);
        return _AccountRepository;
      }
    }

    public IResourceRepository ActivityDefinitionRepository
    {
      get
      {
        if (this._ActivityDefinitionRepository == null)
          this._ActivityDefinitionRepository = new CommonResourceRepository<ActivityDefinitionRes, ActivityDefinitionResIndex>(_context, FHIRAllTypes.ActivityDefinition);
        return _ActivityDefinitionRepository;
      }
    }

    public IResourceRepository AdverseEventRepository
    {
      get
      {
        if (this._AdverseEventRepository == null)
          this._AdverseEventRepository = new CommonResourceRepository<AdverseEventRes, AdverseEventResIndex>(_context, FHIRAllTypes.AdverseEvent);
        return _AdverseEventRepository;
      }
    }

    public IResourceRepository AllergyIntoleranceRepository
    {
      get
      {
        if (this._AllergyIntoleranceRepository == null)
          this._AllergyIntoleranceRepository = new CommonResourceRepository<AllergyIntoleranceRes, AllergyIntoleranceResIndex>(_context, FHIRAllTypes.AllergyIntolerance);
        return _AllergyIntoleranceRepository;
      }
    }

    public IResourceRepository AppointmentRepository
    {
      get
      {
        if (this._AppointmentRepository == null)
          this._AppointmentRepository = new CommonResourceRepository<AppointmentRes, AppointmentResIndex>(_context, FHIRAllTypes.Appointment);
        return _AppointmentRepository;
      }
    }

    public IResourceRepository AppointmentResponseRepository
    {
      get
      {
        if (this._AppointmentResponseRepository == null)
          this._AppointmentResponseRepository = new CommonResourceRepository<AppointmentResponseRes, AppointmentResponseResIndex>(_context, FHIRAllTypes.AppointmentResponse);
        return _AppointmentResponseRepository;
      }
    }

    public IResourceRepository AuditEventRepository
    {
      get
      {
        if (this._AuditEventRepository == null)
          this._AuditEventRepository = new CommonResourceRepository<AuditEventRes, AuditEventResIndex>(_context, FHIRAllTypes.AuditEvent);
        return _AuditEventRepository;
      }
    }

    public IResourceRepository BasicRepository
    {
      get
      {
        if (this._BasicRepository == null)
          this._BasicRepository = new CommonResourceRepository<BasicRes, BasicResIndex>(_context, FHIRAllTypes.Basic);
        return _BasicRepository;
      }
    }

    public IResourceRepository BinaryRepository
    {
      get
      {
        if (this._BinaryRepository == null)
          this._BinaryRepository = new CommonResourceRepository<BinaryRes, BinaryResIndex>(_context, FHIRAllTypes.Binary);
        return _BinaryRepository;
      }
    }

    public IResourceRepository BodySiteRepository
    {
      get
      {
        if (this._BodySiteRepository == null)
          this._BodySiteRepository = new CommonResourceRepository<BodySiteRes, BodySiteResIndex>(_context, FHIRAllTypes.BodySite);
        return _BodySiteRepository;
      }
    }

    public IResourceRepository BundleRepository
    {
      get
      {
        if (this._BundleRepository == null)
          this._BundleRepository = new CommonResourceRepository<BundleRes, BundleResIndex>(_context, FHIRAllTypes.Bundle);
        return _BundleRepository;
      }
    }

    public IResourceRepository CapabilityStatementRepository
    {
      get
      {
        if (this._CapabilityStatementRepository == null)
          this._CapabilityStatementRepository = new CommonResourceRepository<CapabilityStatementRes, CapabilityStatementResIndex>(_context, FHIRAllTypes.CapabilityStatement);
        return _CapabilityStatementRepository;
      }
    }

    public IResourceRepository CarePlanRepository
    {
      get
      {
        if (this._CarePlanRepository == null)
          this._CarePlanRepository = new CommonResourceRepository<CarePlanRes, CarePlanResIndex>(_context, FHIRAllTypes.CarePlan);
        return _CarePlanRepository;
      }
    }

    public IResourceRepository CareTeamRepository
    {
      get
      {
        if (this._CareTeamRepository == null)
          this._CareTeamRepository = new CommonResourceRepository<CareTeamRes, CareTeamResIndex>(_context, FHIRAllTypes.CareTeam);
        return _CareTeamRepository;
      }
    }

    public IResourceRepository ChargeItemRepository
    {
      get
      {
        if (this._ChargeItemRepository == null)
          this._ChargeItemRepository = new CommonResourceRepository<ChargeItemRes, ChargeItemResIndex>(_context, FHIRAllTypes.ChargeItem);
        return _ChargeItemRepository;
      }
    }

    public IResourceRepository ClaimRepository
    {
      get
      {
        if (this._ClaimRepository == null)
          this._ClaimRepository = new CommonResourceRepository<ClaimRes, ClaimResIndex>(_context, FHIRAllTypes.Claim);
        return _ClaimRepository;
      }
    }

    public IResourceRepository ClaimResponseRepository
    {
      get
      {
        if (this._ClaimResponseRepository == null)
          this._ClaimResponseRepository = new CommonResourceRepository<ClaimResponseRes, ClaimResponseResIndex>(_context, FHIRAllTypes.ClaimResponse);
        return _ClaimResponseRepository;
      }
    }

    public IResourceRepository ClinicalImpressionRepository
    {
      get
      {
        if (this._ClinicalImpressionRepository == null)
          this._ClinicalImpressionRepository = new CommonResourceRepository<ClinicalImpressionRes, ClinicalImpressionResIndex>(_context, FHIRAllTypes.ClinicalImpression);
        return _ClinicalImpressionRepository;
      }
    }

    public IResourceRepository CodeSystemRepository
    {
      get
      {
        if (this._CodeSystemRepository == null)
          this._CodeSystemRepository = new CommonResourceRepository<CodeSystemRes, CodeSystemResIndex>(_context, FHIRAllTypes.CodeSystem);
        return _CodeSystemRepository;
      }
    }

    public IResourceRepository CommunicationRepository
    {
      get
      {
        if (this._CommunicationRepository == null)
          this._CommunicationRepository = new CommonResourceRepository<CommunicationRes, CommunicationResIndex>(_context, FHIRAllTypes.Communication);
        return _CommunicationRepository;
      }
    }

    public IResourceRepository CommunicationRequestRepository
    {
      get
      {
        if (this._CommunicationRequestRepository == null)
          this._CommunicationRequestRepository = new CommonResourceRepository<CommunicationRequestRes, CommunicationRequestResIndex>(_context, FHIRAllTypes.CommunicationRequest);
        return _CommunicationRequestRepository;
      }
    }

    public IResourceRepository CompartmentDefinitionRepository
    {
      get
      {
        if (this._CompartmentDefinitionRepository == null)
          this._CompartmentDefinitionRepository = new CommonResourceRepository<CompartmentDefinitionRes, CompartmentDefinitionResIndex>(_context, FHIRAllTypes.CompartmentDefinition);
        return _CompartmentDefinitionRepository;
      }
    }

    public IResourceRepository CompositionRepository
    {
      get
      {
        if (this._CompositionRepository == null)
          this._CompositionRepository = new CommonResourceRepository<CompositionRes, CompositionResIndex>(_context, FHIRAllTypes.Composition);
        return _CompositionRepository;
      }
    }

    public IResourceRepository ConceptMapRepository
    {
      get
      {
        if (this._ConceptMapRepository == null)
          this._ConceptMapRepository = new CommonResourceRepository<ConceptMapRes, ConceptMapResIndex>(_context, FHIRAllTypes.ConceptMap);
        return _ConceptMapRepository;
      }
    }

    public IResourceRepository ConditionRepository
    {
      get
      {
        if (this._ConditionRepository == null)
          this._ConditionRepository = new CommonResourceRepository<ConditionRes, ConditionResIndex>(_context, FHIRAllTypes.Condition);
        return _ConditionRepository;
      }
    }

    public IResourceRepository ConsentRepository
    {
      get
      {
        if (this._ConsentRepository == null)
          this._ConsentRepository = new CommonResourceRepository<ConsentRes, ConsentResIndex>(_context, FHIRAllTypes.Consent);
        return _ConsentRepository;
      }
    }

    public IResourceRepository ContractRepository
    {
      get
      {
        if (this._ContractRepository == null)
          this._ContractRepository = new CommonResourceRepository<ContractRes, ContractResIndex>(_context, FHIRAllTypes.Contract);
        return _ContractRepository;
      }
    }

    public IResourceRepository CoverageRepository
    {
      get
      {
        if (this._CoverageRepository == null)
          this._CoverageRepository = new CommonResourceRepository<CoverageRes, CoverageResIndex>(_context, FHIRAllTypes.Coverage);
        return _CoverageRepository;
      }
    }

    public IResourceRepository DataElementRepository
    {
      get
      {
        if (this._DataElementRepository == null)
          this._DataElementRepository = new CommonResourceRepository<DataElementRes, DataElementResIndex>(_context, FHIRAllTypes.DataElement);
        return _DataElementRepository;
      }
    }

    public IResourceRepository DetectedIssueRepository
    {
      get
      {
        if (this._DetectedIssueRepository == null)
          this._DetectedIssueRepository = new CommonResourceRepository<DetectedIssueRes, DetectedIssueResIndex>(_context, FHIRAllTypes.DetectedIssue);
        return _DetectedIssueRepository;
      }
    }

    public IResourceRepository DeviceRepository
    {
      get
      {
        if (this._DeviceRepository == null)
          this._DeviceRepository = new CommonResourceRepository<DeviceRes, DeviceResIndex>(_context, FHIRAllTypes.Device);
        return _DeviceRepository;
      }
    }

    public IResourceRepository DeviceComponentRepository
    {
      get
      {
        if (this._DeviceComponentRepository == null)
          this._DeviceComponentRepository = new CommonResourceRepository<DeviceComponentRes, DeviceComponentResIndex>(_context, FHIRAllTypes.DeviceComponent);
        return _DeviceComponentRepository;
      }
    }

    public IResourceRepository DeviceMetricRepository
    {
      get
      {
        if (this._DeviceMetricRepository == null)
          this._DeviceMetricRepository = new CommonResourceRepository<DeviceMetricRes, DeviceMetricResIndex>(_context, FHIRAllTypes.DeviceMetric);
        return _DeviceMetricRepository;
      }
    }

    public IResourceRepository DeviceRequestRepository
    {
      get
      {
        if (this._DeviceRequestRepository == null)
          this._DeviceRequestRepository = new CommonResourceRepository<DeviceRequestRes, DeviceRequestResIndex>(_context, FHIRAllTypes.DeviceRequest);
        return _DeviceRequestRepository;
      }
    }

    public IResourceRepository DeviceUseStatementRepository
    {
      get
      {
        if (this._DeviceUseStatementRepository == null)
          this._DeviceUseStatementRepository = new CommonResourceRepository<DeviceUseStatementRes, DeviceUseStatementResIndex>(_context, FHIRAllTypes.DeviceUseStatement);
        return _DeviceUseStatementRepository;
      }
    }

    public IResourceRepository DiagnosticReportRepository
    {
      get
      {
        if (this._DiagnosticReportRepository == null)
          this._DiagnosticReportRepository = new CommonResourceRepository<DiagnosticReportRes, DiagnosticReportResIndex>(_context, FHIRAllTypes.DiagnosticReport);
        return _DiagnosticReportRepository;
      }
    }

    public IResourceRepository DocumentManifestRepository
    {
      get
      {
        if (this._DocumentManifestRepository == null)
          this._DocumentManifestRepository = new CommonResourceRepository<DocumentManifestRes, DocumentManifestResIndex>(_context, FHIRAllTypes.DocumentManifest);
        return _DocumentManifestRepository;
      }
    }

    public IResourceRepository DocumentReferenceRepository
    {
      get
      {
        if (this._DocumentReferenceRepository == null)
          this._DocumentReferenceRepository = new CommonResourceRepository<DocumentReferenceRes, DocumentReferenceResIndex>(_context, FHIRAllTypes.DocumentReference);
        return _DocumentReferenceRepository;
      }
    }

    public IResourceRepository EligibilityRequestRepository
    {
      get
      {
        if (this._EligibilityRequestRepository == null)
          this._EligibilityRequestRepository = new CommonResourceRepository<EligibilityRequestRes, EligibilityRequestResIndex>(_context, FHIRAllTypes.EligibilityRequest);
        return _EligibilityRequestRepository;
      }
    }

    public IResourceRepository EligibilityResponseRepository
    {
      get
      {
        if (this._EligibilityResponseRepository == null)
          this._EligibilityResponseRepository = new CommonResourceRepository<EligibilityResponseRes, EligibilityResponseResIndex>(_context, FHIRAllTypes.EligibilityResponse);
        return _EligibilityResponseRepository;
      }
    }

    public IResourceRepository EncounterRepository
    {
      get
      {
        if (this._EncounterRepository == null)
          this._EncounterRepository = new CommonResourceRepository<EncounterRes, EncounterResIndex>(_context, FHIRAllTypes.Encounter);
        return _EncounterRepository;
      }
    }

    public IResourceRepository EndpointRepository
    {
      get
      {
        if (this._EndpointRepository == null)
          this._EndpointRepository = new CommonResourceRepository<EndpointRes, EndpointResIndex>(_context, FHIRAllTypes.Endpoint);
        return _EndpointRepository;
      }
    }

    public IResourceRepository EnrollmentRequestRepository
    {
      get
      {
        if (this._EnrollmentRequestRepository == null)
          this._EnrollmentRequestRepository = new CommonResourceRepository<EnrollmentRequestRes, EnrollmentRequestResIndex>(_context, FHIRAllTypes.EnrollmentRequest);
        return _EnrollmentRequestRepository;
      }
    }

    public IResourceRepository EnrollmentResponseRepository
    {
      get
      {
        if (this._EnrollmentResponseRepository == null)
          this._EnrollmentResponseRepository = new CommonResourceRepository<EnrollmentResponseRes, EnrollmentResponseResIndex>(_context, FHIRAllTypes.EnrollmentResponse);
        return _EnrollmentResponseRepository;
      }
    }

    public IResourceRepository EpisodeOfCareRepository
    {
      get
      {
        if (this._EpisodeOfCareRepository == null)
          this._EpisodeOfCareRepository = new CommonResourceRepository<EpisodeOfCareRes, EpisodeOfCareResIndex>(_context, FHIRAllTypes.EpisodeOfCare);
        return _EpisodeOfCareRepository;
      }
    }

    public IResourceRepository ExpansionProfileRepository
    {
      get
      {
        if (this._ExpansionProfileRepository == null)
          this._ExpansionProfileRepository = new CommonResourceRepository<ExpansionProfileRes, ExpansionProfileResIndex>(_context, FHIRAllTypes.ExpansionProfile);
        return _ExpansionProfileRepository;
      }
    }

    public IResourceRepository ExplanationOfBenefitRepository
    {
      get
      {
        if (this._ExplanationOfBenefitRepository == null)
          this._ExplanationOfBenefitRepository = new CommonResourceRepository<ExplanationOfBenefitRes, ExplanationOfBenefitResIndex>(_context, FHIRAllTypes.ExplanationOfBenefit);
        return _ExplanationOfBenefitRepository;
      }
    }

    public IResourceRepository FamilyMemberHistoryRepository
    {
      get
      {
        if (this._FamilyMemberHistoryRepository == null)
          this._FamilyMemberHistoryRepository = new CommonResourceRepository<FamilyMemberHistoryRes, FamilyMemberHistoryResIndex>(_context, FHIRAllTypes.FamilyMemberHistory);
        return _FamilyMemberHistoryRepository;
      }
    }

    public IResourceRepository FlagRepository
    {
      get
      {
        if (this._FlagRepository == null)
          this._FlagRepository = new CommonResourceRepository<FlagRes, FlagResIndex>(_context, FHIRAllTypes.Flag);
        return _FlagRepository;
      }
    }

    public IResourceRepository GoalRepository
    {
      get
      {
        if (this._GoalRepository == null)
          this._GoalRepository = new CommonResourceRepository<GoalRes, GoalResIndex>(_context, FHIRAllTypes.Goal);
        return _GoalRepository;
      }
    }

    public IResourceRepository GraphDefinitionRepository
    {
      get
      {
        if (this._GraphDefinitionRepository == null)
          this._GraphDefinitionRepository = new CommonResourceRepository<GraphDefinitionRes, GraphDefinitionResIndex>(_context, FHIRAllTypes.GraphDefinition);
        return _GraphDefinitionRepository;
      }
    }

    public IResourceRepository GroupRepository
    {
      get
      {
        if (this._GroupRepository == null)
          this._GroupRepository = new CommonResourceRepository<GroupRes, GroupResIndex>(_context, FHIRAllTypes.Group);
        return _GroupRepository;
      }
    }

    public IResourceRepository GuidanceResponseRepository
    {
      get
      {
        if (this._GuidanceResponseRepository == null)
          this._GuidanceResponseRepository = new CommonResourceRepository<GuidanceResponseRes, GuidanceResponseResIndex>(_context, FHIRAllTypes.GuidanceResponse);
        return _GuidanceResponseRepository;
      }
    }

    public IResourceRepository HealthcareServiceRepository
    {
      get
      {
        if (this._HealthcareServiceRepository == null)
          this._HealthcareServiceRepository = new CommonResourceRepository<HealthcareServiceRes, HealthcareServiceResIndex>(_context, FHIRAllTypes.HealthcareService);
        return _HealthcareServiceRepository;
      }
    }

    public IResourceRepository ImagingManifestRepository
    {
      get
      {
        if (this._ImagingManifestRepository == null)
          this._ImagingManifestRepository = new CommonResourceRepository<ImagingManifestRes, ImagingManifestResIndex>(_context, FHIRAllTypes.ImagingManifest);
        return _ImagingManifestRepository;
      }
    }

    public IResourceRepository ImagingStudyRepository
    {
      get
      {
        if (this._ImagingStudyRepository == null)
          this._ImagingStudyRepository = new CommonResourceRepository<ImagingStudyRes, ImagingStudyResIndex>(_context, FHIRAllTypes.ImagingStudy);
        return _ImagingStudyRepository;
      }
    }

    public IResourceRepository ImmunizationRepository
    {
      get
      {
        if (this._ImmunizationRepository == null)
          this._ImmunizationRepository = new CommonResourceRepository<ImmunizationRes, ImmunizationResIndex>(_context, FHIRAllTypes.Immunization);
        return _ImmunizationRepository;
      }
    }

    public IResourceRepository ImmunizationRecommendationRepository
    {
      get
      {
        if (this._ImmunizationRecommendationRepository == null)
          this._ImmunizationRecommendationRepository = new CommonResourceRepository<ImmunizationRecommendationRes, ImmunizationRecommendationResIndex>(_context, FHIRAllTypes.ImmunizationRecommendation);
        return _ImmunizationRecommendationRepository;
      }
    }

    public IResourceRepository ImplementationGuideRepository
    {
      get
      {
        if (this._ImplementationGuideRepository == null)
          this._ImplementationGuideRepository = new CommonResourceRepository<ImplementationGuideRes, ImplementationGuideResIndex>(_context, FHIRAllTypes.ImplementationGuide);
        return _ImplementationGuideRepository;
      }
    }

    public IResourceRepository LibraryRepository
    {
      get
      {
        if (this._LibraryRepository == null)
          this._LibraryRepository = new CommonResourceRepository<LibraryRes, LibraryResIndex>(_context, FHIRAllTypes.Library);
        return _LibraryRepository;
      }
    }

    public IResourceRepository LinkageRepository
    {
      get
      {
        if (this._LinkageRepository == null)
          this._LinkageRepository = new CommonResourceRepository<LinkageRes, LinkageResIndex>(_context, FHIRAllTypes.Linkage);
        return _LinkageRepository;
      }
    }

    public IResourceRepository ListRepository
    {
      get
      {
        if (this._ListRepository == null)
          this._ListRepository = new CommonResourceRepository<ListRes, ListResIndex>(_context, FHIRAllTypes.List);
        return _ListRepository;
      }
    }

    public IResourceRepository LocationRepository
    {
      get
      {
        if (this._LocationRepository == null)
          this._LocationRepository = new CommonResourceRepository<LocationRes, LocationResIndex>(_context, FHIRAllTypes.Location);
        return _LocationRepository;
      }
    }

    public IResourceRepository MeasureRepository
    {
      get
      {
        if (this._MeasureRepository == null)
          this._MeasureRepository = new CommonResourceRepository<MeasureRes, MeasureResIndex>(_context, FHIRAllTypes.Measure);
        return _MeasureRepository;
      }
    }

    public IResourceRepository MeasureReportRepository
    {
      get
      {
        if (this._MeasureReportRepository == null)
          this._MeasureReportRepository = new CommonResourceRepository<MeasureReportRes, MeasureReportResIndex>(_context, FHIRAllTypes.MeasureReport);
        return _MeasureReportRepository;
      }
    }

    public IResourceRepository MediaRepository
    {
      get
      {
        if (this._MediaRepository == null)
          this._MediaRepository = new CommonResourceRepository<MediaRes, MediaResIndex>(_context, FHIRAllTypes.Media);
        return _MediaRepository;
      }
    }

    public IResourceRepository MedicationRepository
    {
      get
      {
        if (this._MedicationRepository == null)
          this._MedicationRepository = new CommonResourceRepository<MedicationRes, MedicationResIndex>(_context, FHIRAllTypes.Medication);
        return _MedicationRepository;
      }
    }

    public IResourceRepository MedicationAdministrationRepository
    {
      get
      {
        if (this._MedicationAdministrationRepository == null)
          this._MedicationAdministrationRepository = new CommonResourceRepository<MedicationAdministrationRes, MedicationAdministrationResIndex>(_context, FHIRAllTypes.MedicationAdministration);
        return _MedicationAdministrationRepository;
      }
    }

    public IResourceRepository MedicationDispenseRepository
    {
      get
      {
        if (this._MedicationDispenseRepository == null)
          this._MedicationDispenseRepository = new CommonResourceRepository<MedicationDispenseRes, MedicationDispenseResIndex>(_context, FHIRAllTypes.MedicationDispense);
        return _MedicationDispenseRepository;
      }
    }

    public IResourceRepository MedicationRequestRepository
    {
      get
      {
        if (this._MedicationRequestRepository == null)
          this._MedicationRequestRepository = new CommonResourceRepository<MedicationRequestRes, MedicationRequestResIndex>(_context, FHIRAllTypes.MedicationRequest);
        return _MedicationRequestRepository;
      }
    }

    public IResourceRepository MedicationStatementRepository
    {
      get
      {
        if (this._MedicationStatementRepository == null)
          this._MedicationStatementRepository = new CommonResourceRepository<MedicationStatementRes, MedicationStatementResIndex>(_context, FHIRAllTypes.MedicationStatement);
        return _MedicationStatementRepository;
      }
    }

    public IResourceRepository MessageDefinitionRepository
    {
      get
      {
        if (this._MessageDefinitionRepository == null)
          this._MessageDefinitionRepository = new CommonResourceRepository<MessageDefinitionRes, MessageDefinitionResIndex>(_context, FHIRAllTypes.MessageDefinition);
        return _MessageDefinitionRepository;
      }
    }

    public IResourceRepository MessageHeaderRepository
    {
      get
      {
        if (this._MessageHeaderRepository == null)
          this._MessageHeaderRepository = new CommonResourceRepository<MessageHeaderRes, MessageHeaderResIndex>(_context, FHIRAllTypes.MessageHeader);
        return _MessageHeaderRepository;
      }
    }

    public IResourceRepository NamingSystemRepository
    {
      get
      {
        if (this._NamingSystemRepository == null)
          this._NamingSystemRepository = new CommonResourceRepository<NamingSystemRes, NamingSystemResIndex>(_context, FHIRAllTypes.NamingSystem);
        return _NamingSystemRepository;
      }
    }

    public IResourceRepository NutritionOrderRepository
    {
      get
      {
        if (this._NutritionOrderRepository == null)
          this._NutritionOrderRepository = new CommonResourceRepository<NutritionOrderRes, NutritionOrderResIndex>(_context, FHIRAllTypes.NutritionOrder);
        return _NutritionOrderRepository;
      }
    }

    public IResourceRepository ObservationRepository
    {
      get
      {
        if (this._ObservationRepository == null)
          this._ObservationRepository = new CommonResourceRepository<ObservationRes, ObservationResIndex>(_context, FHIRAllTypes.Observation);
        return _ObservationRepository;
      }
    }

    public IResourceRepository OperationDefinitionRepository
    {
      get
      {
        if (this._OperationDefinitionRepository == null)
          this._OperationDefinitionRepository = new CommonResourceRepository<OperationDefinitionRes, OperationDefinitionResIndex>(_context, FHIRAllTypes.OperationDefinition);
        return _OperationDefinitionRepository;
      }
    }

    public IResourceRepository OperationOutcomeRepository
    {
      get
      {
        if (this._OperationOutcomeRepository == null)
          this._OperationOutcomeRepository = new CommonResourceRepository<OperationOutcomeRes, OperationOutcomeResIndex>(_context, FHIRAllTypes.OperationOutcome);
        return _OperationOutcomeRepository;
      }
    }

    public IResourceRepository OrganizationRepository
    {
      get
      {
        if (this._OrganizationRepository == null)
          this._OrganizationRepository = new CommonResourceRepository<OrganizationRes, OrganizationResIndex>(_context, FHIRAllTypes.Organization);
        return _OrganizationRepository;
      }
    }

    public IResourceRepository ParametersRepository
    {
      get
      {
        if (this._ParametersRepository == null)
          this._ParametersRepository = new CommonResourceRepository<ParametersRes, ParametersResIndex>(_context, FHIRAllTypes.Parameters);
        return _ParametersRepository;
      }
    }

    public IResourceRepository PatientRepository
    {
      get
      {
        if (this._PatientRepository == null)
          this._PatientRepository = new CommonResourceRepository<PatientRes, PatientResIndex>(_context, FHIRAllTypes.Patient);
        return _PatientRepository;
      }
    }

    public IResourceRepository PaymentNoticeRepository
    {
      get
      {
        if (this._PaymentNoticeRepository == null)
          this._PaymentNoticeRepository = new CommonResourceRepository<PaymentNoticeRes, PaymentNoticeResIndex>(_context, FHIRAllTypes.PaymentNotice);
        return _PaymentNoticeRepository;
      }
    }

    public IResourceRepository PaymentReconciliationRepository
    {
      get
      {
        if (this._PaymentReconciliationRepository == null)
          this._PaymentReconciliationRepository = new CommonResourceRepository<PaymentReconciliationRes, PaymentReconciliationResIndex>(_context, FHIRAllTypes.PaymentReconciliation);
        return _PaymentReconciliationRepository;
      }
    }

    public IResourceRepository PersonRepository
    {
      get
      {
        if (this._PersonRepository == null)
          this._PersonRepository = new CommonResourceRepository<PersonRes, PersonResIndex>(_context, FHIRAllTypes.Person);
        return _PersonRepository;
      }
    }

    public IResourceRepository PlanDefinitionRepository
    {
      get
      {
        if (this._PlanDefinitionRepository == null)
          this._PlanDefinitionRepository = new CommonResourceRepository<PlanDefinitionRes, PlanDefinitionResIndex>(_context, FHIRAllTypes.PlanDefinition);
        return _PlanDefinitionRepository;
      }
    }

    public IResourceRepository PractitionerRepository
    {
      get
      {
        if (this._PractitionerRepository == null)
          this._PractitionerRepository = new CommonResourceRepository<PractitionerRes, PractitionerResIndex>(_context, FHIRAllTypes.Practitioner);
        return _PractitionerRepository;
      }
    }

    public IResourceRepository PractitionerRoleRepository
    {
      get
      {
        if (this._PractitionerRoleRepository == null)
          this._PractitionerRoleRepository = new CommonResourceRepository<PractitionerRoleRes, PractitionerRoleResIndex>(_context, FHIRAllTypes.PractitionerRole);
        return _PractitionerRoleRepository;
      }
    }

    public IResourceRepository ProcedureRepository
    {
      get
      {
        if (this._ProcedureRepository == null)
          this._ProcedureRepository = new CommonResourceRepository<ProcedureRes, ProcedureResIndex>(_context, FHIRAllTypes.Procedure);
        return _ProcedureRepository;
      }
    }

    public IResourceRepository ProcedureRequestRepository
    {
      get
      {
        if (this._ProcedureRequestRepository == null)
          this._ProcedureRequestRepository = new CommonResourceRepository<ProcedureRequestRes, ProcedureRequestResIndex>(_context, FHIRAllTypes.ProcedureRequest);
        return _ProcedureRequestRepository;
      }
    }

    public IResourceRepository ProcessRequestRepository
    {
      get
      {
        if (this._ProcessRequestRepository == null)
          this._ProcessRequestRepository = new CommonResourceRepository<ProcessRequestRes, ProcessRequestResIndex>(_context, FHIRAllTypes.ProcessRequest);
        return _ProcessRequestRepository;
      }
    }

    public IResourceRepository ProcessResponseRepository
    {
      get
      {
        if (this._ProcessResponseRepository == null)
          this._ProcessResponseRepository = new CommonResourceRepository<ProcessResponseRes, ProcessResponseResIndex>(_context, FHIRAllTypes.ProcessResponse);
        return _ProcessResponseRepository;
      }
    }

    public IResourceRepository ProvenanceRepository
    {
      get
      {
        if (this._ProvenanceRepository == null)
          this._ProvenanceRepository = new CommonResourceRepository<ProvenanceRes, ProvenanceResIndex>(_context, FHIRAllTypes.Provenance);
        return _ProvenanceRepository;
      }
    }

    public IResourceRepository QuestionnaireRepository
    {
      get
      {
        if (this._QuestionnaireRepository == null)
          this._QuestionnaireRepository = new CommonResourceRepository<QuestionnaireRes, QuestionnaireResIndex>(_context, FHIRAllTypes.Questionnaire);
        return _QuestionnaireRepository;
      }
    }

    public IResourceRepository QuestionnaireResponseRepository
    {
      get
      {
        if (this._QuestionnaireResponseRepository == null)
          this._QuestionnaireResponseRepository = new CommonResourceRepository<QuestionnaireResponseRes, QuestionnaireResponseResIndex>(_context, FHIRAllTypes.QuestionnaireResponse);
        return _QuestionnaireResponseRepository;
      }
    }

    public IResourceRepository ReferralRequestRepository
    {
      get
      {
        if (this._ReferralRequestRepository == null)
          this._ReferralRequestRepository = new CommonResourceRepository<ReferralRequestRes, ReferralRequestResIndex>(_context, FHIRAllTypes.ReferralRequest);
        return _ReferralRequestRepository;
      }
    }

    public IResourceRepository RelatedPersonRepository
    {
      get
      {
        if (this._RelatedPersonRepository == null)
          this._RelatedPersonRepository = new CommonResourceRepository<RelatedPersonRes, RelatedPersonResIndex>(_context, FHIRAllTypes.RelatedPerson);
        return _RelatedPersonRepository;
      }
    }

    public IResourceRepository RequestGroupRepository
    {
      get
      {
        if (this._RequestGroupRepository == null)
          this._RequestGroupRepository = new CommonResourceRepository<RequestGroupRes, RequestGroupResIndex>(_context, FHIRAllTypes.RequestGroup);
        return _RequestGroupRepository;
      }
    }

    public IResourceRepository ResearchStudyRepository
    {
      get
      {
        if (this._ResearchStudyRepository == null)
          this._ResearchStudyRepository = new CommonResourceRepository<ResearchStudyRes, ResearchStudyResIndex>(_context, FHIRAllTypes.ResearchStudy);
        return _ResearchStudyRepository;
      }
    }

    public IResourceRepository ResearchSubjectRepository
    {
      get
      {
        if (this._ResearchSubjectRepository == null)
          this._ResearchSubjectRepository = new CommonResourceRepository<ResearchSubjectRes, ResearchSubjectResIndex>(_context, FHIRAllTypes.ResearchSubject);
        return _ResearchSubjectRepository;
      }
    }

    public IResourceRepository RiskAssessmentRepository
    {
      get
      {
        if (this._RiskAssessmentRepository == null)
          this._RiskAssessmentRepository = new CommonResourceRepository<RiskAssessmentRes, RiskAssessmentResIndex>(_context, FHIRAllTypes.RiskAssessment);
        return _RiskAssessmentRepository;
      }
    }

    public IResourceRepository ScheduleRepository
    {
      get
      {
        if (this._ScheduleRepository == null)
          this._ScheduleRepository = new CommonResourceRepository<ScheduleRes, ScheduleResIndex>(_context, FHIRAllTypes.Schedule);
        return _ScheduleRepository;
      }
    }

    public IResourceRepository SearchParameterRepository
    {
      get
      {
        if (this._SearchParameterRepository == null)
          this._SearchParameterRepository = new CommonResourceRepository<SearchParameterRes, SearchParameterResIndex>(_context, FHIRAllTypes.SearchParameter);
        return _SearchParameterRepository;
      }
    }

    public IResourceRepository SequenceRepository
    {
      get
      {
        if (this._SequenceRepository == null)
          this._SequenceRepository = new CommonResourceRepository<SequenceRes, SequenceResIndex>(_context, FHIRAllTypes.Sequence);
        return _SequenceRepository;
      }
    }

    public IResourceRepository ServiceDefinitionRepository
    {
      get
      {
        if (this._ServiceDefinitionRepository == null)
          this._ServiceDefinitionRepository = new CommonResourceRepository<ServiceDefinitionRes, ServiceDefinitionResIndex>(_context, FHIRAllTypes.ServiceDefinition);
        return _ServiceDefinitionRepository;
      }
    }

    public IResourceRepository SlotRepository
    {
      get
      {
        if (this._SlotRepository == null)
          this._SlotRepository = new CommonResourceRepository<SlotRes, SlotResIndex>(_context, FHIRAllTypes.Slot);
        return _SlotRepository;
      }
    }

    public IResourceRepository SpecimenRepository
    {
      get
      {
        if (this._SpecimenRepository == null)
          this._SpecimenRepository = new CommonResourceRepository<SpecimenRes, SpecimenResIndex>(_context, FHIRAllTypes.Specimen);
        return _SpecimenRepository;
      }
    }

    public IResourceRepository StructureDefinitionRepository
    {
      get
      {
        if (this._StructureDefinitionRepository == null)
          this._StructureDefinitionRepository = new CommonResourceRepository<StructureDefinitionRes, StructureDefinitionResIndex>(_context, FHIRAllTypes.StructureDefinition);
        return _StructureDefinitionRepository;
      }
    }

    public IResourceRepository StructureMapRepository
    {
      get
      {
        if (this._StructureMapRepository == null)
          this._StructureMapRepository = new CommonResourceRepository<StructureMapRes, StructureMapResIndex>(_context, FHIRAllTypes.StructureMap);
        return _StructureMapRepository;
      }
    }

    public IResourceRepository SubscriptionRepository
    {
      get
      {
        if (this._SubscriptionRepository == null)
          this._SubscriptionRepository = new CommonResourceRepository<SubscriptionRes, SubscriptionResIndex>(_context, FHIRAllTypes.Subscription);
        return _SubscriptionRepository;
      }
    }

    public IResourceRepository SubstanceRepository
    {
      get
      {
        if (this._SubstanceRepository == null)
          this._SubstanceRepository = new CommonResourceRepository<SubstanceRes, SubstanceResIndex>(_context, FHIRAllTypes.Substance);
        return _SubstanceRepository;
      }
    }

    public IResourceRepository SupplyDeliveryRepository
    {
      get
      {
        if (this._SupplyDeliveryRepository == null)
          this._SupplyDeliveryRepository = new CommonResourceRepository<SupplyDeliveryRes, SupplyDeliveryResIndex>(_context, FHIRAllTypes.SupplyDelivery);
        return _SupplyDeliveryRepository;
      }
    }

    public IResourceRepository SupplyRequestRepository
    {
      get
      {
        if (this._SupplyRequestRepository == null)
          this._SupplyRequestRepository = new CommonResourceRepository<SupplyRequestRes, SupplyRequestResIndex>(_context, FHIRAllTypes.SupplyRequest);
        return _SupplyRequestRepository;
      }
    }

    public IResourceRepository TaskRepository
    {
      get
      {
        if (this._TaskRepository == null)
          this._TaskRepository = new CommonResourceRepository<TaskRes, TaskResIndex>(_context, FHIRAllTypes.Task);
        return _TaskRepository;
      }
    }

    public IResourceRepository TestReportRepository
    {
      get
      {
        if (this._TestReportRepository == null)
          this._TestReportRepository = new CommonResourceRepository<TestReportRes, TestReportResIndex>(_context, FHIRAllTypes.TestReport);
        return _TestReportRepository;
      }
    }

    public IResourceRepository TestScriptRepository
    {
      get
      {
        if (this._TestScriptRepository == null)
          this._TestScriptRepository = new CommonResourceRepository<TestScriptRes, TestScriptResIndex>(_context, FHIRAllTypes.TestScript);
        return _TestScriptRepository;
      }
    }

    public IResourceRepository ValueSetRepository
    {
      get
      {
        if (this._ValueSetRepository == null)
          this._ValueSetRepository = new CommonResourceRepository<ValueSetRes, ValueSetResIndex>(_context, FHIRAllTypes.ValueSet);
        return _ValueSetRepository;
      }
    }

    public IResourceRepository VisionPrescriptionRepository
    {
      get
      {
        if (this._VisionPrescriptionRepository == null)
          this._VisionPrescriptionRepository = new CommonResourceRepository<VisionPrescriptionRes, VisionPrescriptionResIndex>(_context, FHIRAllTypes.VisionPrescription);
        return _VisionPrescriptionRepository;
      }
    }

	
  }
}
