using Hl7.Fhir.Model;
using Pyro.Common.Interfaces.Repositories;
using Pyro.DataLayer.DbModel.EntityGenerated;
using System;

//This file was code generated by Pyro.CodeGeneration.Template.MainTemplate.tt
//Generation TimeStamp: 4/10/2018 10:43:49 AM

namespace Pyro.DataLayer.DbModel.UnitOfWork
{  
  public partial class UnitOfWork : IUnitOfWork, IDisposable
  {    
    public IResourceRepository AccountRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AccountRes, AccountIxStr, AccountIxTok, AccountIxUri, AccountIxRef, AccountIxQty, AccountIxDT>(FHIRAllTypes.Account);             
      }
    }
    public IResourceRepository ActivityDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ActivityDefinitionRes, ActivityDefinitionIxStr, ActivityDefinitionIxTok, ActivityDefinitionIxUri, ActivityDefinitionIxRef, ActivityDefinitionIxQty, ActivityDefinitionIxDT>(FHIRAllTypes.ActivityDefinition);             
      }
    }
    public IResourceRepository AdverseEventRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AdverseEventRes, AdverseEventIxStr, AdverseEventIxTok, AdverseEventIxUri, AdverseEventIxRef, AdverseEventIxQty, AdverseEventIxDT>(FHIRAllTypes.AdverseEvent);             
      }
    }
    public IResourceRepository AllergyIntoleranceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AllergyIntoleranceRes, AllergyIntoleranceIxStr, AllergyIntoleranceIxTok, AllergyIntoleranceIxUri, AllergyIntoleranceIxRef, AllergyIntoleranceIxQty, AllergyIntoleranceIxDT>(FHIRAllTypes.AllergyIntolerance);             
      }
    }
    public IResourceRepository AppointmentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AppointmentRes, AppointmentIxStr, AppointmentIxTok, AppointmentIxUri, AppointmentIxRef, AppointmentIxQty, AppointmentIxDT>(FHIRAllTypes.Appointment);             
      }
    }
    public IResourceRepository AppointmentResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AppointmentResponseRes, AppointmentResponseIxStr, AppointmentResponseIxTok, AppointmentResponseIxUri, AppointmentResponseIxRef, AppointmentResponseIxQty, AppointmentResponseIxDT>(FHIRAllTypes.AppointmentResponse);             
      }
    }
    public IResourceRepository AuditEventRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AuditEventRes, AuditEventIxStr, AuditEventIxTok, AuditEventIxUri, AuditEventIxRef, AuditEventIxQty, AuditEventIxDT>(FHIRAllTypes.AuditEvent);             
      }
    }
    public IResourceRepository BasicRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BasicRes, BasicIxStr, BasicIxTok, BasicIxUri, BasicIxRef, BasicIxQty, BasicIxDT>(FHIRAllTypes.Basic);             
      }
    }
    public IResourceRepository BinaryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BinaryRes, BinaryIxStr, BinaryIxTok, BinaryIxUri, BinaryIxRef, BinaryIxQty, BinaryIxDT>(FHIRAllTypes.Binary);             
      }
    }
    public IResourceRepository BiologicallyDerivedProductRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BiologicallyDerivedProductRes, BiologicallyDerivedProductIxStr, BiologicallyDerivedProductIxTok, BiologicallyDerivedProductIxUri, BiologicallyDerivedProductIxRef, BiologicallyDerivedProductIxQty, BiologicallyDerivedProductIxDT>(FHIRAllTypes.BiologicallyDerivedProduct);             
      }
    }
    public IResourceRepository BodyStructureRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BodyStructureRes, BodyStructureIxStr, BodyStructureIxTok, BodyStructureIxUri, BodyStructureIxRef, BodyStructureIxQty, BodyStructureIxDT>(FHIRAllTypes.BodyStructure);             
      }
    }
    public IResourceRepository BundleRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BundleRes, BundleIxStr, BundleIxTok, BundleIxUri, BundleIxRef, BundleIxQty, BundleIxDT>(FHIRAllTypes.Bundle);             
      }
    }
    public IResourceRepository CapabilityStatementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CapabilityStatementRes, CapabilityStatementIxStr, CapabilityStatementIxTok, CapabilityStatementIxUri, CapabilityStatementIxRef, CapabilityStatementIxQty, CapabilityStatementIxDT>(FHIRAllTypes.CapabilityStatement);             
      }
    }
    public IResourceRepository CarePlanRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CarePlanRes, CarePlanIxStr, CarePlanIxTok, CarePlanIxUri, CarePlanIxRef, CarePlanIxQty, CarePlanIxDT>(FHIRAllTypes.CarePlan);             
      }
    }
    public IResourceRepository CareTeamRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CareTeamRes, CareTeamIxStr, CareTeamIxTok, CareTeamIxUri, CareTeamIxRef, CareTeamIxQty, CareTeamIxDT>(FHIRAllTypes.CareTeam);             
      }
    }
    public IResourceRepository ChargeItemRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ChargeItemRes, ChargeItemIxStr, ChargeItemIxTok, ChargeItemIxUri, ChargeItemIxRef, ChargeItemIxQty, ChargeItemIxDT>(FHIRAllTypes.ChargeItem);             
      }
    }
    public IResourceRepository ChargeItemDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ChargeItemDefinitionRes, ChargeItemDefinitionIxStr, ChargeItemDefinitionIxTok, ChargeItemDefinitionIxUri, ChargeItemDefinitionIxRef, ChargeItemDefinitionIxQty, ChargeItemDefinitionIxDT>(FHIRAllTypes.ChargeItemDefinition);             
      }
    }
    public IResourceRepository ClaimRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ClaimRes, ClaimIxStr, ClaimIxTok, ClaimIxUri, ClaimIxRef, ClaimIxQty, ClaimIxDT>(FHIRAllTypes.Claim);             
      }
    }
    public IResourceRepository ClaimResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ClaimResponseRes, ClaimResponseIxStr, ClaimResponseIxTok, ClaimResponseIxUri, ClaimResponseIxRef, ClaimResponseIxQty, ClaimResponseIxDT>(FHIRAllTypes.ClaimResponse);             
      }
    }
    public IResourceRepository ClinicalImpressionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ClinicalImpressionRes, ClinicalImpressionIxStr, ClinicalImpressionIxTok, ClinicalImpressionIxUri, ClinicalImpressionIxRef, ClinicalImpressionIxQty, ClinicalImpressionIxDT>(FHIRAllTypes.ClinicalImpression);             
      }
    }
    public IResourceRepository CodeSystemRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CodeSystemRes, CodeSystemIxStr, CodeSystemIxTok, CodeSystemIxUri, CodeSystemIxRef, CodeSystemIxQty, CodeSystemIxDT>(FHIRAllTypes.CodeSystem);             
      }
    }
    public IResourceRepository CommunicationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CommunicationRes, CommunicationIxStr, CommunicationIxTok, CommunicationIxUri, CommunicationIxRef, CommunicationIxQty, CommunicationIxDT>(FHIRAllTypes.Communication);             
      }
    }
    public IResourceRepository CommunicationRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CommunicationRequestRes, CommunicationRequestIxStr, CommunicationRequestIxTok, CommunicationRequestIxUri, CommunicationRequestIxRef, CommunicationRequestIxQty, CommunicationRequestIxDT>(FHIRAllTypes.CommunicationRequest);             
      }
    }
    public IResourceRepository CompartmentDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CompartmentDefinitionRes, CompartmentDefinitionIxStr, CompartmentDefinitionIxTok, CompartmentDefinitionIxUri, CompartmentDefinitionIxRef, CompartmentDefinitionIxQty, CompartmentDefinitionIxDT>(FHIRAllTypes.CompartmentDefinition);             
      }
    }
    public IResourceRepository CompositionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CompositionRes, CompositionIxStr, CompositionIxTok, CompositionIxUri, CompositionIxRef, CompositionIxQty, CompositionIxDT>(FHIRAllTypes.Composition);             
      }
    }
    public IResourceRepository ConceptMapRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ConceptMapRes, ConceptMapIxStr, ConceptMapIxTok, ConceptMapIxUri, ConceptMapIxRef, ConceptMapIxQty, ConceptMapIxDT>(FHIRAllTypes.ConceptMap);             
      }
    }
    public IResourceRepository ConditionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ConditionRes, ConditionIxStr, ConditionIxTok, ConditionIxUri, ConditionIxRef, ConditionIxQty, ConditionIxDT>(FHIRAllTypes.Condition);             
      }
    }
    public IResourceRepository ConsentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ConsentRes, ConsentIxStr, ConsentIxTok, ConsentIxUri, ConsentIxRef, ConsentIxQty, ConsentIxDT>(FHIRAllTypes.Consent);             
      }
    }
    public IResourceRepository ContractRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ContractRes, ContractIxStr, ContractIxTok, ContractIxUri, ContractIxRef, ContractIxQty, ContractIxDT>(FHIRAllTypes.Contract);             
      }
    }
    public IResourceRepository CoverageRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CoverageRes, CoverageIxStr, CoverageIxTok, CoverageIxUri, CoverageIxRef, CoverageIxQty, CoverageIxDT>(FHIRAllTypes.Coverage);             
      }
    }
    public IResourceRepository CoverageEligibilityRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CoverageEligibilityRequestRes, CoverageEligibilityRequestIxStr, CoverageEligibilityRequestIxTok, CoverageEligibilityRequestIxUri, CoverageEligibilityRequestIxRef, CoverageEligibilityRequestIxQty, CoverageEligibilityRequestIxDT>(FHIRAllTypes.CoverageEligibilityRequest);             
      }
    }
    public IResourceRepository CoverageEligibilityResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CoverageEligibilityResponseRes, CoverageEligibilityResponseIxStr, CoverageEligibilityResponseIxTok, CoverageEligibilityResponseIxUri, CoverageEligibilityResponseIxRef, CoverageEligibilityResponseIxQty, CoverageEligibilityResponseIxDT>(FHIRAllTypes.CoverageEligibilityResponse);             
      }
    }
    public IResourceRepository DetectedIssueRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DetectedIssueRes, DetectedIssueIxStr, DetectedIssueIxTok, DetectedIssueIxUri, DetectedIssueIxRef, DetectedIssueIxQty, DetectedIssueIxDT>(FHIRAllTypes.DetectedIssue);             
      }
    }
    public IResourceRepository DeviceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceRes, DeviceIxStr, DeviceIxTok, DeviceIxUri, DeviceIxRef, DeviceIxQty, DeviceIxDT>(FHIRAllTypes.Device);             
      }
    }
    public IResourceRepository DeviceDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceDefinitionRes, DeviceDefinitionIxStr, DeviceDefinitionIxTok, DeviceDefinitionIxUri, DeviceDefinitionIxRef, DeviceDefinitionIxQty, DeviceDefinitionIxDT>(FHIRAllTypes.DeviceDefinition);             
      }
    }
    public IResourceRepository DeviceMetricRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceMetricRes, DeviceMetricIxStr, DeviceMetricIxTok, DeviceMetricIxUri, DeviceMetricIxRef, DeviceMetricIxQty, DeviceMetricIxDT>(FHIRAllTypes.DeviceMetric);             
      }
    }
    public IResourceRepository DeviceRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceRequestRes, DeviceRequestIxStr, DeviceRequestIxTok, DeviceRequestIxUri, DeviceRequestIxRef, DeviceRequestIxQty, DeviceRequestIxDT>(FHIRAllTypes.DeviceRequest);             
      }
    }
    public IResourceRepository DeviceUseStatementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceUseStatementRes, DeviceUseStatementIxStr, DeviceUseStatementIxTok, DeviceUseStatementIxUri, DeviceUseStatementIxRef, DeviceUseStatementIxQty, DeviceUseStatementIxDT>(FHIRAllTypes.DeviceUseStatement);             
      }
    }
    public IResourceRepository DiagnosticReportRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DiagnosticReportRes, DiagnosticReportIxStr, DiagnosticReportIxTok, DiagnosticReportIxUri, DiagnosticReportIxRef, DiagnosticReportIxQty, DiagnosticReportIxDT>(FHIRAllTypes.DiagnosticReport);             
      }
    }
    public IResourceRepository DocumentManifestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DocumentManifestRes, DocumentManifestIxStr, DocumentManifestIxTok, DocumentManifestIxUri, DocumentManifestIxRef, DocumentManifestIxQty, DocumentManifestIxDT>(FHIRAllTypes.DocumentManifest);             
      }
    }
    public IResourceRepository DocumentReferenceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DocumentReferenceRes, DocumentReferenceIxStr, DocumentReferenceIxTok, DocumentReferenceIxUri, DocumentReferenceIxRef, DocumentReferenceIxQty, DocumentReferenceIxDT>(FHIRAllTypes.DocumentReference);             
      }
    }
    public IResourceRepository EncounterRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EncounterRes, EncounterIxStr, EncounterIxTok, EncounterIxUri, EncounterIxRef, EncounterIxQty, EncounterIxDT>(FHIRAllTypes.Encounter);             
      }
    }
    public IResourceRepository EndpointRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EndpointRes, EndpointIxStr, EndpointIxTok, EndpointIxUri, EndpointIxRef, EndpointIxQty, EndpointIxDT>(FHIRAllTypes.Endpoint);             
      }
    }
    public IResourceRepository EnrollmentRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EnrollmentRequestRes, EnrollmentRequestIxStr, EnrollmentRequestIxTok, EnrollmentRequestIxUri, EnrollmentRequestIxRef, EnrollmentRequestIxQty, EnrollmentRequestIxDT>(FHIRAllTypes.EnrollmentRequest);             
      }
    }
    public IResourceRepository EnrollmentResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EnrollmentResponseRes, EnrollmentResponseIxStr, EnrollmentResponseIxTok, EnrollmentResponseIxUri, EnrollmentResponseIxRef, EnrollmentResponseIxQty, EnrollmentResponseIxDT>(FHIRAllTypes.EnrollmentResponse);             
      }
    }
    public IResourceRepository EntryDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EntryDefinitionRes, EntryDefinitionIxStr, EntryDefinitionIxTok, EntryDefinitionIxUri, EntryDefinitionIxRef, EntryDefinitionIxQty, EntryDefinitionIxDT>(FHIRAllTypes.EntryDefinition);             
      }
    }
    public IResourceRepository EpisodeOfCareRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EpisodeOfCareRes, EpisodeOfCareIxStr, EpisodeOfCareIxTok, EpisodeOfCareIxUri, EpisodeOfCareIxRef, EpisodeOfCareIxQty, EpisodeOfCareIxDT>(FHIRAllTypes.EpisodeOfCare);             
      }
    }
    public IResourceRepository EventDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EventDefinitionRes, EventDefinitionIxStr, EventDefinitionIxTok, EventDefinitionIxUri, EventDefinitionIxRef, EventDefinitionIxQty, EventDefinitionIxDT>(FHIRAllTypes.EventDefinition);             
      }
    }
    public IResourceRepository ExampleScenarioRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ExampleScenarioRes, ExampleScenarioIxStr, ExampleScenarioIxTok, ExampleScenarioIxUri, ExampleScenarioIxRef, ExampleScenarioIxQty, ExampleScenarioIxDT>(FHIRAllTypes.ExampleScenario);             
      }
    }
    public IResourceRepository ExplanationOfBenefitRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ExplanationOfBenefitRes, ExplanationOfBenefitIxStr, ExplanationOfBenefitIxTok, ExplanationOfBenefitIxUri, ExplanationOfBenefitIxRef, ExplanationOfBenefitIxQty, ExplanationOfBenefitIxDT>(FHIRAllTypes.ExplanationOfBenefit);             
      }
    }
    public IResourceRepository FamilyMemberHistoryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<FamilyMemberHistoryRes, FamilyMemberHistoryIxStr, FamilyMemberHistoryIxTok, FamilyMemberHistoryIxUri, FamilyMemberHistoryIxRef, FamilyMemberHistoryIxQty, FamilyMemberHistoryIxDT>(FHIRAllTypes.FamilyMemberHistory);             
      }
    }
    public IResourceRepository FlagRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<FlagRes, FlagIxStr, FlagIxTok, FlagIxUri, FlagIxRef, FlagIxQty, FlagIxDT>(FHIRAllTypes.Flag);             
      }
    }
    public IResourceRepository GoalRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GoalRes, GoalIxStr, GoalIxTok, GoalIxUri, GoalIxRef, GoalIxQty, GoalIxDT>(FHIRAllTypes.Goal);             
      }
    }
    public IResourceRepository GraphDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GraphDefinitionRes, GraphDefinitionIxStr, GraphDefinitionIxTok, GraphDefinitionIxUri, GraphDefinitionIxRef, GraphDefinitionIxQty, GraphDefinitionIxDT>(FHIRAllTypes.GraphDefinition);             
      }
    }
    public IResourceRepository GroupRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GroupRes, GroupIxStr, GroupIxTok, GroupIxUri, GroupIxRef, GroupIxQty, GroupIxDT>(FHIRAllTypes.Group);             
      }
    }
    public IResourceRepository GuidanceResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GuidanceResponseRes, GuidanceResponseIxStr, GuidanceResponseIxTok, GuidanceResponseIxUri, GuidanceResponseIxRef, GuidanceResponseIxQty, GuidanceResponseIxDT>(FHIRAllTypes.GuidanceResponse);             
      }
    }
    public IResourceRepository HealthcareServiceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<HealthcareServiceRes, HealthcareServiceIxStr, HealthcareServiceIxTok, HealthcareServiceIxUri, HealthcareServiceIxRef, HealthcareServiceIxQty, HealthcareServiceIxDT>(FHIRAllTypes.HealthcareService);             
      }
    }
    public IResourceRepository ImagingStudyRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImagingStudyRes, ImagingStudyIxStr, ImagingStudyIxTok, ImagingStudyIxUri, ImagingStudyIxRef, ImagingStudyIxQty, ImagingStudyIxDT>(FHIRAllTypes.ImagingStudy);             
      }
    }
    public IResourceRepository ImmunizationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImmunizationRes, ImmunizationIxStr, ImmunizationIxTok, ImmunizationIxUri, ImmunizationIxRef, ImmunizationIxQty, ImmunizationIxDT>(FHIRAllTypes.Immunization);             
      }
    }
    public IResourceRepository ImmunizationEvaluationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImmunizationEvaluationRes, ImmunizationEvaluationIxStr, ImmunizationEvaluationIxTok, ImmunizationEvaluationIxUri, ImmunizationEvaluationIxRef, ImmunizationEvaluationIxQty, ImmunizationEvaluationIxDT>(FHIRAllTypes.ImmunizationEvaluation);             
      }
    }
    public IResourceRepository ImmunizationRecommendationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImmunizationRecommendationRes, ImmunizationRecommendationIxStr, ImmunizationRecommendationIxTok, ImmunizationRecommendationIxUri, ImmunizationRecommendationIxRef, ImmunizationRecommendationIxQty, ImmunizationRecommendationIxDT>(FHIRAllTypes.ImmunizationRecommendation);             
      }
    }
    public IResourceRepository ImplementationGuideRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImplementationGuideRes, ImplementationGuideIxStr, ImplementationGuideIxTok, ImplementationGuideIxUri, ImplementationGuideIxRef, ImplementationGuideIxQty, ImplementationGuideIxDT>(FHIRAllTypes.ImplementationGuide);             
      }
    }
    public IResourceRepository InsurancePlanRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<InsurancePlanRes, InsurancePlanIxStr, InsurancePlanIxTok, InsurancePlanIxUri, InsurancePlanIxRef, InsurancePlanIxQty, InsurancePlanIxDT>(FHIRAllTypes.InsurancePlan);             
      }
    }
    public IResourceRepository InvoiceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<InvoiceRes, InvoiceIxStr, InvoiceIxTok, InvoiceIxUri, InvoiceIxRef, InvoiceIxQty, InvoiceIxDT>(FHIRAllTypes.Invoice);             
      }
    }
    public IResourceRepository ItemInstanceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ItemInstanceRes, ItemInstanceIxStr, ItemInstanceIxTok, ItemInstanceIxUri, ItemInstanceIxRef, ItemInstanceIxQty, ItemInstanceIxDT>(FHIRAllTypes.ItemInstance);             
      }
    }
    public IResourceRepository LibraryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<LibraryRes, LibraryIxStr, LibraryIxTok, LibraryIxUri, LibraryIxRef, LibraryIxQty, LibraryIxDT>(FHIRAllTypes.Library);             
      }
    }
    public IResourceRepository LinkageRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<LinkageRes, LinkageIxStr, LinkageIxTok, LinkageIxUri, LinkageIxRef, LinkageIxQty, LinkageIxDT>(FHIRAllTypes.Linkage);             
      }
    }
    public IResourceRepository ListRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ListRes, ListIxStr, ListIxTok, ListIxUri, ListIxRef, ListIxQty, ListIxDT>(FHIRAllTypes.List);             
      }
    }
    public IResourceRepository LocationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<LocationRes, LocationIxStr, LocationIxTok, LocationIxUri, LocationIxRef, LocationIxQty, LocationIxDT>(FHIRAllTypes.Location);             
      }
    }
    public IResourceRepository MeasureRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MeasureRes, MeasureIxStr, MeasureIxTok, MeasureIxUri, MeasureIxRef, MeasureIxQty, MeasureIxDT>(FHIRAllTypes.Measure);             
      }
    }
    public IResourceRepository MeasureReportRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MeasureReportRes, MeasureReportIxStr, MeasureReportIxTok, MeasureReportIxUri, MeasureReportIxRef, MeasureReportIxQty, MeasureReportIxDT>(FHIRAllTypes.MeasureReport);             
      }
    }
    public IResourceRepository MediaRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MediaRes, MediaIxStr, MediaIxTok, MediaIxUri, MediaIxRef, MediaIxQty, MediaIxDT>(FHIRAllTypes.Media);             
      }
    }
    public IResourceRepository MedicationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationRes, MedicationIxStr, MedicationIxTok, MedicationIxUri, MedicationIxRef, MedicationIxQty, MedicationIxDT>(FHIRAllTypes.Medication);             
      }
    }
    public IResourceRepository MedicationAdministrationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationAdministrationRes, MedicationAdministrationIxStr, MedicationAdministrationIxTok, MedicationAdministrationIxUri, MedicationAdministrationIxRef, MedicationAdministrationIxQty, MedicationAdministrationIxDT>(FHIRAllTypes.MedicationAdministration);             
      }
    }
    public IResourceRepository MedicationDispenseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationDispenseRes, MedicationDispenseIxStr, MedicationDispenseIxTok, MedicationDispenseIxUri, MedicationDispenseIxRef, MedicationDispenseIxQty, MedicationDispenseIxDT>(FHIRAllTypes.MedicationDispense);             
      }
    }
    public IResourceRepository MedicationKnowledgeRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationKnowledgeRes, MedicationKnowledgeIxStr, MedicationKnowledgeIxTok, MedicationKnowledgeIxUri, MedicationKnowledgeIxRef, MedicationKnowledgeIxQty, MedicationKnowledgeIxDT>(FHIRAllTypes.MedicationKnowledge);             
      }
    }
    public IResourceRepository MedicationRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationRequestRes, MedicationRequestIxStr, MedicationRequestIxTok, MedicationRequestIxUri, MedicationRequestIxRef, MedicationRequestIxQty, MedicationRequestIxDT>(FHIRAllTypes.MedicationRequest);             
      }
    }
    public IResourceRepository MedicationStatementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationStatementRes, MedicationStatementIxStr, MedicationStatementIxTok, MedicationStatementIxUri, MedicationStatementIxRef, MedicationStatementIxQty, MedicationStatementIxDT>(FHIRAllTypes.MedicationStatement);             
      }
    }
    public IResourceRepository MedicinalProductRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductRes, MedicinalProductIxStr, MedicinalProductIxTok, MedicinalProductIxUri, MedicinalProductIxRef, MedicinalProductIxQty, MedicinalProductIxDT>(FHIRAllTypes.MedicinalProduct);             
      }
    }
    public IResourceRepository MedicinalProductAuthorizationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductAuthorizationRes, MedicinalProductAuthorizationIxStr, MedicinalProductAuthorizationIxTok, MedicinalProductAuthorizationIxUri, MedicinalProductAuthorizationIxRef, MedicinalProductAuthorizationIxQty, MedicinalProductAuthorizationIxDT>(FHIRAllTypes.MedicinalProductAuthorization);             
      }
    }
    public IResourceRepository MedicinalProductClinicalsRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductClinicalsRes, MedicinalProductClinicalsIxStr, MedicinalProductClinicalsIxTok, MedicinalProductClinicalsIxUri, MedicinalProductClinicalsIxRef, MedicinalProductClinicalsIxQty, MedicinalProductClinicalsIxDT>(FHIRAllTypes.MedicinalProductClinicals);             
      }
    }
    public IResourceRepository MedicinalProductContraindicationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductContraindicationRes, MedicinalProductContraindicationIxStr, MedicinalProductContraindicationIxTok, MedicinalProductContraindicationIxUri, MedicinalProductContraindicationIxRef, MedicinalProductContraindicationIxQty, MedicinalProductContraindicationIxDT>(FHIRAllTypes.MedicinalProductContraindication);             
      }
    }
    public IResourceRepository MedicinalProductDeviceSpecRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductDeviceSpecRes, MedicinalProductDeviceSpecIxStr, MedicinalProductDeviceSpecIxTok, MedicinalProductDeviceSpecIxUri, MedicinalProductDeviceSpecIxRef, MedicinalProductDeviceSpecIxQty, MedicinalProductDeviceSpecIxDT>(FHIRAllTypes.MedicinalProductDeviceSpec);             
      }
    }
    public IResourceRepository MedicinalProductIndicationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductIndicationRes, MedicinalProductIndicationIxStr, MedicinalProductIndicationIxTok, MedicinalProductIndicationIxUri, MedicinalProductIndicationIxRef, MedicinalProductIndicationIxQty, MedicinalProductIndicationIxDT>(FHIRAllTypes.MedicinalProductIndication);             
      }
    }
    public IResourceRepository MedicinalProductIngredientRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductIngredientRes, MedicinalProductIngredientIxStr, MedicinalProductIngredientIxTok, MedicinalProductIngredientIxUri, MedicinalProductIngredientIxRef, MedicinalProductIngredientIxQty, MedicinalProductIngredientIxDT>(FHIRAllTypes.MedicinalProductIngredient);             
      }
    }
    public IResourceRepository MedicinalProductInteractionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductInteractionRes, MedicinalProductInteractionIxStr, MedicinalProductInteractionIxTok, MedicinalProductInteractionIxUri, MedicinalProductInteractionIxRef, MedicinalProductInteractionIxQty, MedicinalProductInteractionIxDT>(FHIRAllTypes.MedicinalProductInteraction);             
      }
    }
    public IResourceRepository MedicinalProductManufacturedRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductManufacturedRes, MedicinalProductManufacturedIxStr, MedicinalProductManufacturedIxTok, MedicinalProductManufacturedIxUri, MedicinalProductManufacturedIxRef, MedicinalProductManufacturedIxQty, MedicinalProductManufacturedIxDT>(FHIRAllTypes.MedicinalProductManufactured);             
      }
    }
    public IResourceRepository MedicinalProductPackagedRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductPackagedRes, MedicinalProductPackagedIxStr, MedicinalProductPackagedIxTok, MedicinalProductPackagedIxUri, MedicinalProductPackagedIxRef, MedicinalProductPackagedIxQty, MedicinalProductPackagedIxDT>(FHIRAllTypes.MedicinalProductPackaged);             
      }
    }
    public IResourceRepository MedicinalProductPharmaceuticalRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductPharmaceuticalRes, MedicinalProductPharmaceuticalIxStr, MedicinalProductPharmaceuticalIxTok, MedicinalProductPharmaceuticalIxUri, MedicinalProductPharmaceuticalIxRef, MedicinalProductPharmaceuticalIxQty, MedicinalProductPharmaceuticalIxDT>(FHIRAllTypes.MedicinalProductPharmaceutical);             
      }
    }
    public IResourceRepository MedicinalProductUndesirableEffectRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicinalProductUndesirableEffectRes, MedicinalProductUndesirableEffectIxStr, MedicinalProductUndesirableEffectIxTok, MedicinalProductUndesirableEffectIxUri, MedicinalProductUndesirableEffectIxRef, MedicinalProductUndesirableEffectIxQty, MedicinalProductUndesirableEffectIxDT>(FHIRAllTypes.MedicinalProductUndesirableEffect);             
      }
    }
    public IResourceRepository MessageDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MessageDefinitionRes, MessageDefinitionIxStr, MessageDefinitionIxTok, MessageDefinitionIxUri, MessageDefinitionIxRef, MessageDefinitionIxQty, MessageDefinitionIxDT>(FHIRAllTypes.MessageDefinition);             
      }
    }
    public IResourceRepository MessageHeaderRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MessageHeaderRes, MessageHeaderIxStr, MessageHeaderIxTok, MessageHeaderIxUri, MessageHeaderIxRef, MessageHeaderIxQty, MessageHeaderIxDT>(FHIRAllTypes.MessageHeader);             
      }
    }
    public IResourceRepository NamingSystemRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<NamingSystemRes, NamingSystemIxStr, NamingSystemIxTok, NamingSystemIxUri, NamingSystemIxRef, NamingSystemIxQty, NamingSystemIxDT>(FHIRAllTypes.NamingSystem);             
      }
    }
    public IResourceRepository NutritionOrderRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<NutritionOrderRes, NutritionOrderIxStr, NutritionOrderIxTok, NutritionOrderIxUri, NutritionOrderIxRef, NutritionOrderIxQty, NutritionOrderIxDT>(FHIRAllTypes.NutritionOrder);             
      }
    }
    public IResourceRepository ObservationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ObservationRes, ObservationIxStr, ObservationIxTok, ObservationIxUri, ObservationIxRef, ObservationIxQty, ObservationIxDT>(FHIRAllTypes.Observation);             
      }
    }
    public IResourceRepository ObservationDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ObservationDefinitionRes, ObservationDefinitionIxStr, ObservationDefinitionIxTok, ObservationDefinitionIxUri, ObservationDefinitionIxRef, ObservationDefinitionIxQty, ObservationDefinitionIxDT>(FHIRAllTypes.ObservationDefinition);             
      }
    }
    public IResourceRepository OperationDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<OperationDefinitionRes, OperationDefinitionIxStr, OperationDefinitionIxTok, OperationDefinitionIxUri, OperationDefinitionIxRef, OperationDefinitionIxQty, OperationDefinitionIxDT>(FHIRAllTypes.OperationDefinition);             
      }
    }
    public IResourceRepository OperationOutcomeRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<OperationOutcomeRes, OperationOutcomeIxStr, OperationOutcomeIxTok, OperationOutcomeIxUri, OperationOutcomeIxRef, OperationOutcomeIxQty, OperationOutcomeIxDT>(FHIRAllTypes.OperationOutcome);             
      }
    }
    public IResourceRepository OrganizationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<OrganizationRes, OrganizationIxStr, OrganizationIxTok, OrganizationIxUri, OrganizationIxRef, OrganizationIxQty, OrganizationIxDT>(FHIRAllTypes.Organization);             
      }
    }
    public IResourceRepository OrganizationAffiliationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<OrganizationAffiliationRes, OrganizationAffiliationIxStr, OrganizationAffiliationIxTok, OrganizationAffiliationIxUri, OrganizationAffiliationIxRef, OrganizationAffiliationIxQty, OrganizationAffiliationIxDT>(FHIRAllTypes.OrganizationAffiliation);             
      }
    }
    public IResourceRepository ParametersRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ParametersRes, ParametersIxStr, ParametersIxTok, ParametersIxUri, ParametersIxRef, ParametersIxQty, ParametersIxDT>(FHIRAllTypes.Parameters);             
      }
    }
    public IResourceRepository PatientRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PatientRes, PatientIxStr, PatientIxTok, PatientIxUri, PatientIxRef, PatientIxQty, PatientIxDT>(FHIRAllTypes.Patient);             
      }
    }
    public IResourceRepository PaymentNoticeRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PaymentNoticeRes, PaymentNoticeIxStr, PaymentNoticeIxTok, PaymentNoticeIxUri, PaymentNoticeIxRef, PaymentNoticeIxQty, PaymentNoticeIxDT>(FHIRAllTypes.PaymentNotice);             
      }
    }
    public IResourceRepository PaymentReconciliationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PaymentReconciliationRes, PaymentReconciliationIxStr, PaymentReconciliationIxTok, PaymentReconciliationIxUri, PaymentReconciliationIxRef, PaymentReconciliationIxQty, PaymentReconciliationIxDT>(FHIRAllTypes.PaymentReconciliation);             
      }
    }
    public IResourceRepository PersonRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PersonRes, PersonIxStr, PersonIxTok, PersonIxUri, PersonIxRef, PersonIxQty, PersonIxDT>(FHIRAllTypes.Person);             
      }
    }
    public IResourceRepository PlanDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PlanDefinitionRes, PlanDefinitionIxStr, PlanDefinitionIxTok, PlanDefinitionIxUri, PlanDefinitionIxRef, PlanDefinitionIxQty, PlanDefinitionIxDT>(FHIRAllTypes.PlanDefinition);             
      }
    }
    public IResourceRepository PractitionerRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PractitionerRes, PractitionerIxStr, PractitionerIxTok, PractitionerIxUri, PractitionerIxRef, PractitionerIxQty, PractitionerIxDT>(FHIRAllTypes.Practitioner);             
      }
    }
    public IResourceRepository PractitionerRoleRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PractitionerRoleRes, PractitionerRoleIxStr, PractitionerRoleIxTok, PractitionerRoleIxUri, PractitionerRoleIxRef, PractitionerRoleIxQty, PractitionerRoleIxDT>(FHIRAllTypes.PractitionerRole);             
      }
    }
    public IResourceRepository ProcedureRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcedureRes, ProcedureIxStr, ProcedureIxTok, ProcedureIxUri, ProcedureIxRef, ProcedureIxQty, ProcedureIxDT>(FHIRAllTypes.Procedure);             
      }
    }
    public IResourceRepository ProcessRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcessRequestRes, ProcessRequestIxStr, ProcessRequestIxTok, ProcessRequestIxUri, ProcessRequestIxRef, ProcessRequestIxQty, ProcessRequestIxDT>(FHIRAllTypes.ProcessRequest);             
      }
    }
    public IResourceRepository ProcessResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcessResponseRes, ProcessResponseIxStr, ProcessResponseIxTok, ProcessResponseIxUri, ProcessResponseIxRef, ProcessResponseIxQty, ProcessResponseIxDT>(FHIRAllTypes.ProcessResponse);             
      }
    }
    public IResourceRepository ProvenanceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProvenanceRes, ProvenanceIxStr, ProvenanceIxTok, ProvenanceIxUri, ProvenanceIxRef, ProvenanceIxQty, ProvenanceIxDT>(FHIRAllTypes.Provenance);             
      }
    }
    public IResourceRepository QuestionnaireRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<QuestionnaireRes, QuestionnaireIxStr, QuestionnaireIxTok, QuestionnaireIxUri, QuestionnaireIxRef, QuestionnaireIxQty, QuestionnaireIxDT>(FHIRAllTypes.Questionnaire);             
      }
    }
    public IResourceRepository QuestionnaireResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<QuestionnaireResponseRes, QuestionnaireResponseIxStr, QuestionnaireResponseIxTok, QuestionnaireResponseIxUri, QuestionnaireResponseIxRef, QuestionnaireResponseIxQty, QuestionnaireResponseIxDT>(FHIRAllTypes.QuestionnaireResponse);             
      }
    }
    public IResourceRepository RelatedPersonRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<RelatedPersonRes, RelatedPersonIxStr, RelatedPersonIxTok, RelatedPersonIxUri, RelatedPersonIxRef, RelatedPersonIxQty, RelatedPersonIxDT>(FHIRAllTypes.RelatedPerson);             
      }
    }
    public IResourceRepository RequestGroupRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<RequestGroupRes, RequestGroupIxStr, RequestGroupIxTok, RequestGroupIxUri, RequestGroupIxRef, RequestGroupIxQty, RequestGroupIxDT>(FHIRAllTypes.RequestGroup);             
      }
    }
    public IResourceRepository ResearchStudyRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ResearchStudyRes, ResearchStudyIxStr, ResearchStudyIxTok, ResearchStudyIxUri, ResearchStudyIxRef, ResearchStudyIxQty, ResearchStudyIxDT>(FHIRAllTypes.ResearchStudy);             
      }
    }
    public IResourceRepository ResearchSubjectRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ResearchSubjectRes, ResearchSubjectIxStr, ResearchSubjectIxTok, ResearchSubjectIxUri, ResearchSubjectIxRef, ResearchSubjectIxQty, ResearchSubjectIxDT>(FHIRAllTypes.ResearchSubject);             
      }
    }
    public IResourceRepository RiskAssessmentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<RiskAssessmentRes, RiskAssessmentIxStr, RiskAssessmentIxTok, RiskAssessmentIxUri, RiskAssessmentIxRef, RiskAssessmentIxQty, RiskAssessmentIxDT>(FHIRAllTypes.RiskAssessment);             
      }
    }
    public IResourceRepository ScheduleRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ScheduleRes, ScheduleIxStr, ScheduleIxTok, ScheduleIxUri, ScheduleIxRef, ScheduleIxQty, ScheduleIxDT>(FHIRAllTypes.Schedule);             
      }
    }
    public IResourceRepository SearchParameterRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SearchParameterRes, SearchParameterIxStr, SearchParameterIxTok, SearchParameterIxUri, SearchParameterIxRef, SearchParameterIxQty, SearchParameterIxDT>(FHIRAllTypes.SearchParameter);             
      }
    }
    public IResourceRepository SequenceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SequenceRes, SequenceIxStr, SequenceIxTok, SequenceIxUri, SequenceIxRef, SequenceIxQty, SequenceIxDT>(FHIRAllTypes.Sequence);             
      }
    }
    public IResourceRepository ServiceRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ServiceRequestRes, ServiceRequestIxStr, ServiceRequestIxTok, ServiceRequestIxUri, ServiceRequestIxRef, ServiceRequestIxQty, ServiceRequestIxDT>(FHIRAllTypes.ServiceRequest);             
      }
    }
    public IResourceRepository SlotRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SlotRes, SlotIxStr, SlotIxTok, SlotIxUri, SlotIxRef, SlotIxQty, SlotIxDT>(FHIRAllTypes.Slot);             
      }
    }
    public IResourceRepository SpecimenRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SpecimenRes, SpecimenIxStr, SpecimenIxTok, SpecimenIxUri, SpecimenIxRef, SpecimenIxQty, SpecimenIxDT>(FHIRAllTypes.Specimen);             
      }
    }
    public IResourceRepository SpecimenDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SpecimenDefinitionRes, SpecimenDefinitionIxStr, SpecimenDefinitionIxTok, SpecimenDefinitionIxUri, SpecimenDefinitionIxRef, SpecimenDefinitionIxQty, SpecimenDefinitionIxDT>(FHIRAllTypes.SpecimenDefinition);             
      }
    }
    public IResourceRepository StructureDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<StructureDefinitionRes, StructureDefinitionIxStr, StructureDefinitionIxTok, StructureDefinitionIxUri, StructureDefinitionIxRef, StructureDefinitionIxQty, StructureDefinitionIxDT>(FHIRAllTypes.StructureDefinition);             
      }
    }
    public IResourceRepository StructureMapRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<StructureMapRes, StructureMapIxStr, StructureMapIxTok, StructureMapIxUri, StructureMapIxRef, StructureMapIxQty, StructureMapIxDT>(FHIRAllTypes.StructureMap);             
      }
    }
    public IResourceRepository SubscriptionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SubscriptionRes, SubscriptionIxStr, SubscriptionIxTok, SubscriptionIxUri, SubscriptionIxRef, SubscriptionIxQty, SubscriptionIxDT>(FHIRAllTypes.Subscription);             
      }
    }
    public IResourceRepository SubstanceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SubstanceRes, SubstanceIxStr, SubstanceIxTok, SubstanceIxUri, SubstanceIxRef, SubstanceIxQty, SubstanceIxDT>(FHIRAllTypes.Substance);             
      }
    }
    public IResourceRepository SubstancePolymerRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SubstancePolymerRes, SubstancePolymerIxStr, SubstancePolymerIxTok, SubstancePolymerIxUri, SubstancePolymerIxRef, SubstancePolymerIxQty, SubstancePolymerIxDT>(FHIRAllTypes.SubstancePolymer);             
      }
    }
    public IResourceRepository SubstanceReferenceInformationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SubstanceReferenceInformationRes, SubstanceReferenceInformationIxStr, SubstanceReferenceInformationIxTok, SubstanceReferenceInformationIxUri, SubstanceReferenceInformationIxRef, SubstanceReferenceInformationIxQty, SubstanceReferenceInformationIxDT>(FHIRAllTypes.SubstanceReferenceInformation);             
      }
    }
    public IResourceRepository SubstanceSpecificationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SubstanceSpecificationRes, SubstanceSpecificationIxStr, SubstanceSpecificationIxTok, SubstanceSpecificationIxUri, SubstanceSpecificationIxRef, SubstanceSpecificationIxQty, SubstanceSpecificationIxDT>(FHIRAllTypes.SubstanceSpecification);             
      }
    }
    public IResourceRepository SupplyDeliveryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SupplyDeliveryRes, SupplyDeliveryIxStr, SupplyDeliveryIxTok, SupplyDeliveryIxUri, SupplyDeliveryIxRef, SupplyDeliveryIxQty, SupplyDeliveryIxDT>(FHIRAllTypes.SupplyDelivery);             
      }
    }
    public IResourceRepository SupplyRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SupplyRequestRes, SupplyRequestIxStr, SupplyRequestIxTok, SupplyRequestIxUri, SupplyRequestIxRef, SupplyRequestIxQty, SupplyRequestIxDT>(FHIRAllTypes.SupplyRequest);             
      }
    }
    public IResourceRepository TaskRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<TaskRes, TaskIxStr, TaskIxTok, TaskIxUri, TaskIxRef, TaskIxQty, TaskIxDT>(FHIRAllTypes.Task);             
      }
    }
    public IResourceRepository TerminologyCapabilitiesRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<TerminologyCapabilitiesRes, TerminologyCapabilitiesIxStr, TerminologyCapabilitiesIxTok, TerminologyCapabilitiesIxUri, TerminologyCapabilitiesIxRef, TerminologyCapabilitiesIxQty, TerminologyCapabilitiesIxDT>(FHIRAllTypes.TerminologyCapabilities);             
      }
    }
    public IResourceRepository TestReportRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<TestReportRes, TestReportIxStr, TestReportIxTok, TestReportIxUri, TestReportIxRef, TestReportIxQty, TestReportIxDT>(FHIRAllTypes.TestReport);             
      }
    }
    public IResourceRepository TestScriptRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<TestScriptRes, TestScriptIxStr, TestScriptIxTok, TestScriptIxUri, TestScriptIxRef, TestScriptIxQty, TestScriptIxDT>(FHIRAllTypes.TestScript);             
      }
    }
    public IResourceRepository UserSessionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<UserSessionRes, UserSessionIxStr, UserSessionIxTok, UserSessionIxUri, UserSessionIxRef, UserSessionIxQty, UserSessionIxDT>(FHIRAllTypes.UserSession);             
      }
    }
    public IResourceRepository ValueSetRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ValueSetRes, ValueSetIxStr, ValueSetIxTok, ValueSetIxUri, ValueSetIxRef, ValueSetIxQty, ValueSetIxDT>(FHIRAllTypes.ValueSet);             
      }
    }
    public IResourceRepository VerificationResultRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<VerificationResultRes, VerificationResultIxStr, VerificationResultIxTok, VerificationResultIxUri, VerificationResultIxRef, VerificationResultIxQty, VerificationResultIxDT>(FHIRAllTypes.VerificationResult);             
      }
    }
    public IResourceRepository VisionPrescriptionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<VisionPrescriptionRes, VisionPrescriptionIxStr, VisionPrescriptionIxTok, VisionPrescriptionIxUri, VisionPrescriptionIxRef, VisionPrescriptionIxQty, VisionPrescriptionIxDT>(FHIRAllTypes.VisionPrescription);             
      }
    }
	
  }
}
