using Hl7.Fhir.Model;
using Pyro.Common.Interfaces.Repositories;
using Pyro.DataLayer.DbModel.EntityGenerated;
using System;

//This file was code generated by Pyro.CodeGeneration.Template.MainTemplate.tt
//Generation TimeStamp: 14/02/2018 6:08:52 PM

namespace Pyro.DataLayer.DbModel.UnitOfWork
{  
  public partial class UnitOfWork : IUnitOfWork, IDisposable
  {    
    public IResourceRepository AccountRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AccountRes, AccountResIndexString, AccountResIndexToken, AccountResIndexUri, AccountResIndexReference, AccountResIndexQuantity, AccountResIndexDateTime>(FHIRAllTypes.Account);             
      }
    }
    public IResourceRepository ActivityDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ActivityDefinitionRes, ActivityDefinitionResIndexString, ActivityDefinitionResIndexToken, ActivityDefinitionResIndexUri, ActivityDefinitionResIndexReference, ActivityDefinitionResIndexQuantity, ActivityDefinitionResIndexDateTime>(FHIRAllTypes.ActivityDefinition);             
      }
    }
    public IResourceRepository AdverseEventRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AdverseEventRes, AdverseEventResIndexString, AdverseEventResIndexToken, AdverseEventResIndexUri, AdverseEventResIndexReference, AdverseEventResIndexQuantity, AdverseEventResIndexDateTime>(FHIRAllTypes.AdverseEvent);             
      }
    }
    public IResourceRepository AllergyIntoleranceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AllergyIntoleranceRes, AllergyIntoleranceResIndexString, AllergyIntoleranceResIndexToken, AllergyIntoleranceResIndexUri, AllergyIntoleranceResIndexReference, AllergyIntoleranceResIndexQuantity, AllergyIntoleranceResIndexDateTime>(FHIRAllTypes.AllergyIntolerance);             
      }
    }
    public IResourceRepository AppointmentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AppointmentRes, AppointmentResIndexString, AppointmentResIndexToken, AppointmentResIndexUri, AppointmentResIndexReference, AppointmentResIndexQuantity, AppointmentResIndexDateTime>(FHIRAllTypes.Appointment);             
      }
    }
    public IResourceRepository AppointmentResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AppointmentResponseRes, AppointmentResponseResIndexString, AppointmentResponseResIndexToken, AppointmentResponseResIndexUri, AppointmentResponseResIndexReference, AppointmentResponseResIndexQuantity, AppointmentResponseResIndexDateTime>(FHIRAllTypes.AppointmentResponse);             
      }
    }
    public IResourceRepository AuditEventRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AuditEventRes, AuditEventResIndexString, AuditEventResIndexToken, AuditEventResIndexUri, AuditEventResIndexReference, AuditEventResIndexQuantity, AuditEventResIndexDateTime>(FHIRAllTypes.AuditEvent);             
      }
    }
    public IResourceRepository BasicRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BasicRes, BasicResIndexString, BasicResIndexToken, BasicResIndexUri, BasicResIndexReference, BasicResIndexQuantity, BasicResIndexDateTime>(FHIRAllTypes.Basic);             
      }
    }
    public IResourceRepository BinaryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BinaryRes, BinaryResIndexString, BinaryResIndexToken, BinaryResIndexUri, BinaryResIndexReference, BinaryResIndexQuantity, BinaryResIndexDateTime>(FHIRAllTypes.Binary);             
      }
    }
    public IResourceRepository BodySiteRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BodySiteRes, BodySiteResIndexString, BodySiteResIndexToken, BodySiteResIndexUri, BodySiteResIndexReference, BodySiteResIndexQuantity, BodySiteResIndexDateTime>(FHIRAllTypes.BodySite);             
      }
    }
    public IResourceRepository BundleRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BundleRes, BundleResIndexString, BundleResIndexToken, BundleResIndexUri, BundleResIndexReference, BundleResIndexQuantity, BundleResIndexDateTime>(FHIRAllTypes.Bundle);             
      }
    }
    public IResourceRepository CapabilityStatementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CapabilityStatementRes, CapabilityStatementResIndexString, CapabilityStatementResIndexToken, CapabilityStatementResIndexUri, CapabilityStatementResIndexReference, CapabilityStatementResIndexQuantity, CapabilityStatementResIndexDateTime>(FHIRAllTypes.CapabilityStatement);             
      }
    }
    public IResourceRepository CarePlanRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CarePlanRes, CarePlanResIndexString, CarePlanResIndexToken, CarePlanResIndexUri, CarePlanResIndexReference, CarePlanResIndexQuantity, CarePlanResIndexDateTime>(FHIRAllTypes.CarePlan);             
      }
    }
    public IResourceRepository CareTeamRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CareTeamRes, CareTeamResIndexString, CareTeamResIndexToken, CareTeamResIndexUri, CareTeamResIndexReference, CareTeamResIndexQuantity, CareTeamResIndexDateTime>(FHIRAllTypes.CareTeam);             
      }
    }
    public IResourceRepository ChargeItemRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ChargeItemRes, ChargeItemResIndexString, ChargeItemResIndexToken, ChargeItemResIndexUri, ChargeItemResIndexReference, ChargeItemResIndexQuantity, ChargeItemResIndexDateTime>(FHIRAllTypes.ChargeItem);             
      }
    }
    public IResourceRepository ClaimRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ClaimRes, ClaimResIndexString, ClaimResIndexToken, ClaimResIndexUri, ClaimResIndexReference, ClaimResIndexQuantity, ClaimResIndexDateTime>(FHIRAllTypes.Claim);             
      }
    }
    public IResourceRepository ClaimResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ClaimResponseRes, ClaimResponseResIndexString, ClaimResponseResIndexToken, ClaimResponseResIndexUri, ClaimResponseResIndexReference, ClaimResponseResIndexQuantity, ClaimResponseResIndexDateTime>(FHIRAllTypes.ClaimResponse);             
      }
    }
    public IResourceRepository ClinicalImpressionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ClinicalImpressionRes, ClinicalImpressionResIndexString, ClinicalImpressionResIndexToken, ClinicalImpressionResIndexUri, ClinicalImpressionResIndexReference, ClinicalImpressionResIndexQuantity, ClinicalImpressionResIndexDateTime>(FHIRAllTypes.ClinicalImpression);             
      }
    }
    public IResourceRepository CodeSystemRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CodeSystemRes, CodeSystemResIndexString, CodeSystemResIndexToken, CodeSystemResIndexUri, CodeSystemResIndexReference, CodeSystemResIndexQuantity, CodeSystemResIndexDateTime>(FHIRAllTypes.CodeSystem);             
      }
    }
    public IResourceRepository CommunicationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CommunicationRes, CommunicationResIndexString, CommunicationResIndexToken, CommunicationResIndexUri, CommunicationResIndexReference, CommunicationResIndexQuantity, CommunicationResIndexDateTime>(FHIRAllTypes.Communication);             
      }
    }
    public IResourceRepository CommunicationRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CommunicationRequestRes, CommunicationRequestResIndexString, CommunicationRequestResIndexToken, CommunicationRequestResIndexUri, CommunicationRequestResIndexReference, CommunicationRequestResIndexQuantity, CommunicationRequestResIndexDateTime>(FHIRAllTypes.CommunicationRequest);             
      }
    }
    public IResourceRepository CompartmentDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CompartmentDefinitionRes, CompartmentDefinitionResIndexString, CompartmentDefinitionResIndexToken, CompartmentDefinitionResIndexUri, CompartmentDefinitionResIndexReference, CompartmentDefinitionResIndexQuantity, CompartmentDefinitionResIndexDateTime>(FHIRAllTypes.CompartmentDefinition);             
      }
    }
    public IResourceRepository CompositionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CompositionRes, CompositionResIndexString, CompositionResIndexToken, CompositionResIndexUri, CompositionResIndexReference, CompositionResIndexQuantity, CompositionResIndexDateTime>(FHIRAllTypes.Composition);             
      }
    }
    public IResourceRepository ConceptMapRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ConceptMapRes, ConceptMapResIndexString, ConceptMapResIndexToken, ConceptMapResIndexUri, ConceptMapResIndexReference, ConceptMapResIndexQuantity, ConceptMapResIndexDateTime>(FHIRAllTypes.ConceptMap);             
      }
    }
    public IResourceRepository ConditionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ConditionRes, ConditionResIndexString, ConditionResIndexToken, ConditionResIndexUri, ConditionResIndexReference, ConditionResIndexQuantity, ConditionResIndexDateTime>(FHIRAllTypes.Condition);             
      }
    }
    public IResourceRepository ConsentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ConsentRes, ConsentResIndexString, ConsentResIndexToken, ConsentResIndexUri, ConsentResIndexReference, ConsentResIndexQuantity, ConsentResIndexDateTime>(FHIRAllTypes.Consent);             
      }
    }
    public IResourceRepository ContractRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ContractRes, ContractResIndexString, ContractResIndexToken, ContractResIndexUri, ContractResIndexReference, ContractResIndexQuantity, ContractResIndexDateTime>(FHIRAllTypes.Contract);             
      }
    }
    public IResourceRepository CoverageRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CoverageRes, CoverageResIndexString, CoverageResIndexToken, CoverageResIndexUri, CoverageResIndexReference, CoverageResIndexQuantity, CoverageResIndexDateTime>(FHIRAllTypes.Coverage);             
      }
    }
    public IResourceRepository DataElementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DataElementRes, DataElementResIndexString, DataElementResIndexToken, DataElementResIndexUri, DataElementResIndexReference, DataElementResIndexQuantity, DataElementResIndexDateTime>(FHIRAllTypes.DataElement);             
      }
    }
    public IResourceRepository DetectedIssueRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DetectedIssueRes, DetectedIssueResIndexString, DetectedIssueResIndexToken, DetectedIssueResIndexUri, DetectedIssueResIndexReference, DetectedIssueResIndexQuantity, DetectedIssueResIndexDateTime>(FHIRAllTypes.DetectedIssue);             
      }
    }
    public IResourceRepository DeviceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceRes, DeviceResIndexString, DeviceResIndexToken, DeviceResIndexUri, DeviceResIndexReference, DeviceResIndexQuantity, DeviceResIndexDateTime>(FHIRAllTypes.Device);             
      }
    }
    public IResourceRepository DeviceComponentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceComponentRes, DeviceComponentResIndexString, DeviceComponentResIndexToken, DeviceComponentResIndexUri, DeviceComponentResIndexReference, DeviceComponentResIndexQuantity, DeviceComponentResIndexDateTime>(FHIRAllTypes.DeviceComponent);             
      }
    }
    public IResourceRepository DeviceMetricRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceMetricRes, DeviceMetricResIndexString, DeviceMetricResIndexToken, DeviceMetricResIndexUri, DeviceMetricResIndexReference, DeviceMetricResIndexQuantity, DeviceMetricResIndexDateTime>(FHIRAllTypes.DeviceMetric);             
      }
    }
    public IResourceRepository DeviceRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceRequestRes, DeviceRequestResIndexString, DeviceRequestResIndexToken, DeviceRequestResIndexUri, DeviceRequestResIndexReference, DeviceRequestResIndexQuantity, DeviceRequestResIndexDateTime>(FHIRAllTypes.DeviceRequest);             
      }
    }
    public IResourceRepository DeviceUseStatementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceUseStatementRes, DeviceUseStatementResIndexString, DeviceUseStatementResIndexToken, DeviceUseStatementResIndexUri, DeviceUseStatementResIndexReference, DeviceUseStatementResIndexQuantity, DeviceUseStatementResIndexDateTime>(FHIRAllTypes.DeviceUseStatement);             
      }
    }
    public IResourceRepository DiagnosticReportRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DiagnosticReportRes, DiagnosticReportResIndexString, DiagnosticReportResIndexToken, DiagnosticReportResIndexUri, DiagnosticReportResIndexReference, DiagnosticReportResIndexQuantity, DiagnosticReportResIndexDateTime>(FHIRAllTypes.DiagnosticReport);             
      }
    }
    public IResourceRepository DocumentManifestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DocumentManifestRes, DocumentManifestResIndexString, DocumentManifestResIndexToken, DocumentManifestResIndexUri, DocumentManifestResIndexReference, DocumentManifestResIndexQuantity, DocumentManifestResIndexDateTime>(FHIRAllTypes.DocumentManifest);             
      }
    }
    public IResourceRepository DocumentReferenceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DocumentReferenceRes, DocumentReferenceResIndexString, DocumentReferenceResIndexToken, DocumentReferenceResIndexUri, DocumentReferenceResIndexReference, DocumentReferenceResIndexQuantity, DocumentReferenceResIndexDateTime>(FHIRAllTypes.DocumentReference);             
      }
    }
    public IResourceRepository EligibilityRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EligibilityRequestRes, EligibilityRequestResIndexString, EligibilityRequestResIndexToken, EligibilityRequestResIndexUri, EligibilityRequestResIndexReference, EligibilityRequestResIndexQuantity, EligibilityRequestResIndexDateTime>(FHIRAllTypes.EligibilityRequest);             
      }
    }
    public IResourceRepository EligibilityResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EligibilityResponseRes, EligibilityResponseResIndexString, EligibilityResponseResIndexToken, EligibilityResponseResIndexUri, EligibilityResponseResIndexReference, EligibilityResponseResIndexQuantity, EligibilityResponseResIndexDateTime>(FHIRAllTypes.EligibilityResponse);             
      }
    }
    public IResourceRepository EncounterRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EncounterRes, EncounterResIndexString, EncounterResIndexToken, EncounterResIndexUri, EncounterResIndexReference, EncounterResIndexQuantity, EncounterResIndexDateTime>(FHIRAllTypes.Encounter);             
      }
    }
    public IResourceRepository EndpointRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EndpointRes, EndpointResIndexString, EndpointResIndexToken, EndpointResIndexUri, EndpointResIndexReference, EndpointResIndexQuantity, EndpointResIndexDateTime>(FHIRAllTypes.Endpoint);             
      }
    }
    public IResourceRepository EnrollmentRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EnrollmentRequestRes, EnrollmentRequestResIndexString, EnrollmentRequestResIndexToken, EnrollmentRequestResIndexUri, EnrollmentRequestResIndexReference, EnrollmentRequestResIndexQuantity, EnrollmentRequestResIndexDateTime>(FHIRAllTypes.EnrollmentRequest);             
      }
    }
    public IResourceRepository EnrollmentResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EnrollmentResponseRes, EnrollmentResponseResIndexString, EnrollmentResponseResIndexToken, EnrollmentResponseResIndexUri, EnrollmentResponseResIndexReference, EnrollmentResponseResIndexQuantity, EnrollmentResponseResIndexDateTime>(FHIRAllTypes.EnrollmentResponse);             
      }
    }
    public IResourceRepository EpisodeOfCareRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EpisodeOfCareRes, EpisodeOfCareResIndexString, EpisodeOfCareResIndexToken, EpisodeOfCareResIndexUri, EpisodeOfCareResIndexReference, EpisodeOfCareResIndexQuantity, EpisodeOfCareResIndexDateTime>(FHIRAllTypes.EpisodeOfCare);             
      }
    }
    public IResourceRepository ExpansionProfileRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ExpansionProfileRes, ExpansionProfileResIndexString, ExpansionProfileResIndexToken, ExpansionProfileResIndexUri, ExpansionProfileResIndexReference, ExpansionProfileResIndexQuantity, ExpansionProfileResIndexDateTime>(FHIRAllTypes.ExpansionProfile);             
      }
    }
    public IResourceRepository ExplanationOfBenefitRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ExplanationOfBenefitRes, ExplanationOfBenefitResIndexString, ExplanationOfBenefitResIndexToken, ExplanationOfBenefitResIndexUri, ExplanationOfBenefitResIndexReference, ExplanationOfBenefitResIndexQuantity, ExplanationOfBenefitResIndexDateTime>(FHIRAllTypes.ExplanationOfBenefit);             
      }
    }
    public IResourceRepository FamilyMemberHistoryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<FamilyMemberHistoryRes, FamilyMemberHistoryResIndexString, FamilyMemberHistoryResIndexToken, FamilyMemberHistoryResIndexUri, FamilyMemberHistoryResIndexReference, FamilyMemberHistoryResIndexQuantity, FamilyMemberHistoryResIndexDateTime>(FHIRAllTypes.FamilyMemberHistory);             
      }
    }
    public IResourceRepository FlagRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<FlagRes, FlagResIndexString, FlagResIndexToken, FlagResIndexUri, FlagResIndexReference, FlagResIndexQuantity, FlagResIndexDateTime>(FHIRAllTypes.Flag);             
      }
    }
    public IResourceRepository GoalRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GoalRes, GoalResIndexString, GoalResIndexToken, GoalResIndexUri, GoalResIndexReference, GoalResIndexQuantity, GoalResIndexDateTime>(FHIRAllTypes.Goal);             
      }
    }
    public IResourceRepository GraphDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GraphDefinitionRes, GraphDefinitionResIndexString, GraphDefinitionResIndexToken, GraphDefinitionResIndexUri, GraphDefinitionResIndexReference, GraphDefinitionResIndexQuantity, GraphDefinitionResIndexDateTime>(FHIRAllTypes.GraphDefinition);             
      }
    }
    public IResourceRepository GroupRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GroupRes, GroupResIndexString, GroupResIndexToken, GroupResIndexUri, GroupResIndexReference, GroupResIndexQuantity, GroupResIndexDateTime>(FHIRAllTypes.Group);             
      }
    }
    public IResourceRepository GuidanceResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GuidanceResponseRes, GuidanceResponseResIndexString, GuidanceResponseResIndexToken, GuidanceResponseResIndexUri, GuidanceResponseResIndexReference, GuidanceResponseResIndexQuantity, GuidanceResponseResIndexDateTime>(FHIRAllTypes.GuidanceResponse);             
      }
    }
    public IResourceRepository HealthcareServiceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<HealthcareServiceRes, HealthcareServiceResIndexString, HealthcareServiceResIndexToken, HealthcareServiceResIndexUri, HealthcareServiceResIndexReference, HealthcareServiceResIndexQuantity, HealthcareServiceResIndexDateTime>(FHIRAllTypes.HealthcareService);             
      }
    }
    public IResourceRepository ImagingManifestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImagingManifestRes, ImagingManifestResIndexString, ImagingManifestResIndexToken, ImagingManifestResIndexUri, ImagingManifestResIndexReference, ImagingManifestResIndexQuantity, ImagingManifestResIndexDateTime>(FHIRAllTypes.ImagingManifest);             
      }
    }
    public IResourceRepository ImagingStudyRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImagingStudyRes, ImagingStudyResIndexString, ImagingStudyResIndexToken, ImagingStudyResIndexUri, ImagingStudyResIndexReference, ImagingStudyResIndexQuantity, ImagingStudyResIndexDateTime>(FHIRAllTypes.ImagingStudy);             
      }
    }
    public IResourceRepository ImmunizationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImmunizationRes, ImmunizationResIndexString, ImmunizationResIndexToken, ImmunizationResIndexUri, ImmunizationResIndexReference, ImmunizationResIndexQuantity, ImmunizationResIndexDateTime>(FHIRAllTypes.Immunization);             
      }
    }
    public IResourceRepository ImmunizationRecommendationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImmunizationRecommendationRes, ImmunizationRecommendationResIndexString, ImmunizationRecommendationResIndexToken, ImmunizationRecommendationResIndexUri, ImmunizationRecommendationResIndexReference, ImmunizationRecommendationResIndexQuantity, ImmunizationRecommendationResIndexDateTime>(FHIRAllTypes.ImmunizationRecommendation);             
      }
    }
    public IResourceRepository ImplementationGuideRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImplementationGuideRes, ImplementationGuideResIndexString, ImplementationGuideResIndexToken, ImplementationGuideResIndexUri, ImplementationGuideResIndexReference, ImplementationGuideResIndexQuantity, ImplementationGuideResIndexDateTime>(FHIRAllTypes.ImplementationGuide);             
      }
    }
    public IResourceRepository LibraryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<LibraryRes, LibraryResIndexString, LibraryResIndexToken, LibraryResIndexUri, LibraryResIndexReference, LibraryResIndexQuantity, LibraryResIndexDateTime>(FHIRAllTypes.Library);             
      }
    }
    public IResourceRepository LinkageRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<LinkageRes, LinkageResIndexString, LinkageResIndexToken, LinkageResIndexUri, LinkageResIndexReference, LinkageResIndexQuantity, LinkageResIndexDateTime>(FHIRAllTypes.Linkage);             
      }
    }
    public IResourceRepository ListRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ListRes, ListResIndexString, ListResIndexToken, ListResIndexUri, ListResIndexReference, ListResIndexQuantity, ListResIndexDateTime>(FHIRAllTypes.List);             
      }
    }
    public IResourceRepository LocationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<LocationRes, LocationResIndexString, LocationResIndexToken, LocationResIndexUri, LocationResIndexReference, LocationResIndexQuantity, LocationResIndexDateTime>(FHIRAllTypes.Location);             
      }
    }
    public IResourceRepository MeasureRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MeasureRes, MeasureResIndexString, MeasureResIndexToken, MeasureResIndexUri, MeasureResIndexReference, MeasureResIndexQuantity, MeasureResIndexDateTime>(FHIRAllTypes.Measure);             
      }
    }
    public IResourceRepository MeasureReportRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MeasureReportRes, MeasureReportResIndexString, MeasureReportResIndexToken, MeasureReportResIndexUri, MeasureReportResIndexReference, MeasureReportResIndexQuantity, MeasureReportResIndexDateTime>(FHIRAllTypes.MeasureReport);             
      }
    }
    public IResourceRepository MediaRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MediaRes, MediaResIndexString, MediaResIndexToken, MediaResIndexUri, MediaResIndexReference, MediaResIndexQuantity, MediaResIndexDateTime>(FHIRAllTypes.Media);             
      }
    }
    public IResourceRepository MedicationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationRes, MedicationResIndexString, MedicationResIndexToken, MedicationResIndexUri, MedicationResIndexReference, MedicationResIndexQuantity, MedicationResIndexDateTime>(FHIRAllTypes.Medication);             
      }
    }
    public IResourceRepository MedicationAdministrationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationAdministrationRes, MedicationAdministrationResIndexString, MedicationAdministrationResIndexToken, MedicationAdministrationResIndexUri, MedicationAdministrationResIndexReference, MedicationAdministrationResIndexQuantity, MedicationAdministrationResIndexDateTime>(FHIRAllTypes.MedicationAdministration);             
      }
    }
    public IResourceRepository MedicationDispenseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationDispenseRes, MedicationDispenseResIndexString, MedicationDispenseResIndexToken, MedicationDispenseResIndexUri, MedicationDispenseResIndexReference, MedicationDispenseResIndexQuantity, MedicationDispenseResIndexDateTime>(FHIRAllTypes.MedicationDispense);             
      }
    }
    public IResourceRepository MedicationRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationRequestRes, MedicationRequestResIndexString, MedicationRequestResIndexToken, MedicationRequestResIndexUri, MedicationRequestResIndexReference, MedicationRequestResIndexQuantity, MedicationRequestResIndexDateTime>(FHIRAllTypes.MedicationRequest);             
      }
    }
    public IResourceRepository MedicationStatementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationStatementRes, MedicationStatementResIndexString, MedicationStatementResIndexToken, MedicationStatementResIndexUri, MedicationStatementResIndexReference, MedicationStatementResIndexQuantity, MedicationStatementResIndexDateTime>(FHIRAllTypes.MedicationStatement);             
      }
    }
    public IResourceRepository MessageDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MessageDefinitionRes, MessageDefinitionResIndexString, MessageDefinitionResIndexToken, MessageDefinitionResIndexUri, MessageDefinitionResIndexReference, MessageDefinitionResIndexQuantity, MessageDefinitionResIndexDateTime>(FHIRAllTypes.MessageDefinition);             
      }
    }
    public IResourceRepository MessageHeaderRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MessageHeaderRes, MessageHeaderResIndexString, MessageHeaderResIndexToken, MessageHeaderResIndexUri, MessageHeaderResIndexReference, MessageHeaderResIndexQuantity, MessageHeaderResIndexDateTime>(FHIRAllTypes.MessageHeader);             
      }
    }
    public IResourceRepository NamingSystemRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<NamingSystemRes, NamingSystemResIndexString, NamingSystemResIndexToken, NamingSystemResIndexUri, NamingSystemResIndexReference, NamingSystemResIndexQuantity, NamingSystemResIndexDateTime>(FHIRAllTypes.NamingSystem);             
      }
    }
    public IResourceRepository NutritionOrderRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<NutritionOrderRes, NutritionOrderResIndexString, NutritionOrderResIndexToken, NutritionOrderResIndexUri, NutritionOrderResIndexReference, NutritionOrderResIndexQuantity, NutritionOrderResIndexDateTime>(FHIRAllTypes.NutritionOrder);             
      }
    }
    public IResourceRepository ObservationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ObservationRes, ObservationResIndexString, ObservationResIndexToken, ObservationResIndexUri, ObservationResIndexReference, ObservationResIndexQuantity, ObservationResIndexDateTime>(FHIRAllTypes.Observation);             
      }
    }
    public IResourceRepository OperationDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<OperationDefinitionRes, OperationDefinitionResIndexString, OperationDefinitionResIndexToken, OperationDefinitionResIndexUri, OperationDefinitionResIndexReference, OperationDefinitionResIndexQuantity, OperationDefinitionResIndexDateTime>(FHIRAllTypes.OperationDefinition);             
      }
    }
    public IResourceRepository OperationOutcomeRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<OperationOutcomeRes, OperationOutcomeResIndexString, OperationOutcomeResIndexToken, OperationOutcomeResIndexUri, OperationOutcomeResIndexReference, OperationOutcomeResIndexQuantity, OperationOutcomeResIndexDateTime>(FHIRAllTypes.OperationOutcome);             
      }
    }
    public IResourceRepository OrganizationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<OrganizationRes, OrganizationResIndexString, OrganizationResIndexToken, OrganizationResIndexUri, OrganizationResIndexReference, OrganizationResIndexQuantity, OrganizationResIndexDateTime>(FHIRAllTypes.Organization);             
      }
    }
    public IResourceRepository ParametersRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ParametersRes, ParametersResIndexString, ParametersResIndexToken, ParametersResIndexUri, ParametersResIndexReference, ParametersResIndexQuantity, ParametersResIndexDateTime>(FHIRAllTypes.Parameters);             
      }
    }
    public IResourceRepository PatientRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PatientRes, PatientResIndexString, PatientResIndexToken, PatientResIndexUri, PatientResIndexReference, PatientResIndexQuantity, PatientResIndexDateTime>(FHIRAllTypes.Patient);             
      }
    }
    public IResourceRepository PaymentNoticeRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PaymentNoticeRes, PaymentNoticeResIndexString, PaymentNoticeResIndexToken, PaymentNoticeResIndexUri, PaymentNoticeResIndexReference, PaymentNoticeResIndexQuantity, PaymentNoticeResIndexDateTime>(FHIRAllTypes.PaymentNotice);             
      }
    }
    public IResourceRepository PaymentReconciliationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PaymentReconciliationRes, PaymentReconciliationResIndexString, PaymentReconciliationResIndexToken, PaymentReconciliationResIndexUri, PaymentReconciliationResIndexReference, PaymentReconciliationResIndexQuantity, PaymentReconciliationResIndexDateTime>(FHIRAllTypes.PaymentReconciliation);             
      }
    }
    public IResourceRepository PersonRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PersonRes, PersonResIndexString, PersonResIndexToken, PersonResIndexUri, PersonResIndexReference, PersonResIndexQuantity, PersonResIndexDateTime>(FHIRAllTypes.Person);             
      }
    }
    public IResourceRepository PlanDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PlanDefinitionRes, PlanDefinitionResIndexString, PlanDefinitionResIndexToken, PlanDefinitionResIndexUri, PlanDefinitionResIndexReference, PlanDefinitionResIndexQuantity, PlanDefinitionResIndexDateTime>(FHIRAllTypes.PlanDefinition);             
      }
    }
    public IResourceRepository PractitionerRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PractitionerRes, PractitionerResIndexString, PractitionerResIndexToken, PractitionerResIndexUri, PractitionerResIndexReference, PractitionerResIndexQuantity, PractitionerResIndexDateTime>(FHIRAllTypes.Practitioner);             
      }
    }
    public IResourceRepository PractitionerRoleRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PractitionerRoleRes, PractitionerRoleResIndexString, PractitionerRoleResIndexToken, PractitionerRoleResIndexUri, PractitionerRoleResIndexReference, PractitionerRoleResIndexQuantity, PractitionerRoleResIndexDateTime>(FHIRAllTypes.PractitionerRole);             
      }
    }
    public IResourceRepository ProcedureRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcedureRes, ProcedureResIndexString, ProcedureResIndexToken, ProcedureResIndexUri, ProcedureResIndexReference, ProcedureResIndexQuantity, ProcedureResIndexDateTime>(FHIRAllTypes.Procedure);             
      }
    }
    public IResourceRepository ProcedureRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcedureRequestRes, ProcedureRequestResIndexString, ProcedureRequestResIndexToken, ProcedureRequestResIndexUri, ProcedureRequestResIndexReference, ProcedureRequestResIndexQuantity, ProcedureRequestResIndexDateTime>(FHIRAllTypes.ProcedureRequest);             
      }
    }
    public IResourceRepository ProcessRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcessRequestRes, ProcessRequestResIndexString, ProcessRequestResIndexToken, ProcessRequestResIndexUri, ProcessRequestResIndexReference, ProcessRequestResIndexQuantity, ProcessRequestResIndexDateTime>(FHIRAllTypes.ProcessRequest);             
      }
    }
    public IResourceRepository ProcessResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcessResponseRes, ProcessResponseResIndexString, ProcessResponseResIndexToken, ProcessResponseResIndexUri, ProcessResponseResIndexReference, ProcessResponseResIndexQuantity, ProcessResponseResIndexDateTime>(FHIRAllTypes.ProcessResponse);             
      }
    }
    public IResourceRepository ProvenanceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProvenanceRes, ProvenanceResIndexString, ProvenanceResIndexToken, ProvenanceResIndexUri, ProvenanceResIndexReference, ProvenanceResIndexQuantity, ProvenanceResIndexDateTime>(FHIRAllTypes.Provenance);             
      }
    }
    public IResourceRepository QuestionnaireRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<QuestionnaireRes, QuestionnaireResIndexString, QuestionnaireResIndexToken, QuestionnaireResIndexUri, QuestionnaireResIndexReference, QuestionnaireResIndexQuantity, QuestionnaireResIndexDateTime>(FHIRAllTypes.Questionnaire);             
      }
    }
    public IResourceRepository QuestionnaireResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<QuestionnaireResponseRes, QuestionnaireResponseResIndexString, QuestionnaireResponseResIndexToken, QuestionnaireResponseResIndexUri, QuestionnaireResponseResIndexReference, QuestionnaireResponseResIndexQuantity, QuestionnaireResponseResIndexDateTime>(FHIRAllTypes.QuestionnaireResponse);             
      }
    }
    public IResourceRepository ReferralRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ReferralRequestRes, ReferralRequestResIndexString, ReferralRequestResIndexToken, ReferralRequestResIndexUri, ReferralRequestResIndexReference, ReferralRequestResIndexQuantity, ReferralRequestResIndexDateTime>(FHIRAllTypes.ReferralRequest);             
      }
    }
    public IResourceRepository RelatedPersonRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<RelatedPersonRes, RelatedPersonResIndexString, RelatedPersonResIndexToken, RelatedPersonResIndexUri, RelatedPersonResIndexReference, RelatedPersonResIndexQuantity, RelatedPersonResIndexDateTime>(FHIRAllTypes.RelatedPerson);             
      }
    }
    public IResourceRepository RequestGroupRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<RequestGroupRes, RequestGroupResIndexString, RequestGroupResIndexToken, RequestGroupResIndexUri, RequestGroupResIndexReference, RequestGroupResIndexQuantity, RequestGroupResIndexDateTime>(FHIRAllTypes.RequestGroup);             
      }
    }
    public IResourceRepository ResearchStudyRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ResearchStudyRes, ResearchStudyResIndexString, ResearchStudyResIndexToken, ResearchStudyResIndexUri, ResearchStudyResIndexReference, ResearchStudyResIndexQuantity, ResearchStudyResIndexDateTime>(FHIRAllTypes.ResearchStudy);             
      }
    }
    public IResourceRepository ResearchSubjectRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ResearchSubjectRes, ResearchSubjectResIndexString, ResearchSubjectResIndexToken, ResearchSubjectResIndexUri, ResearchSubjectResIndexReference, ResearchSubjectResIndexQuantity, ResearchSubjectResIndexDateTime>(FHIRAllTypes.ResearchSubject);             
      }
    }
    public IResourceRepository RiskAssessmentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<RiskAssessmentRes, RiskAssessmentResIndexString, RiskAssessmentResIndexToken, RiskAssessmentResIndexUri, RiskAssessmentResIndexReference, RiskAssessmentResIndexQuantity, RiskAssessmentResIndexDateTime>(FHIRAllTypes.RiskAssessment);             
      }
    }
    public IResourceRepository ScheduleRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ScheduleRes, ScheduleResIndexString, ScheduleResIndexToken, ScheduleResIndexUri, ScheduleResIndexReference, ScheduleResIndexQuantity, ScheduleResIndexDateTime>(FHIRAllTypes.Schedule);             
      }
    }
    public IResourceRepository SearchParameterRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SearchParameterRes, SearchParameterResIndexString, SearchParameterResIndexToken, SearchParameterResIndexUri, SearchParameterResIndexReference, SearchParameterResIndexQuantity, SearchParameterResIndexDateTime>(FHIRAllTypes.SearchParameter);             
      }
    }
    public IResourceRepository SequenceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SequenceRes, SequenceResIndexString, SequenceResIndexToken, SequenceResIndexUri, SequenceResIndexReference, SequenceResIndexQuantity, SequenceResIndexDateTime>(FHIRAllTypes.Sequence);             
      }
    }
    public IResourceRepository ServiceDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ServiceDefinitionRes, ServiceDefinitionResIndexString, ServiceDefinitionResIndexToken, ServiceDefinitionResIndexUri, ServiceDefinitionResIndexReference, ServiceDefinitionResIndexQuantity, ServiceDefinitionResIndexDateTime>(FHIRAllTypes.ServiceDefinition);             
      }
    }
    public IResourceRepository SlotRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SlotRes, SlotResIndexString, SlotResIndexToken, SlotResIndexUri, SlotResIndexReference, SlotResIndexQuantity, SlotResIndexDateTime>(FHIRAllTypes.Slot);             
      }
    }
    public IResourceRepository SpecimenRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SpecimenRes, SpecimenResIndexString, SpecimenResIndexToken, SpecimenResIndexUri, SpecimenResIndexReference, SpecimenResIndexQuantity, SpecimenResIndexDateTime>(FHIRAllTypes.Specimen);             
      }
    }
    public IResourceRepository StructureDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<StructureDefinitionRes, StructureDefinitionResIndexString, StructureDefinitionResIndexToken, StructureDefinitionResIndexUri, StructureDefinitionResIndexReference, StructureDefinitionResIndexQuantity, StructureDefinitionResIndexDateTime>(FHIRAllTypes.StructureDefinition);             
      }
    }
    public IResourceRepository StructureMapRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<StructureMapRes, StructureMapResIndexString, StructureMapResIndexToken, StructureMapResIndexUri, StructureMapResIndexReference, StructureMapResIndexQuantity, StructureMapResIndexDateTime>(FHIRAllTypes.StructureMap);             
      }
    }
    public IResourceRepository SubscriptionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SubscriptionRes, SubscriptionResIndexString, SubscriptionResIndexToken, SubscriptionResIndexUri, SubscriptionResIndexReference, SubscriptionResIndexQuantity, SubscriptionResIndexDateTime>(FHIRAllTypes.Subscription);             
      }
    }
    public IResourceRepository SubstanceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SubstanceRes, SubstanceResIndexString, SubstanceResIndexToken, SubstanceResIndexUri, SubstanceResIndexReference, SubstanceResIndexQuantity, SubstanceResIndexDateTime>(FHIRAllTypes.Substance);             
      }
    }
    public IResourceRepository SupplyDeliveryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SupplyDeliveryRes, SupplyDeliveryResIndexString, SupplyDeliveryResIndexToken, SupplyDeliveryResIndexUri, SupplyDeliveryResIndexReference, SupplyDeliveryResIndexQuantity, SupplyDeliveryResIndexDateTime>(FHIRAllTypes.SupplyDelivery);             
      }
    }
    public IResourceRepository SupplyRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SupplyRequestRes, SupplyRequestResIndexString, SupplyRequestResIndexToken, SupplyRequestResIndexUri, SupplyRequestResIndexReference, SupplyRequestResIndexQuantity, SupplyRequestResIndexDateTime>(FHIRAllTypes.SupplyRequest);             
      }
    }
    public IResourceRepository TaskRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<TaskRes, TaskResIndexString, TaskResIndexToken, TaskResIndexUri, TaskResIndexReference, TaskResIndexQuantity, TaskResIndexDateTime>(FHIRAllTypes.Task);             
      }
    }
    public IResourceRepository TestReportRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<TestReportRes, TestReportResIndexString, TestReportResIndexToken, TestReportResIndexUri, TestReportResIndexReference, TestReportResIndexQuantity, TestReportResIndexDateTime>(FHIRAllTypes.TestReport);             
      }
    }
    public IResourceRepository TestScriptRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<TestScriptRes, TestScriptResIndexString, TestScriptResIndexToken, TestScriptResIndexUri, TestScriptResIndexReference, TestScriptResIndexQuantity, TestScriptResIndexDateTime>(FHIRAllTypes.TestScript);             
      }
    }
    public IResourceRepository ValueSetRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ValueSetRes, ValueSetResIndexString, ValueSetResIndexToken, ValueSetResIndexUri, ValueSetResIndexReference, ValueSetResIndexQuantity, ValueSetResIndexDateTime>(FHIRAllTypes.ValueSet);             
      }
    }
    public IResourceRepository VisionPrescriptionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<VisionPrescriptionRes, VisionPrescriptionResIndexString, VisionPrescriptionResIndexToken, VisionPrescriptionResIndexUri, VisionPrescriptionResIndexReference, VisionPrescriptionResIndexQuantity, VisionPrescriptionResIndexDateTime>(FHIRAllTypes.VisionPrescription);             
      }
    }
	
  }
}
