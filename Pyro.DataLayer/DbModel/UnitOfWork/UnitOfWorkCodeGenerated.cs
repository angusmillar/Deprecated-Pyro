using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;
using Pyro.Common.Interfaces.Repositories;
using Pyro.DataLayer.Repository;
using Pyro.DataLayer.DbModel.EntityGenerated;
using Hl7.Fhir.Model;

//This file was code generated by Pyro.CodeGeneration.Template.MainTemplate.tt
//Generation TimeStamp: 16/08/2017 1:43:28 PM

namespace Pyro.DataLayer.DbModel.UnitOfWork
{  
  public partial class UnitOfWork : IUnitOfWork, IDisposable
  {    
    public IResourceRepository AccountRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AccountRes, AccountResIndex>(FHIRAllTypes.Account);     
      }
    }
    public IResourceRepository ActivityDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ActivityDefinitionRes, ActivityDefinitionResIndex>(FHIRAllTypes.ActivityDefinition);     
      }
    }
    public IResourceRepository AdverseEventRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AdverseEventRes, AdverseEventResIndex>(FHIRAllTypes.AdverseEvent);     
      }
    }
    public IResourceRepository AllergyIntoleranceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AllergyIntoleranceRes, AllergyIntoleranceResIndex>(FHIRAllTypes.AllergyIntolerance);     
      }
    }
    public IResourceRepository AppointmentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AppointmentRes, AppointmentResIndex>(FHIRAllTypes.Appointment);     
      }
    }
    public IResourceRepository AppointmentResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AppointmentResponseRes, AppointmentResponseResIndex>(FHIRAllTypes.AppointmentResponse);     
      }
    }
    public IResourceRepository AuditEventRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<AuditEventRes, AuditEventResIndex>(FHIRAllTypes.AuditEvent);     
      }
    }
    public IResourceRepository BasicRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BasicRes, BasicResIndex>(FHIRAllTypes.Basic);     
      }
    }
    public IResourceRepository BinaryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BinaryRes, BinaryResIndex>(FHIRAllTypes.Binary);     
      }
    }
    public IResourceRepository BodySiteRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BodySiteRes, BodySiteResIndex>(FHIRAllTypes.BodySite);     
      }
    }
    public IResourceRepository BundleRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<BundleRes, BundleResIndex>(FHIRAllTypes.Bundle);     
      }
    }
    public IResourceRepository CapabilityStatementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CapabilityStatementRes, CapabilityStatementResIndex>(FHIRAllTypes.CapabilityStatement);     
      }
    }
    public IResourceRepository CarePlanRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CarePlanRes, CarePlanResIndex>(FHIRAllTypes.CarePlan);     
      }
    }
    public IResourceRepository CareTeamRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CareTeamRes, CareTeamResIndex>(FHIRAllTypes.CareTeam);     
      }
    }
    public IResourceRepository ChargeItemRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ChargeItemRes, ChargeItemResIndex>(FHIRAllTypes.ChargeItem);     
      }
    }
    public IResourceRepository ClaimRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ClaimRes, ClaimResIndex>(FHIRAllTypes.Claim);     
      }
    }
    public IResourceRepository ClaimResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ClaimResponseRes, ClaimResponseResIndex>(FHIRAllTypes.ClaimResponse);     
      }
    }
    public IResourceRepository ClinicalImpressionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ClinicalImpressionRes, ClinicalImpressionResIndex>(FHIRAllTypes.ClinicalImpression);     
      }
    }
    public IResourceRepository CodeSystemRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CodeSystemRes, CodeSystemResIndex>(FHIRAllTypes.CodeSystem);     
      }
    }
    public IResourceRepository CommunicationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CommunicationRes, CommunicationResIndex>(FHIRAllTypes.Communication);     
      }
    }
    public IResourceRepository CommunicationRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CommunicationRequestRes, CommunicationRequestResIndex>(FHIRAllTypes.CommunicationRequest);     
      }
    }
    public IResourceRepository CompartmentDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CompartmentDefinitionRes, CompartmentDefinitionResIndex>(FHIRAllTypes.CompartmentDefinition);     
      }
    }
    public IResourceRepository CompositionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CompositionRes, CompositionResIndex>(FHIRAllTypes.Composition);     
      }
    }
    public IResourceRepository ConceptMapRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ConceptMapRes, ConceptMapResIndex>(FHIRAllTypes.ConceptMap);     
      }
    }
    public IResourceRepository ConditionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ConditionRes, ConditionResIndex>(FHIRAllTypes.Condition);     
      }
    }
    public IResourceRepository ConsentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ConsentRes, ConsentResIndex>(FHIRAllTypes.Consent);     
      }
    }
    public IResourceRepository ContractRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ContractRes, ContractResIndex>(FHIRAllTypes.Contract);     
      }
    }
    public IResourceRepository CoverageRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<CoverageRes, CoverageResIndex>(FHIRAllTypes.Coverage);     
      }
    }
    public IResourceRepository DataElementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DataElementRes, DataElementResIndex>(FHIRAllTypes.DataElement);     
      }
    }
    public IResourceRepository DetectedIssueRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DetectedIssueRes, DetectedIssueResIndex>(FHIRAllTypes.DetectedIssue);     
      }
    }
    public IResourceRepository DeviceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceRes, DeviceResIndex>(FHIRAllTypes.Device);     
      }
    }
    public IResourceRepository DeviceComponentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceComponentRes, DeviceComponentResIndex>(FHIRAllTypes.DeviceComponent);     
      }
    }
    public IResourceRepository DeviceMetricRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceMetricRes, DeviceMetricResIndex>(FHIRAllTypes.DeviceMetric);     
      }
    }
    public IResourceRepository DeviceRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceRequestRes, DeviceRequestResIndex>(FHIRAllTypes.DeviceRequest);     
      }
    }
    public IResourceRepository DeviceUseStatementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DeviceUseStatementRes, DeviceUseStatementResIndex>(FHIRAllTypes.DeviceUseStatement);     
      }
    }
    public IResourceRepository DiagnosticReportRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DiagnosticReportRes, DiagnosticReportResIndex>(FHIRAllTypes.DiagnosticReport);     
      }
    }
    public IResourceRepository DocumentManifestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DocumentManifestRes, DocumentManifestResIndex>(FHIRAllTypes.DocumentManifest);     
      }
    }
    public IResourceRepository DocumentReferenceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<DocumentReferenceRes, DocumentReferenceResIndex>(FHIRAllTypes.DocumentReference);     
      }
    }
    public IResourceRepository EligibilityRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EligibilityRequestRes, EligibilityRequestResIndex>(FHIRAllTypes.EligibilityRequest);     
      }
    }
    public IResourceRepository EligibilityResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EligibilityResponseRes, EligibilityResponseResIndex>(FHIRAllTypes.EligibilityResponse);     
      }
    }
    public IResourceRepository EncounterRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EncounterRes, EncounterResIndex>(FHIRAllTypes.Encounter);     
      }
    }
    public IResourceRepository EndpointRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EndpointRes, EndpointResIndex>(FHIRAllTypes.Endpoint);     
      }
    }
    public IResourceRepository EnrollmentRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EnrollmentRequestRes, EnrollmentRequestResIndex>(FHIRAllTypes.EnrollmentRequest);     
      }
    }
    public IResourceRepository EnrollmentResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EnrollmentResponseRes, EnrollmentResponseResIndex>(FHIRAllTypes.EnrollmentResponse);     
      }
    }
    public IResourceRepository EpisodeOfCareRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<EpisodeOfCareRes, EpisodeOfCareResIndex>(FHIRAllTypes.EpisodeOfCare);     
      }
    }
    public IResourceRepository ExpansionProfileRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ExpansionProfileRes, ExpansionProfileResIndex>(FHIRAllTypes.ExpansionProfile);     
      }
    }
    public IResourceRepository ExplanationOfBenefitRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ExplanationOfBenefitRes, ExplanationOfBenefitResIndex>(FHIRAllTypes.ExplanationOfBenefit);     
      }
    }
    public IResourceRepository FamilyMemberHistoryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<FamilyMemberHistoryRes, FamilyMemberHistoryResIndex>(FHIRAllTypes.FamilyMemberHistory);     
      }
    }
    public IResourceRepository FlagRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<FlagRes, FlagResIndex>(FHIRAllTypes.Flag);     
      }
    }
    public IResourceRepository GoalRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GoalRes, GoalResIndex>(FHIRAllTypes.Goal);     
      }
    }
    public IResourceRepository GraphDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GraphDefinitionRes, GraphDefinitionResIndex>(FHIRAllTypes.GraphDefinition);     
      }
    }
    public IResourceRepository GroupRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GroupRes, GroupResIndex>(FHIRAllTypes.Group);     
      }
    }
    public IResourceRepository GuidanceResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<GuidanceResponseRes, GuidanceResponseResIndex>(FHIRAllTypes.GuidanceResponse);     
      }
    }
    public IResourceRepository HealthcareServiceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<HealthcareServiceRes, HealthcareServiceResIndex>(FHIRAllTypes.HealthcareService);     
      }
    }
    public IResourceRepository ImagingManifestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImagingManifestRes, ImagingManifestResIndex>(FHIRAllTypes.ImagingManifest);     
      }
    }
    public IResourceRepository ImagingStudyRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImagingStudyRes, ImagingStudyResIndex>(FHIRAllTypes.ImagingStudy);     
      }
    }
    public IResourceRepository ImmunizationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImmunizationRes, ImmunizationResIndex>(FHIRAllTypes.Immunization);     
      }
    }
    public IResourceRepository ImmunizationRecommendationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImmunizationRecommendationRes, ImmunizationRecommendationResIndex>(FHIRAllTypes.ImmunizationRecommendation);     
      }
    }
    public IResourceRepository ImplementationGuideRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ImplementationGuideRes, ImplementationGuideResIndex>(FHIRAllTypes.ImplementationGuide);     
      }
    }
    public IResourceRepository LibraryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<LibraryRes, LibraryResIndex>(FHIRAllTypes.Library);     
      }
    }
    public IResourceRepository LinkageRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<LinkageRes, LinkageResIndex>(FHIRAllTypes.Linkage);     
      }
    }
    public IResourceRepository ListRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ListRes, ListResIndex>(FHIRAllTypes.List);     
      }
    }
    public IResourceRepository LocationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<LocationRes, LocationResIndex>(FHIRAllTypes.Location);     
      }
    }
    public IResourceRepository MeasureRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MeasureRes, MeasureResIndex>(FHIRAllTypes.Measure);     
      }
    }
    public IResourceRepository MeasureReportRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MeasureReportRes, MeasureReportResIndex>(FHIRAllTypes.MeasureReport);     
      }
    }
    public IResourceRepository MediaRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MediaRes, MediaResIndex>(FHIRAllTypes.Media);     
      }
    }
    public IResourceRepository MedicationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationRes, MedicationResIndex>(FHIRAllTypes.Medication);     
      }
    }
    public IResourceRepository MedicationAdministrationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationAdministrationRes, MedicationAdministrationResIndex>(FHIRAllTypes.MedicationAdministration);     
      }
    }
    public IResourceRepository MedicationDispenseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationDispenseRes, MedicationDispenseResIndex>(FHIRAllTypes.MedicationDispense);     
      }
    }
    public IResourceRepository MedicationRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationRequestRes, MedicationRequestResIndex>(FHIRAllTypes.MedicationRequest);     
      }
    }
    public IResourceRepository MedicationStatementRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MedicationStatementRes, MedicationStatementResIndex>(FHIRAllTypes.MedicationStatement);     
      }
    }
    public IResourceRepository MessageDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MessageDefinitionRes, MessageDefinitionResIndex>(FHIRAllTypes.MessageDefinition);     
      }
    }
    public IResourceRepository MessageHeaderRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<MessageHeaderRes, MessageHeaderResIndex>(FHIRAllTypes.MessageHeader);     
      }
    }
    public IResourceRepository NamingSystemRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<NamingSystemRes, NamingSystemResIndex>(FHIRAllTypes.NamingSystem);     
      }
    }
    public IResourceRepository NutritionOrderRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<NutritionOrderRes, NutritionOrderResIndex>(FHIRAllTypes.NutritionOrder);     
      }
    }
    public IResourceRepository ObservationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ObservationRes, ObservationResIndex>(FHIRAllTypes.Observation);     
      }
    }
    public IResourceRepository OperationDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<OperationDefinitionRes, OperationDefinitionResIndex>(FHIRAllTypes.OperationDefinition);     
      }
    }
    public IResourceRepository OperationOutcomeRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<OperationOutcomeRes, OperationOutcomeResIndex>(FHIRAllTypes.OperationOutcome);     
      }
    }
    public IResourceRepository OrganizationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<OrganizationRes, OrganizationResIndex>(FHIRAllTypes.Organization);     
      }
    }
    public IResourceRepository ParametersRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ParametersRes, ParametersResIndex>(FHIRAllTypes.Parameters);     
      }
    }
    public IResourceRepository PatientRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PatientRes, PatientResIndex>(FHIRAllTypes.Patient);     
      }
    }
    public IResourceRepository PaymentNoticeRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PaymentNoticeRes, PaymentNoticeResIndex>(FHIRAllTypes.PaymentNotice);     
      }
    }
    public IResourceRepository PaymentReconciliationRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PaymentReconciliationRes, PaymentReconciliationResIndex>(FHIRAllTypes.PaymentReconciliation);     
      }
    }
    public IResourceRepository PersonRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PersonRes, PersonResIndex>(FHIRAllTypes.Person);     
      }
    }
    public IResourceRepository PlanDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PlanDefinitionRes, PlanDefinitionResIndex>(FHIRAllTypes.PlanDefinition);     
      }
    }
    public IResourceRepository PractitionerRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PractitionerRes, PractitionerResIndex>(FHIRAllTypes.Practitioner);     
      }
    }
    public IResourceRepository PractitionerRoleRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<PractitionerRoleRes, PractitionerRoleResIndex>(FHIRAllTypes.PractitionerRole);     
      }
    }
    public IResourceRepository ProcedureRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcedureRes, ProcedureResIndex>(FHIRAllTypes.Procedure);     
      }
    }
    public IResourceRepository ProcedureRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcedureRequestRes, ProcedureRequestResIndex>(FHIRAllTypes.ProcedureRequest);     
      }
    }
    public IResourceRepository ProcessRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcessRequestRes, ProcessRequestResIndex>(FHIRAllTypes.ProcessRequest);     
      }
    }
    public IResourceRepository ProcessResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProcessResponseRes, ProcessResponseResIndex>(FHIRAllTypes.ProcessResponse);     
      }
    }
    public IResourceRepository ProvenanceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ProvenanceRes, ProvenanceResIndex>(FHIRAllTypes.Provenance);     
      }
    }
    public IResourceRepository QuestionnaireRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<QuestionnaireRes, QuestionnaireResIndex>(FHIRAllTypes.Questionnaire);     
      }
    }
    public IResourceRepository QuestionnaireResponseRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<QuestionnaireResponseRes, QuestionnaireResponseResIndex>(FHIRAllTypes.QuestionnaireResponse);     
      }
    }
    public IResourceRepository ReferralRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ReferralRequestRes, ReferralRequestResIndex>(FHIRAllTypes.ReferralRequest);     
      }
    }
    public IResourceRepository RelatedPersonRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<RelatedPersonRes, RelatedPersonResIndex>(FHIRAllTypes.RelatedPerson);     
      }
    }
    public IResourceRepository RequestGroupRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<RequestGroupRes, RequestGroupResIndex>(FHIRAllTypes.RequestGroup);     
      }
    }
    public IResourceRepository ResearchStudyRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ResearchStudyRes, ResearchStudyResIndex>(FHIRAllTypes.ResearchStudy);     
      }
    }
    public IResourceRepository ResearchSubjectRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ResearchSubjectRes, ResearchSubjectResIndex>(FHIRAllTypes.ResearchSubject);     
      }
    }
    public IResourceRepository RiskAssessmentRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<RiskAssessmentRes, RiskAssessmentResIndex>(FHIRAllTypes.RiskAssessment);     
      }
    }
    public IResourceRepository ScheduleRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ScheduleRes, ScheduleResIndex>(FHIRAllTypes.Schedule);     
      }
    }
    public IResourceRepository SearchParameterRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SearchParameterRes, SearchParameterResIndex>(FHIRAllTypes.SearchParameter);     
      }
    }
    public IResourceRepository SequenceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SequenceRes, SequenceResIndex>(FHIRAllTypes.Sequence);     
      }
    }
    public IResourceRepository ServiceDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ServiceDefinitionRes, ServiceDefinitionResIndex>(FHIRAllTypes.ServiceDefinition);     
      }
    }
    public IResourceRepository SlotRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SlotRes, SlotResIndex>(FHIRAllTypes.Slot);     
      }
    }
    public IResourceRepository SpecimenRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SpecimenRes, SpecimenResIndex>(FHIRAllTypes.Specimen);     
      }
    }
    public IResourceRepository StructureDefinitionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<StructureDefinitionRes, StructureDefinitionResIndex>(FHIRAllTypes.StructureDefinition);     
      }
    }
    public IResourceRepository StructureMapRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<StructureMapRes, StructureMapResIndex>(FHIRAllTypes.StructureMap);     
      }
    }
    public IResourceRepository SubscriptionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SubscriptionRes, SubscriptionResIndex>(FHIRAllTypes.Subscription);     
      }
    }
    public IResourceRepository SubstanceRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SubstanceRes, SubstanceResIndex>(FHIRAllTypes.Substance);     
      }
    }
    public IResourceRepository SupplyDeliveryRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SupplyDeliveryRes, SupplyDeliveryResIndex>(FHIRAllTypes.SupplyDelivery);     
      }
    }
    public IResourceRepository SupplyRequestRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<SupplyRequestRes, SupplyRequestResIndex>(FHIRAllTypes.SupplyRequest);     
      }
    }
    public IResourceRepository TaskRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<TaskRes, TaskResIndex>(FHIRAllTypes.Task);     
      }
    }
    public IResourceRepository TestReportRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<TestReportRes, TestReportResIndex>(FHIRAllTypes.TestReport);     
      }
    }
    public IResourceRepository TestScriptRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<TestScriptRes, TestScriptResIndex>(FHIRAllTypes.TestScript);     
      }
    }
    public IResourceRepository ValueSetRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<ValueSetRes, ValueSetResIndex>(FHIRAllTypes.ValueSet);     
      }
    }
    public IResourceRepository VisionPrescriptionRepository
    {
      get
      {      
        return IResourceRepositoryFactory.Create<VisionPrescriptionRes, VisionPrescriptionResIndex>(FHIRAllTypes.VisionPrescription);     
      }
    }
	
  }
}
