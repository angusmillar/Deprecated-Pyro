<?xml version="1.0" encoding="utf-8"?>
<appSettings>
  <!-- THIS IS THE WEB PROJECT FILE-->

  <!-- =====================================================================================================
       Command: ServiceBaseURL
       Value: URL String
       Description: This setting sets the service's Service Base URL and must match the URL where the service 
       is hosted. Care must be taken changing this URL post the service being in operation as the 
       physical Resources and the search indexes in the database, and any external references with still have 
       the previous URL reference. In practice, all Resource would need to be updated and recommitted. 
       Simply changing this setting here does not perform those references updates. -->

  <!-- Production PyroHealth.net Wed Server -->
  <!--<add key="ServiceBaseURL" value="https://stu3.test.pyrohealth.net/fhir" />-->
  
  <!-- Local Wed Server for development -->
  <!--<add key="ServiceBaseURL" value="https://localhost:53761/fhir" />-->

  <!-- AWS Elastic Bean Stalk enviroment (PyroServer) -->
  <add key="ServiceBaseURL" value="http://pyroserver.ap-southeast-2.elasticbeanstalk.com/fhir" />

  <!-- =====================================================================================================
       Command: ApplicationCacheServicesActive
       Value: boolean
       Default: True
       Description: This setting turns on or off the Application Cache. 
       This is primarily turned off to assist in debugging where the caching can complicate 
       the debugging process. Under normal production operation this should be set to True-->
  <add key="ApplicationCacheServicesActive" value="True" />

  <!-- ===================================================================================================== 
       Command: NumberOfRecordsPerPageDefault
       Value: integer
       Default: 50
       Description: This setting is to set the default number of Resource returned in a bundle, for example,
       in a FHIR search call. The default can be over-ridden per API call using the _count search parameter
       in the call. -->
  <add key="NumberOfRecordsPerPageDefault" value="50" />

  <!-- ===================================================================================================== 
       Command: MaxNumberOfRecordsPerPage
       Value: integer       
       Default: 500
       Description: This setting is to set the absolute maximum number of Resource that can be requested 
       when using the _count search parameter. For example, if an API caller sets the parameter _count=500 
       and this command 'MaxNumberOfRecordsPerPage' is set to 200 then the _count search parameter value 
       will be ignored and only 200 will be returned. This is to prevent users asking for a _count value 
       that is too large, resulting in poor performance of the service. Also, beware that the service has 
       an internal setting called 'SystemDefaultMaxNumberOfRecordsPerPage' that can not be changed by 
       configuration. This command 'MaxNumberOfRecordsPerPage' cannot exceed the 
       'SystemDefaultMaxNumberOfRecordsPerPage' command which is currently set at 5000 and the command 
       here will default to the 'SystemDefaultMaxNumberOfRecordsPerPage' value if set higher.-->
  <add key="MaxNumberOfRecordsPerPage" value="200" />

  <!-- =====================================================================================================
       Command: FhirAuditEventLogRequestData
       Value: boolean
       Default: True
       Description: Every request made to the Server's FHIR API is audited as a FHIR AuditEvent resource.
       When this setting is set to True an Audit.Entity instance will be added to these resources containing 
       the original request data including the entire Resource contained in the request where one is given.
       If set to False this entity will not be added yet AuditEvent resources will still be created for every 
       request with all the other properties of the request.
       This is primarily set to False to prevent the AuditEvent resources growing excessively in size on disk.-->
  <add key="FhirAuditEventLogRequestData" value="False" />

  <!-- =====================================================================================================
       Command: FhirAuditEventLogResponseData
       Value: boolean
       Default: True
       Description: Every request made to the Server's FHIR API is audited as a FHIR AuditEvent resource.
       When this setting is set to True an Audit.Entity instance will be added to these resources containing 
       the original response data including the entire Resource returned in requests where one is given.
       If set to False this entity will not be added yet AuditEvent resources will still be created for every 
       request with all the other properties of the request.
       This is primarily set to False to prevent the AuditEvent resources growing excessively in size on disk.-->
  <add key="FhirAuditEventLogResponseData" value="False" />

  <!--================================= HI Service Information =============================================
  
       HI Service connectivity requires a HI Service digital certificate to be loaded into the servers windows certificate store. 
       To obtain a production certificate from the Department of Human Services Australia your entire system must pass a 
       HI Service conformance accreditation assessment.
       
       This assessment involves more than just the ability to make the web service calls which this server is capable of. 
       The assessment is also concerned about the management of the identifiers against the systems patient records, concerns 
       such as: 
        - What to do when a duplicate IHI is detected. 
        - What to do if a resolved IHI is returned for a patient record. 
        - How often must a IHI identifier be revalidated?
       
       This server provides a convenient FHIR interface to the HI Service IHI calls and the logging of those calls, yet it does not manage the assignment of the returned IHIs to patient records. This is the job of an external application
       built on top of, utilising this server.
  -->
  
  <!-- =====================================================================================================
       Command: HIServiceConnectivityActive
       Value: boolean
       Default: False
       Description: Activate or Deactivate HI Service Connectivity for the server
       If this command is set to False then all following HI Service commands are not required, they could all be commented out.       
       -->
  <add key="HIServiceConnectivityActive" value="True" />

  <!-- =====================================================================================================
       Command: HIServiceCertificateSerialNumber
       Value: string
       Default: ""
       Description: The HI Service certificate serial number from the windows certificate manager's personal store for the active user-->
  <add key="HIServiceCertificateSerialNumber" value="063c23" />

  <!-- =====================================================================================================
       Command: HIServiceEndpoint
       Value: string
       Default: ""
       Test HI Service found at: "https://www5.medicareaustralia.gov.au/cert/soap/services/"
       Prod HI Service found at: "https://www3.medicareaustralia.gov.au/pcert/soap/services/"
       The HI Service Endpoint where the HI Service is found-->
  <add key="HIServiceEndpoint" value="https://www5.medicareaustralia.gov.au/cert/soap/services/" />

  <!-- =====================================================================================================
       Command: HIServiceProductName
       Value: string
       Default: ""
       Description: The HI Service ProductName as registered with and provided by Medicare for the HI Service connection.
       This would most likely be 'PyroServer' or the product name that was accredited for HI Service connectivity-->
  <add key="HIServiceProductName" value="NEHTA HIPS" />

  <!-- =====================================================================================================
       Command: HIServiceProductVersion
       Value: string
       Default: ""
       Description: The HI Service ProductVersion as registered with and provided by Medicare for the HI Service connection.
       This would be the version of the PyroServer or at least the version that was accredited for HI Service connectivity-->
  <add key="HIServiceProductVersion" value="6.1" />

  <!-- =====================================================================================================
       Command: HIServiceVendorId
       Value: string
       Default: ""
       Description: The HI Service VendorId as registered with and provided by Medicare for the HI Service connection
       This would be an id for the client using the PyroServer for there HI Service connectivity-->
  <add key="HIServiceVendorId" value="HIPS0001" />
  
   <!-- =====================================================================================================
       Command: HIServiceVendorIdQualifier
       Value: string
       Default: ""
       Description: The HI Service VendorIdQualifier as registered with and provided by Medicare for the HI Service connection
       This would be a IdQualifier for the client using the Pyro Service for there HI Service connectivity
       It will most likely be 'http://ns.electronichealth.net.au/id/hi/vendorid/1.0'-->
  <add key="HIServiceVendorIdQualifier" value="http://ns.electronichealth.net.au/id/hi/vendorid/1.0" />

  <!-- =====================================================================================================
       Command: HIServiceIHIValidationPeriodDays
       Value: integer
       Default: "1"
       Description: A IHI identifier is only valid from the HI Service for a set period of time before it should be revalidated 
       again. The HI Service states this is 24hrs (1 Day) although for My Health Record use the rule is 'a configurable period'.
       From experience, 3 days is a good suggestion, for My Health Record. This parameter below controls the setting of the FHIR 
       Patient identifier period start and end dates where the start will be when this server last validated the identifier and the 
       end being x number of days from the start calculated based on this parameter-->
  <add key="HIServiceIHIValidationPeriodDays" value="3" />

</appSettings>
