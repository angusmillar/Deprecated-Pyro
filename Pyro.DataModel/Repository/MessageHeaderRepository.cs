using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using Pyro.DataModel.DatabaseModel;
using Pyro.DataModel.DatabaseModel.Base;
using Pyro.DataModel.Support;
using Pyro.DataModel.IndexSetter;
using Pyro.Common.Interfaces.Repositories;
using Pyro.Common.Interfaces.UriSupport;
using Pyro.Common.BusinessEntities.Dto;
using Hl7.Fhir.Model;

//This file was auto generated by _GenericCodeDataTypeEnumsGenerator.tt and should not be modified manually. 
//Generation time-stamp: : 22/11/2016 5:12:01 PM.

namespace Pyro.DataModel.Repository
{
  public partial class MessageHeaderRepository<ResourceType, ResourceHistoryType> : CommonResourceRepository<ResourceType, ResourceHistoryType>, IResourceRepository 
    where ResourceType : Res_MessageHeader, new() 
    where ResourceHistoryType :Res_MessageHeader_History, new()
  {
    public MessageHeaderRepository(DataModel.DatabaseModel.DatabaseContext Context) : base(Context) { this.RepositoryResourceType = FHIRAllTypes.MessageHeader; }

    protected override void GetResourceHistoryEntityList(LinqKit.ExpressionStarter<ResourceType> Predicate, int StartRecord, List<DtoResource> DtoResourceList)
    {
      var HistoryEntityList = DbGetAll<ResourceType>(Predicate).SelectMany(y => y.Res_MessageHeader_History_List)
        .OrderByDescending(x => x.lastUpdated)
        .Skip(StartRecord)
        .Take(_NumberOfRecordsPerPage)
        .ToList();

      if (HistoryEntityList != null)
        HistoryEntityList.ForEach(x => DtoResourceList.Add(IndexSettingSupport.SetDtoResource(x, this.RepositoryResourceType, false)));
    }

    protected override int GetResourceHistoryEntityCount(LinqKit.ExpressionStarter<ResourceType> Predicate)
    {
      return DbGetAll<ResourceType>(Predicate).SelectMany(y => y.Res_MessageHeader_History_List).Count();      
    }

    protected override void AddResourceHistoryEntityToResourceEntity(ResourceType ResourceEntity, ResourceHistoryType ResourceHistoryEntity)
    {
      ResourceEntity.Res_MessageHeader_History_List.Add(ResourceHistoryEntity);
    }
    
    protected override ResourceType LoadCurrentResourceEntity(string FhirId)
    {
      var IncludeList = new List<Expression<Func<ResourceType, object>>>();
         IncludeList.Add(x => x.data_List);
      IncludeList.Add(x => x.destination_List);
      IncludeList.Add(x => x.destination_uri_List);
      IncludeList.Add(x => x.target_List);
      IncludeList.Add(x => x._profile_List);
      IncludeList.Add(x => x._security_List);
      IncludeList.Add(x => x._tag_List);
    
      var ResourceEntity = DbQueryEntityWithInclude<ResourceType>(x => x.FhirId == FhirId, IncludeList);
      return ResourceEntity;
    }
    
    protected override void ResetResourceEntity(ResourceType ResourceEntity)
    {
      ResourceEntity.author_VersionId = null;      
      ResourceEntity.author_FhirId = null;      
      ResourceEntity.author_Type = null;      
      ResourceEntity.author_Url = null;      
      ResourceEntity.author_ServiceRootURL_StoreID = null;      
      ResourceEntity.code_Code = null;      
      ResourceEntity.code_System = null;      
      ResourceEntity.enterer_VersionId = null;      
      ResourceEntity.enterer_FhirId = null;      
      ResourceEntity.enterer_Type = null;      
      ResourceEntity.enterer_Url = null;      
      ResourceEntity.enterer_ServiceRootURL_StoreID = null;      
      ResourceEntity.event_Code = null;      
      ResourceEntity.event_System = null;      
      ResourceEntity.receiver_VersionId = null;      
      ResourceEntity.receiver_FhirId = null;      
      ResourceEntity.receiver_Type = null;      
      ResourceEntity.receiver_Url = null;      
      ResourceEntity.receiver_ServiceRootURL_StoreID = null;      
      ResourceEntity.response_id_Code = null;      
      ResourceEntity.response_id_System = null;      
      ResourceEntity.responsible_VersionId = null;      
      ResourceEntity.responsible_FhirId = null;      
      ResourceEntity.responsible_Type = null;      
      ResourceEntity.responsible_Url = null;      
      ResourceEntity.responsible_ServiceRootURL_StoreID = null;      
      ResourceEntity.source_String = null;      
      ResourceEntity.source_uri_Uri = null;      
      ResourceEntity.timestamp_DateTimeOffset = null;      
 
      
      _Context.Res_MessageHeader_Index_data.RemoveRange(ResourceEntity.data_List);            
      _Context.Res_MessageHeader_Index_destination.RemoveRange(ResourceEntity.destination_List);            
      _Context.Res_MessageHeader_Index_destination_uri.RemoveRange(ResourceEntity.destination_uri_List);            
      _Context.Res_MessageHeader_Index_target.RemoveRange(ResourceEntity.target_List);            
      _Context.Res_MessageHeader_Index__profile.RemoveRange(ResourceEntity._profile_List);            
      _Context.Res_MessageHeader_Index__security.RemoveRange(ResourceEntity._security_List);            
      _Context.Res_MessageHeader_Index__tag.RemoveRange(ResourceEntity._tag_List);            
 
    }

    protected override void PopulateResourceEntity(ResourceType ResourceEntity, string ResourceVersion, Resource Resource, IDtoFhirRequestUri FhirRequestUri)
    {
      var ResourceTyped = Resource as MessageHeader;
      var ResourseEntity = ResourceEntity as ResourceType;

          if (ResourceTyped.Author != null)
      {
        if (ResourceTyped.Author is Hl7.Fhir.Model.ResourceReference)
        {
          var Index = new ReferenceIndex();
          Index = IndexSetterFactory.Create(typeof(ReferenceIndex)).Set(ResourceTyped.Author, Index, FhirRequestUri, this) as ReferenceIndex;
          if (Index != null)
          {
            ResourseEntity.author_Type = Index.Type;
            ResourseEntity.author_FhirId = Index.FhirId;
            if (Index.Url != null)
            {
              ResourseEntity.author_Url = Index.Url;
            }
            else
            {
              ResourseEntity.author_ServiceRootURL_StoreID = Index.ServiceRootURL_StoreID;
            }
          }
        }
      }

      if (ResourceTyped.Response != null)
      {
        if (ResourceTyped.Response.Code != null)
        {
          if (ResourceTyped.Response.CodeElement is Hl7.Fhir.Model.Code<Hl7.Fhir.Model.MessageHeader.ResponseType>)
          {
            var Index = new TokenIndex();
            Index = IndexSetterFactory.Create(typeof(TokenIndex)).Set(ResourceTyped.Response.CodeElement, Index) as TokenIndex;
            if (Index != null)
            {
              ResourseEntity.code_Code = Index.Code;
              ResourseEntity.code_System = Index.System;
            }
          }
        }
      }

      if (ResourceTyped.Enterer != null)
      {
        if (ResourceTyped.Enterer is Hl7.Fhir.Model.ResourceReference)
        {
          var Index = new ReferenceIndex();
          Index = IndexSetterFactory.Create(typeof(ReferenceIndex)).Set(ResourceTyped.Enterer, Index, FhirRequestUri, this) as ReferenceIndex;
          if (Index != null)
          {
            ResourseEntity.enterer_Type = Index.Type;
            ResourseEntity.enterer_FhirId = Index.FhirId;
            if (Index.Url != null)
            {
              ResourseEntity.enterer_Url = Index.Url;
            }
            else
            {
              ResourseEntity.enterer_ServiceRootURL_StoreID = Index.ServiceRootURL_StoreID;
            }
          }
        }
      }

      if (ResourceTyped.Event != null)
      {
        if (ResourceTyped.Event is Hl7.Fhir.Model.Coding)
        {
          var Index = new TokenIndex();
          Index = IndexSetterFactory.Create(typeof(TokenIndex)).Set(ResourceTyped.Event, Index) as TokenIndex;
          if (Index != null)
          {
            ResourseEntity.event_Code = Index.Code;
            ResourseEntity.event_System = Index.System;
          }
        }
      }

      if (ResourceTyped.Receiver != null)
      {
        if (ResourceTyped.Receiver is Hl7.Fhir.Model.ResourceReference)
        {
          var Index = new ReferenceIndex();
          Index = IndexSetterFactory.Create(typeof(ReferenceIndex)).Set(ResourceTyped.Receiver, Index, FhirRequestUri, this) as ReferenceIndex;
          if (Index != null)
          {
            ResourseEntity.receiver_Type = Index.Type;
            ResourseEntity.receiver_FhirId = Index.FhirId;
            if (Index.Url != null)
            {
              ResourseEntity.receiver_Url = Index.Url;
            }
            else
            {
              ResourseEntity.receiver_ServiceRootURL_StoreID = Index.ServiceRootURL_StoreID;
            }
          }
        }
      }

      if (ResourceTyped.Response != null)
      {
        if (ResourceTyped.Response.Identifier != null)
        {
          if (ResourceTyped.Response.IdentifierElement is Hl7.Fhir.Model.Id)
          {
            var Index = new TokenIndex();
            Index = IndexSetterFactory.Create(typeof(TokenIndex)).Set(ResourceTyped.Response.IdentifierElement, Index) as TokenIndex;
            if (Index != null)
            {
              ResourseEntity.response_id_Code = Index.Code;
              ResourseEntity.response_id_System = Index.System;
            }
          }
        }
      }

      if (ResourceTyped.Responsible != null)
      {
        if (ResourceTyped.Responsible is Hl7.Fhir.Model.ResourceReference)
        {
          var Index = new ReferenceIndex();
          Index = IndexSetterFactory.Create(typeof(ReferenceIndex)).Set(ResourceTyped.Responsible, Index, FhirRequestUri, this) as ReferenceIndex;
          if (Index != null)
          {
            ResourseEntity.responsible_Type = Index.Type;
            ResourseEntity.responsible_FhirId = Index.FhirId;
            if (Index.Url != null)
            {
              ResourseEntity.responsible_Url = Index.Url;
            }
            else
            {
              ResourseEntity.responsible_ServiceRootURL_StoreID = Index.ServiceRootURL_StoreID;
            }
          }
        }
      }

      if (ResourceTyped.Source != null)
      {
        if (ResourceTyped.Source.Name != null)
        {
          if (ResourceTyped.Source.NameElement is Hl7.Fhir.Model.FhirString)
          {
            var Index = new StringIndex();
            Index = IndexSetterFactory.Create(typeof(StringIndex)).Set(ResourceTyped.Source.NameElement, Index) as StringIndex;
            if (Index != null)
            {
              ResourseEntity.source_String = Index.String;
            }
          }
        }
      }

      if (ResourceTyped.Source != null)
      {
        if (ResourceTyped.Source.Endpoint != null)
        {
          if (ResourceTyped.Source.EndpointElement is Hl7.Fhir.Model.FhirUri)
          {
            var Index = new UriIndex();
            Index = IndexSetterFactory.Create(typeof(UriIndex)).Set(ResourceTyped.Source.EndpointElement, Index) as UriIndex;
            if (Index != null)
            {
              ResourseEntity.source_uri_Uri = Index.Uri;
            }
          }
        }
      }

      if (ResourceTyped.Timestamp != null)
      {
        if (ResourceTyped.TimestampElement is Hl7.Fhir.Model.Instant)
        {
          var Index = new DateTimeIndex();
          Index = IndexSetterFactory.Create(typeof(DateTimeIndex)).Set(ResourceTyped.TimestampElement, Index) as DateTimeIndex;
          if (Index != null)
          {
            ResourseEntity.timestamp_DateTimeOffset = Index.DateTimeOffset;
          }
        }
      }

      if (ResourceTyped.Data != null)
      {
        foreach (var item in ResourceTyped.Data)
        {
          if (item is ResourceReference)
          {
            var Index = new Res_MessageHeader_Index_data();
            Index = IndexSetterFactory.Create(typeof(ReferenceIndex)).Set(item, Index, FhirRequestUri, this) as Res_MessageHeader_Index_data;
            if (Index != null)
            {
              ResourseEntity.data_List.Add(Index);
            }
          }
        }
      }

      foreach (var item1 in ResourceTyped.Destination)
      {
        if (item1.Name != null)
        {
          if (item1.NameElement is Hl7.Fhir.Model.FhirString)
          {
            var Index = new Res_MessageHeader_Index_destination();
            Index = IndexSetterFactory.Create(typeof(StringIndex)).Set(item1.NameElement, Index) as Res_MessageHeader_Index_destination;
            ResourseEntity.destination_List.Add(Index);
          }
        }
      }

      foreach (var item1 in ResourceTyped.Destination)
      {
        if (item1.Endpoint != null)
        {
          if (item1.EndpointElement is Hl7.Fhir.Model.FhirUri)
          {
            var Index = new Res_MessageHeader_Index_destination_uri();
            Index = IndexSetterFactory.Create(typeof(UriIndex)).Set(item1.EndpointElement, Index) as Res_MessageHeader_Index_destination_uri;
            ResourseEntity.destination_uri_List.Add(Index);
          }
        }
      }

      foreach (var item1 in ResourceTyped.Destination)
      {
        if (item1.Target != null)
        {
          if (item1.Target is ResourceReference)
          {
            var Index = new Res_MessageHeader_Index_target();
            Index = IndexSetterFactory.Create(typeof(ReferenceIndex)).Set(item1.Target, Index, FhirRequestUri, this) as Res_MessageHeader_Index_target;
            if (Index != null)
            {
              ResourseEntity.target_List.Add(Index);
            }
          }
        }
      }

      if (ResourceTyped.Meta != null)
      {
        if (ResourceTyped.Meta.Profile != null)
        {
          foreach (var item4 in ResourceTyped.Meta.ProfileElement)
          {
            if (item4 is Hl7.Fhir.Model.FhirUri)
            {
              var Index = new Res_MessageHeader_Index__profile();
              Index = IndexSetterFactory.Create(typeof(UriIndex)).Set(item4, Index) as Res_MessageHeader_Index__profile;
              ResourseEntity._profile_List.Add(Index);
            }
          }
        }
      }

      if (ResourceTyped.Meta != null)
      {
        if (ResourceTyped.Meta.Security != null)
        {
          foreach (var item4 in ResourceTyped.Meta.Security)
          {
            if (item4 is Hl7.Fhir.Model.Coding)
            {
              var Index = new Res_MessageHeader_Index__security();
              Index = IndexSetterFactory.Create(typeof(TokenIndex)).Set(item4, Index) as Res_MessageHeader_Index__security;
              ResourseEntity._security_List.Add(Index);
            }
          }
        }
      }

      if (ResourceTyped.Meta != null)
      {
        if (ResourceTyped.Meta.Tag != null)
        {
          foreach (var item4 in ResourceTyped.Meta.Tag)
          {
            if (item4 is Hl7.Fhir.Model.Coding)
            {
              var Index = new Res_MessageHeader_Index__tag();
              Index = IndexSetterFactory.Create(typeof(TokenIndex)).Set(item4, Index) as Res_MessageHeader_Index__tag;
              ResourseEntity._tag_List.Add(Index);
            }
          }
        }
      }


      
    }

  }
} 

