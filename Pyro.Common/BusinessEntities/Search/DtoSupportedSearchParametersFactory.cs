using System.Collections.Generic;
using Blaze.Common.Enum;
using Hl7.Fhir.Model;

namespace Blaze.Common.BusinessEntities.Search
{
  public class DtoSupportedSearchParametersFactory
  {
    public static List<DtoSupportedSearchParameters> GetSupportedParametersForResourceTypeList(FHIRAllTypes ResourceType)
    {
      var List = new List<DtoSupportedSearchParameters>();
      Blaze.Common.BusinessEntities.Search.DtoSupportedSearchParameters.AddSupportedParametersForAllResources(List);
      DtoSupportedSearchParameters SupportedSearchParameter = null;
      switch (ResourceType)
      {

        case FHIRAllTypes.Account:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.balance;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "balance";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.QuantityIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.owner;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "owner";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.period;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "period";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ActivityDefinition:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.topic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "topic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.title;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "title";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.AllergyIntolerance:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.manifestation;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "manifestation";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.onset;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "onset";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.route;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "route";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.severity;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "severity";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.criticality;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "criticality";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.last_date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "last_date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.recorder;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "recorder";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.reporter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "reporter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Appointment:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.actor;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "actor";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.appointment_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "appointment_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.part_status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "part_status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.practitioner;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "practitioner";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.service_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "service_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.AppointmentResponse:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.actor;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "actor";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.appointment;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "appointment";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.part_status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "part_status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.practitioner;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "practitioner";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.AuditEvent:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.agent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "agent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.agent_name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "agent_name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.altid;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "altid";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.entity;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "entity";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.entity_id;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "entity_id";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.entity_name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "entity_name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.entity_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "entity_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.policy;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "policy";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.role;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "role";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subtype;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "subtype";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.user;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "user";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.action;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "action";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.outcome;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "outcome";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.site;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "site";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Basic:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "author";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Binary:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.contenttype;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "contenttype";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.BodySite:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Bundle:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.composition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "composition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.message;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "message";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.CarePlan:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.activitycode;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "activitycode";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.activitydate;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "activitydate";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.activityreference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "activityreference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.careteam;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "careteam";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.condition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "condition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.goal;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "goal";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.performer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "performer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.relatedcode;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "relatedcode";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.relatedplan;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "relatedplan";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.CareTeam:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.participant;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "participant";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Claim:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.facility_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "facility_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.facility_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "facility_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.insurer_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "insurer_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.insurer_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "insurer_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.priority;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "priority";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.provider_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "provider_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.provider_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "provider_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.use;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "use";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ClaimResponse:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.disposition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "disposition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.outcome;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "outcome";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.paymentdate;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "paymentdate";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ClinicalImpression:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.action;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "action";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.finding_code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "finding_code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.finding_ref;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "finding_ref";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.investigation;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "investigation";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.plan;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "plan";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.problem;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "problem";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.assessor;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "assessor";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.previous;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "previous";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.CodeSystem:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.language;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "language";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.content;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "content";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.system;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "system";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Communication:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.based_on;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "based_on";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.medium;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "medium";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.recipient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "recipient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.received;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "received";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.sender;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "sender";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.sent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "sent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.CommunicationRequest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.medium;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "medium";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.priority;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "priority";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.recipient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "recipient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.requested;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "requested";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.requester;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "requester";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.sender;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "sender";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.time;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "time";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.CompartmentDefinition:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.resource;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "resource";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Composition:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.attester;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "attester";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "author";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._class;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "class";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.entry;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "entry";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.period;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "period";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.section;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "section";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.confidentiality;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "confidentiality";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.title;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "title";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ConceptMap:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.dependson;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "dependson";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.product;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "product";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source_code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "source_code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source_system;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "source_system";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.target_code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "target_code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.target_system;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "target_system";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source_uri;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source_uri";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.target;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "target";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.target_uri;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "target_uri";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Condition:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.body_site;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "body_site";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.evidence;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "evidence";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.severity;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "severity";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.stage;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "stage";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.asserter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "asserter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.clinicalstatus;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "clinicalstatus";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date_recorded;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date_recorded";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Conformance:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._event;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "event";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.format;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "format";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.mode;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "mode";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.resource;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "resource";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.resourceprofile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "resourceprofile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.securityservice;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "securityservice";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.supported_profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "supported_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.fhirversion;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "fhirversion";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.software;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "software";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Consent:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.action;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "action";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.actor;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "actor";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.consentor;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "consentor";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.data;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "data";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.purpose;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "purpose";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.recipient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "recipient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.period;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "period";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Contract:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.agent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "agent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.authority;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "authority";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.domain;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "domain";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.signer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "signer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.topic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "topic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.ttopic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "ttopic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.issued;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "issued";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Coverage:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.beneficiary_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "beneficiary_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.beneficiary_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "beneficiary_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.dependent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "dependent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.NumberIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.group;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "group";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.issuer_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "issuer_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.issuer_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "issuer_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.plan;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "plan";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.planholder_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "planholder_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.planholder_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "planholder_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.sequence;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "sequence";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.NumberIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subgroup;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subgroup";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subplan;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subplan";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DataElement:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.stringency;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "stringency";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DecisionSupportServiceModule:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.topic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "topic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.title;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "title";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DetectedIssue:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.implicated;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "implicated";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "author";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Device:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.manufacturer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "manufacturer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.model;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "model";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.udicarrier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "udicarrier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DeviceComponent:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.parent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "parent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DeviceMetric:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.parent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "parent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DeviceUseRequest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.based_on;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "based_on";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.definition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "definition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.replaces;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "replaces";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.stage;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "stage";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author_date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "author_date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.device;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "device";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.event_date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "event_date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.filler;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "filler";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.requester;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "requester";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.requisition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "requisition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DeviceUseStatement:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.device;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "device";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DiagnosticReport:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.diagnosis;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "diagnosis";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.image;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "image";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.performer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "performer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "request";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.result;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "result";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.specimen;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "specimen";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.issued;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "issued";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DiagnosticRequest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.based_on;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "based_on";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.definition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "definition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.replaces;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "replaces";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.stage;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "stage";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author_date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "author_date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.event_date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "event_date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.filler;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "filler";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.requester;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "requester";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.requisition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "requisition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DocumentManifest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "author";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.content_ref;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "content_ref";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.recipient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "recipient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.related_id;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "related_id";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.related_ref;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "related_ref";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.DocumentReference:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "author";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._class;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "class";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._event;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "event";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.facility;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "facility";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.format;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "format";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.language;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "language";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.related_id;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "related_id";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.related_ref;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "related_ref";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.relatesto;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "relatesto";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.relation;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "relation";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.securitylabel;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "securitylabel";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.setting;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "setting";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.authenticator;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "authenticator";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.custodian;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "custodian";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.indexed;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "indexed";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.period;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "period";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.EligibilityRequest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.facility_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "facility_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.facility_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "facility_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.provider_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "provider_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.provider_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "provider_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.EligibilityResponse:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.disposition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "disposition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.outcome;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "outcome";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_provider_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_provider_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_provider_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_provider_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Encounter:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.condition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "condition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.episodeofcare;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "episodeofcare";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.incomingreferral;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "incomingreferral";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.indication;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "indication";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location_period;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "location_period";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.participant;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "participant";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.participant_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "participant_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.practitioner;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "practitioner";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.procedure;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "procedure";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.reason;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "reason";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.special_arrangement;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "special_arrangement";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.appointment;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "appointment";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._class;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "class";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.length;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "length";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.NumberIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.part_of;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "part_of";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Endpoint:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.payload_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "payload_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.EnrollmentRequest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.EnrollmentResponse:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.EpisodeOfCare:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.condition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "condition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.incomingreferral;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "incomingreferral";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.care_manager;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "care_manager";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ExpansionProfile:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ExplanationOfBenefit:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.claimidentifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "claimidentifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.claimreference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "claimreference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.disposition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "disposition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.facilityidentifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "facilityidentifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.facilityreference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "facilityreference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organizationidentifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organizationidentifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organizationreference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organizationreference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patientidentifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patientidentifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patientreference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patientreference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.provideridentifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "provideridentifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.providerreference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "providerreference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.FamilyMemberHistory:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.relationship;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "relationship";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.gender;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "gender";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Flag:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "author";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Goal:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.targetdate;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "targetdate";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Group:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.characteristic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "characteristic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.exclude;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "exclude";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.member;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "member";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.value;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "value";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.actual;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "actual";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.GuidanceResponse:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.HealthcareService:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.characteristic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "characteristic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.programname;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "programname";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.servicecategory;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "servicecategory";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.servicetype;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "servicetype";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.active;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "active";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ImagingManifest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.selected_study;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "selected_study";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.title;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "title";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "author";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.authoring_time;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "authoring_time";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ImagingStudy:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.basedon;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "basedon";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.bodysite;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "bodysite";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.dicom_class;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "dicom_class";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.modality;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "modality";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.reason;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "reason";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.series;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "series";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.uid;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "uid";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.accession;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "accession";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.started;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "started";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.study;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "study";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Immunization:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.dose_sequence;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "dose_sequence";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.NumberIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.reaction;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "reaction";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.reaction_date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "reaction_date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.reason;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "reason";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.reason_not_given;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "reason_not_given";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.vaccine_code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "vaccine_code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.lot_number;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "lot_number";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.manufacturer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "manufacturer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.notgiven;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "notgiven";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.performer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "performer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.requester;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "requester";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ImmunizationRecommendation:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.dose_number;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "dose_number";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.NumberIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.dose_sequence;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "dose_sequence";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.NumberIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.information;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "information";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.support;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "support";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.vaccine_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "vaccine_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ImplementationGuide:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.dependency;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "dependency";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.resource;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "resource";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.experimental;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "experimental";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Library:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.topic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "topic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.title;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "title";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Linkage:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.item;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "item";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "author";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.List:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.empty_reason;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "empty_reason";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.item;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "item";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.notes;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "notes";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.title;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "title";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Location:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_city;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "address_city";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_country;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "address_country";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_postalcode;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "address_postalcode";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_state;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "address_state";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_use;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "address_use";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.near;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "near";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.near_distance;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "near_distance";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.QuantityIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.partof;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "partof";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Measure:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.topic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "topic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.title;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "title";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.MeasureReport:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Media:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subtype;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "subtype";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.view;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "view";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._operator;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "operator";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Medication:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.container;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "container";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.form;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "form";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.ingredient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "ingredient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.ingredient_code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "ingredient_code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.package_item;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "package_item";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.package_item_code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "package_item_code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.manufacturer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "manufacturer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.MedicationAdministration:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.device;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "device";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.effectivetime;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "effectivetime";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.medication;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "medication";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.performer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "performer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.prescription;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "prescription";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.wasnotgiven;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "wasnotgiven";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.MedicationDispense:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.prescription;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "prescription";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.receiver;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "receiver";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.responsibleparty;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "responsibleparty";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.destination;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "destination";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.dispenser;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "dispenser";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.medication;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "medication";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.whenhandedover;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "whenhandedover";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.whenprepared;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "whenprepared";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.MedicationOrder:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.datewritten;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "datewritten";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.medication;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "medication";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.prescriber;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "prescriber";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.MedicationStatement:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.effective;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "effective";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.medication;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "medication";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.MessageHeader:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.data;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "data";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.destination;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "destination";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.destination_uri;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "destination_uri";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.target;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "target";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "author";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.enterer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "enterer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._event;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "event";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.receiver;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "receiver";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.response_id;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "response_id";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.responsible;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "responsible";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source_uri;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source_uri";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.timestamp;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "timestamp";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.NamingSystem:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.contact;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "contact";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.id_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "id_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.period;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "period";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.telecom;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "telecom";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.value;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "value";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.kind;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "kind";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.replaced_by;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "replaced_by";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.responsible;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "responsible";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.NutritionRequest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.additive;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "additive";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.formula;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "formula";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.oraldiet;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "oraldiet";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.supplement;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "supplement";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.datetime;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "datetime";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.provider;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "provider";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Observation:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.data_absent_reason;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "data_absent_reason";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.method;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "method";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.performer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "performer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.related_target;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "related_target";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.related_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "related_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.value_concept;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "value_concept";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.value_quantity;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "value_quantity";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.QuantityIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.value_string;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "value_string";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.device;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "device";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.specimen;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "specimen";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.value_date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "value_date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.OperationDefinition:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.paramprofile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "paramprofile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._base;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "base";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.instance;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "instance";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.kind;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "kind";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.system;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "system";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.OperationOutcome:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Organization:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_city;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_city";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_country;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_country";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_postalcode;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_postalcode";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_state;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_state";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_use;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_use";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.active;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "active";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.partof;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "partof";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.phonetic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "phonetic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Parameters:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Patient:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_city;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_city";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_country;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_country";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_postalcode;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_postalcode";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_state;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_state";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_use;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_use";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.animal_breed;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "animal_breed";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.animal_species;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "animal_species";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.email;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "email";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.family;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "family";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.general_practitioner;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "general_practitioner";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.given;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "given";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.language;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "language";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.link;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "link";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.phone;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "phone";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.phonetic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "phonetic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.telecom;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "telecom";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.active;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "active";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.birthdate;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "birthdate";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.death_date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "death_date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.deceased;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "deceased";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.gender;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "gender";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.PaymentNotice:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.payment_status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "payment_status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.provider_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "provider_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.provider_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "provider_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.response_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "response_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.response_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "response_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.statusdate;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "statusdate";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.PaymentReconciliation:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.disposition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "disposition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.outcome;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "outcome";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_provider_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_provider_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_provider_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_provider_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Person:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_city;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_city";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_country;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_country";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_postalcode;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_postalcode";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_state;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_state";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_use;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_use";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.email;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "email";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.link;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "link";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.phone;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "phone";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.phonetic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "phonetic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.practitioner;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "practitioner";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.relatedperson;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "relatedperson";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.telecom;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "telecom";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.birthdate;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "birthdate";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.gender;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "gender";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.PlanDefinition:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.topic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "topic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.title;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "title";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Practitioner:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_city;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_city";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_country;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_country";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_postalcode;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_postalcode";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_state;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_state";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_use;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_use";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.communication;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "communication";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.email;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "email";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.family;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "family";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.given;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "given";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "organization";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.phone;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "phone";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.phonetic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "phonetic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.role;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "role";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.specialty;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "specialty";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.telecom;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "telecom";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.active;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "active";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.gender;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "gender";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.PractitionerRole:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.email;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "email";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.phone;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "phone";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.role;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "role";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.specialty;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "specialty";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.telecom;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "telecom";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.practitioner;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "practitioner";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Procedure:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.performer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "performer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ProcedureRequest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.orderer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "orderer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.performer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "performer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ProcessRequest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.action;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "action";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.provider_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "provider_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.provider_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "provider_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ProcessResponse:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_organization_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_organization_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_organization_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_organization_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_provide_ridentifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_provide_ridentifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_provider_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_provider_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.request_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "request_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Provenance:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.agent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "agent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.entity;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "entity";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.entity_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "entity_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.sig;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "sig";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.target;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "target";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.userid;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "userid";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.end;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "end";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.location;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "location";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.start;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "start";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Questionnaire:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.title;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "title";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.QuestionnaireResponse:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.based_on;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "based_on";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.parent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "parent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.author;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "author";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.authored;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "authored";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.questionnaire;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "questionnaire";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ReferralRequest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.basedon;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "basedon";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.priority;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "priority";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.recipient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "recipient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.specialty;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "specialty";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.parent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "parent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.requester;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "requester";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.RelatedPerson:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_city;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_city";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_country;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_country";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_postalcode;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_postalcode";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_state;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_state";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.address_use;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "address_use";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.email;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "email";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.phone;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "phone";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.phonetic;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "phonetic";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.telecom;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "telecom";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.active;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "active";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.birthdate;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "birthdate";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.gender;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "gender";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.RiskAssessment:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.method;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "method";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.condition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "condition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.performer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "performer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Schedule:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.active;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "active";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.actor;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "actor";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.SearchParameter:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.component;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "component";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.target;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "target";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._base;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "base";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Sequence:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.chromosome;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "chromosome";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.end;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "end";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.NumberIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.start;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "start";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.NumberIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Slot:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.slot_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "slot_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.schedule;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "schedule";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.start;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "start";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Specimen:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.bodysite;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "bodysite";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.container;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "container";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.container_id;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "container_id";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.parent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "parent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.accession;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "accession";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.collected;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "collected";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimePeriodIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.collector;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "collector";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.subject;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "subject";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.StructureDefinition:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.base_path;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "base_path";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.ext_context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "ext_context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.path;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "path";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.valueset;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "valueset";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._abstract;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "abstract";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._base;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "base";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context_type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "context_type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.derivation;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "derivation";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.display;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "display";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.experimental;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "experimental";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.kind;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "kind";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.StructureMap:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.experimental;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "experimental";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Subscription:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.contact;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "contact";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.criteria;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "criteria";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.payload;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "payload";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.type;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "type";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Substance:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.category;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "category";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.container_identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "container_identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.expiry;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "expiry";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.quantity;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "quantity";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.QuantityIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.substance_reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "substance_reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.SupplyDelivery:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.receiver;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "receiver";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.supplier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "supplier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.SupplyRequest:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.kind;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "kind";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.supplier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "supplier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.source;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "source";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.Task:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.code;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "code";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.parent;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "parent";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.performer;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "performer";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.stage;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "stage";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.statusreason;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "statusreason";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.created;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "created";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.definition;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "definition";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.focus;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "focus";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Account");
            SupportedSearchParameter.TypeModifierResourceList.Add("ActivityDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("AllergyIntolerance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Appointment");
            SupportedSearchParameter.TypeModifierResourceList.Add("AppointmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("AuditEvent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Basic");
            SupportedSearchParameter.TypeModifierResourceList.Add("Binary");
            SupportedSearchParameter.TypeModifierResourceList.Add("BodySite");
            SupportedSearchParameter.TypeModifierResourceList.Add("Bundle");
            SupportedSearchParameter.TypeModifierResourceList.Add("CarePlan");
            SupportedSearchParameter.TypeModifierResourceList.Add("CareTeam");
            SupportedSearchParameter.TypeModifierResourceList.Add("Claim");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClaimResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ClinicalImpression");
            SupportedSearchParameter.TypeModifierResourceList.Add("CodeSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("Communication");
            SupportedSearchParameter.TypeModifierResourceList.Add("CommunicationRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("CompartmentDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Composition");
            SupportedSearchParameter.TypeModifierResourceList.Add("ConceptMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Condition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Conformance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Consent");
            SupportedSearchParameter.TypeModifierResourceList.Add("Contract");
            SupportedSearchParameter.TypeModifierResourceList.Add("Coverage");
            SupportedSearchParameter.TypeModifierResourceList.Add("DataElement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DecisionSupportServiceModule");
            SupportedSearchParameter.TypeModifierResourceList.Add("DetectedIssue");
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceComponent");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceMetric");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DeviceUseStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("DiagnosticRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("DocumentReference");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EligibilityResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Endpoint");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("EnrollmentResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("EpisodeOfCare");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExpansionProfile");
            SupportedSearchParameter.TypeModifierResourceList.Add("ExplanationOfBenefit");
            SupportedSearchParameter.TypeModifierResourceList.Add("FamilyMemberHistory");
            SupportedSearchParameter.TypeModifierResourceList.Add("Flag");
            SupportedSearchParameter.TypeModifierResourceList.Add("Goal");
            SupportedSearchParameter.TypeModifierResourceList.Add("Group");
            SupportedSearchParameter.TypeModifierResourceList.Add("GuidanceResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("HealthcareService");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingManifest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImagingStudy");
            SupportedSearchParameter.TypeModifierResourceList.Add("Immunization");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImmunizationRecommendation");
            SupportedSearchParameter.TypeModifierResourceList.Add("ImplementationGuide");
            SupportedSearchParameter.TypeModifierResourceList.Add("Library");
            SupportedSearchParameter.TypeModifierResourceList.Add("Linkage");
            SupportedSearchParameter.TypeModifierResourceList.Add("List");
            SupportedSearchParameter.TypeModifierResourceList.Add("Location");
            SupportedSearchParameter.TypeModifierResourceList.Add("Measure");
            SupportedSearchParameter.TypeModifierResourceList.Add("MeasureReport");
            SupportedSearchParameter.TypeModifierResourceList.Add("Media");
            SupportedSearchParameter.TypeModifierResourceList.Add("Medication");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationAdministration");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationDispense");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationOrder");
            SupportedSearchParameter.TypeModifierResourceList.Add("MedicationStatement");
            SupportedSearchParameter.TypeModifierResourceList.Add("MessageHeader");
            SupportedSearchParameter.TypeModifierResourceList.Add("NamingSystem");
            SupportedSearchParameter.TypeModifierResourceList.Add("NutritionRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Observation");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("OperationOutcome");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentNotice");
            SupportedSearchParameter.TypeModifierResourceList.Add("PaymentReconciliation");
            SupportedSearchParameter.TypeModifierResourceList.Add("Person");
            SupportedSearchParameter.TypeModifierResourceList.Add("PlanDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("PractitionerRole");
            SupportedSearchParameter.TypeModifierResourceList.Add("Procedure");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcedureRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("ProcessResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("Provenance");
            SupportedSearchParameter.TypeModifierResourceList.Add("Questionnaire");
            SupportedSearchParameter.TypeModifierResourceList.Add("QuestionnaireResponse");
            SupportedSearchParameter.TypeModifierResourceList.Add("ReferralRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.TypeModifierResourceList.Add("RiskAssessment");
            SupportedSearchParameter.TypeModifierResourceList.Add("Schedule");
            SupportedSearchParameter.TypeModifierResourceList.Add("SearchParameter");
            SupportedSearchParameter.TypeModifierResourceList.Add("Sequence");
            SupportedSearchParameter.TypeModifierResourceList.Add("Slot");
            SupportedSearchParameter.TypeModifierResourceList.Add("Specimen");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureDefinition");
            SupportedSearchParameter.TypeModifierResourceList.Add("StructureMap");
            SupportedSearchParameter.TypeModifierResourceList.Add("Subscription");
            SupportedSearchParameter.TypeModifierResourceList.Add("Substance");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyDelivery");
            SupportedSearchParameter.TypeModifierResourceList.Add("SupplyRequest");
            SupportedSearchParameter.TypeModifierResourceList.Add("Task");
            SupportedSearchParameter.TypeModifierResourceList.Add("TestScript");
            SupportedSearchParameter.TypeModifierResourceList.Add("ValueSet");
            SupportedSearchParameter.TypeModifierResourceList.Add("VisionPrescription");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.modified;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "modified";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.owner;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "owner";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.priority;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "priority";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.requester;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "requester";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Device");
            SupportedSearchParameter.TypeModifierResourceList.Add("Organization");
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.TypeModifierResourceList.Add("RelatedPerson");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.TestScript:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.testscript_capability;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "testscript_capability";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.use_context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "use_context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.ValueSet:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.context;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "context";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.reference;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "reference";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.date;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "date";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.description;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "description";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.expansion;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "expansion";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.name;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "name";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.publisher;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "publisher";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.StringIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.status;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "status";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.url;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "url";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.version;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "version";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;

        case FHIRAllTypes.VisionPrescription:
          {

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.identifier;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "identifier";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._profile;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_profile";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.UriIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Below);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Above);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Contains);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Exact);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._security;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_security";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType._tag;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = true;
            SupportedSearchParameter.DbPropertyName = "_tag";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.TokenIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.datewritten;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "datewritten";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.DateTimeIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.NotEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Equal);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Greater);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.GreaterOrEqual);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.Less);
            SupportedSearchParameter.PrefixList.Add(FhirSearchEnum.SearchPrefixType.LessOrEqual);
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.encounter;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "encounter";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Encounter");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.patient;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "patient";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Patient");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);

            SupportedSearchParameter = new DtoSupportedSearchParameters();
            SupportedSearchParameter.Name = FhirSearchEnum.SearchParameterNameType.prescriber;
            SupportedSearchParameter.Resource = ResourceType;
            SupportedSearchParameter.IsDbCollection = false;
            SupportedSearchParameter.DbPropertyName = "prescriber";
            SupportedSearchParameter.DbSearchParameterType = DatabaseEnum.DbIndexType.ReferenceIndex;
            SupportedSearchParameter.ModifierList = new List<FhirSearchEnum.SearchModifierType>();
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Type);
            SupportedSearchParameter.ModifierList.Add(FhirSearchEnum.SearchModifierType.Missing);
            SupportedSearchParameter.TypeModifierResourceList = new List<string>();
            SupportedSearchParameter.TypeModifierResourceList.Add("Practitioner");
            SupportedSearchParameter.PrefixList = new List<FhirSearchEnum.SearchPrefixType>();
            List.Add(SupportedSearchParameter);
          }
          break;
        default:
          break;
      }
      return List;
    }
  }
}


