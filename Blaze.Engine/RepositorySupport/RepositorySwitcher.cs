using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Hl7.Fhir.Model;
using Blaze.Common.Interfaces.Repositories;

namespace Blaze.Engine.RepositorySupport
{
  static class RepositorySwitcher
  {
    public static IResourceRepository GetRepository(FHIRDefinedType ResourceType, IUnitOfWork UnitOfWork)
    {
      switch (ResourceType)
      {
        case FHIRDefinedType.Account:
            return UnitOfWork.AccountRepository;        
        case FHIRDefinedType.AllergyIntolerance:
            return UnitOfWork.AllergyIntoleranceRepository;        
        case FHIRDefinedType.Appointment:
            return UnitOfWork.AppointmentRepository;        
        case FHIRDefinedType.AppointmentResponse:
            return UnitOfWork.AppointmentResponseRepository;        
        case FHIRDefinedType.AuditEvent:
            return UnitOfWork.AuditEventRepository;        
        case FHIRDefinedType.Basic:
            return UnitOfWork.BasicRepository;        
        case FHIRDefinedType.Binary:
            return UnitOfWork.BinaryRepository;        
        case FHIRDefinedType.BodySite:
            return UnitOfWork.BodySiteRepository;        
        case FHIRDefinedType.Bundle:
            return UnitOfWork.BundleRepository;        
        case FHIRDefinedType.CarePlan:
            return UnitOfWork.CarePlanRepository;        
        case FHIRDefinedType.CareTeam:
            return UnitOfWork.CareTeamRepository;        
        case FHIRDefinedType.Claim:
            return UnitOfWork.ClaimRepository;        
        case FHIRDefinedType.ClaimResponse:
            return UnitOfWork.ClaimResponseRepository;        
        case FHIRDefinedType.ClinicalImpression:
            return UnitOfWork.ClinicalImpressionRepository;        
        case FHIRDefinedType.CodeSystem:
            return UnitOfWork.CodeSystemRepository;        
        case FHIRDefinedType.Communication:
            return UnitOfWork.CommunicationRepository;        
        case FHIRDefinedType.CommunicationRequest:
            return UnitOfWork.CommunicationRequestRepository;        
        case FHIRDefinedType.CompartmentDefinition:
            return UnitOfWork.CompartmentDefinitionRepository;        
        case FHIRDefinedType.Composition:
            return UnitOfWork.CompositionRepository;        
        case FHIRDefinedType.ConceptMap:
            return UnitOfWork.ConceptMapRepository;        
        case FHIRDefinedType.Condition:
            return UnitOfWork.ConditionRepository;        
        case FHIRDefinedType.Conformance:
            return UnitOfWork.ConformanceRepository;        
        case FHIRDefinedType.Contract:
            return UnitOfWork.ContractRepository;        
        case FHIRDefinedType.Coverage:
            return UnitOfWork.CoverageRepository;        
        case FHIRDefinedType.DataElement:
            return UnitOfWork.DataElementRepository;        
        case FHIRDefinedType.DecisionSupportRule:
            return UnitOfWork.DecisionSupportRuleRepository;        
        case FHIRDefinedType.DecisionSupportServiceModule:
            return UnitOfWork.DecisionSupportServiceModuleRepository;        
        case FHIRDefinedType.DetectedIssue:
            return UnitOfWork.DetectedIssueRepository;        
        case FHIRDefinedType.Device:
            return UnitOfWork.DeviceRepository;        
        case FHIRDefinedType.DeviceComponent:
            return UnitOfWork.DeviceComponentRepository;        
        case FHIRDefinedType.DeviceMetric:
            return UnitOfWork.DeviceMetricRepository;        
        case FHIRDefinedType.DeviceUseRequest:
            return UnitOfWork.DeviceUseRequestRepository;        
        case FHIRDefinedType.DeviceUseStatement:
            return UnitOfWork.DeviceUseStatementRepository;        
        case FHIRDefinedType.DiagnosticOrder:
            return UnitOfWork.DiagnosticOrderRepository;        
        case FHIRDefinedType.DiagnosticReport:
            return UnitOfWork.DiagnosticReportRepository;        
        case FHIRDefinedType.DocumentManifest:
            return UnitOfWork.DocumentManifestRepository;        
        case FHIRDefinedType.DocumentReference:
            return UnitOfWork.DocumentReferenceRepository;        
        case FHIRDefinedType.EligibilityRequest:
            return UnitOfWork.EligibilityRequestRepository;        
        case FHIRDefinedType.EligibilityResponse:
            return UnitOfWork.EligibilityResponseRepository;        
        case FHIRDefinedType.Encounter:
            return UnitOfWork.EncounterRepository;        
        case FHIRDefinedType.EnrollmentRequest:
            return UnitOfWork.EnrollmentRequestRepository;        
        case FHIRDefinedType.EnrollmentResponse:
            return UnitOfWork.EnrollmentResponseRepository;        
        case FHIRDefinedType.EpisodeOfCare:
            return UnitOfWork.EpisodeOfCareRepository;        
        case FHIRDefinedType.ExpansionProfile:
            return UnitOfWork.ExpansionProfileRepository;        
        case FHIRDefinedType.ExplanationOfBenefit:
            return UnitOfWork.ExplanationOfBenefitRepository;        
        case FHIRDefinedType.FamilyMemberHistory:
            return UnitOfWork.FamilyMemberHistoryRepository;        
        case FHIRDefinedType.Flag:
            return UnitOfWork.FlagRepository;        
        case FHIRDefinedType.Goal:
            return UnitOfWork.GoalRepository;        
        case FHIRDefinedType.Group:
            return UnitOfWork.GroupRepository;        
        case FHIRDefinedType.GuidanceResponse:
            return UnitOfWork.GuidanceResponseRepository;        
        case FHIRDefinedType.HealthcareService:
            return UnitOfWork.HealthcareServiceRepository;        
        case FHIRDefinedType.ImagingExcerpt:
            return UnitOfWork.ImagingExcerptRepository;        
        case FHIRDefinedType.ImagingObjectSelection:
            return UnitOfWork.ImagingObjectSelectionRepository;        
        case FHIRDefinedType.ImagingStudy:
            return UnitOfWork.ImagingStudyRepository;        
        case FHIRDefinedType.Immunization:
            return UnitOfWork.ImmunizationRepository;        
        case FHIRDefinedType.ImmunizationRecommendation:
            return UnitOfWork.ImmunizationRecommendationRepository;        
        case FHIRDefinedType.ImplementationGuide:
            return UnitOfWork.ImplementationGuideRepository;        
        case FHIRDefinedType.Library:
            return UnitOfWork.LibraryRepository;        
        case FHIRDefinedType.Linkage:
            return UnitOfWork.LinkageRepository;        
        case FHIRDefinedType.List:
            return UnitOfWork.ListRepository;        
        case FHIRDefinedType.Location:
            return UnitOfWork.LocationRepository;        
        case FHIRDefinedType.Measure:
            return UnitOfWork.MeasureRepository;        
        case FHIRDefinedType.MeasureReport:
            return UnitOfWork.MeasureReportRepository;        
        case FHIRDefinedType.Media:
            return UnitOfWork.MediaRepository;        
        case FHIRDefinedType.Medication:
            return UnitOfWork.MedicationRepository;        
        case FHIRDefinedType.MedicationAdministration:
            return UnitOfWork.MedicationAdministrationRepository;        
        case FHIRDefinedType.MedicationDispense:
            return UnitOfWork.MedicationDispenseRepository;        
        case FHIRDefinedType.MedicationOrder:
            return UnitOfWork.MedicationOrderRepository;        
        case FHIRDefinedType.MedicationStatement:
            return UnitOfWork.MedicationStatementRepository;        
        case FHIRDefinedType.MessageHeader:
            return UnitOfWork.MessageHeaderRepository;        
        case FHIRDefinedType.ModuleDefinition:
            return UnitOfWork.ModuleDefinitionRepository;        
        case FHIRDefinedType.NamingSystem:
            return UnitOfWork.NamingSystemRepository;        
        case FHIRDefinedType.NutritionOrder:
            return UnitOfWork.NutritionOrderRepository;        
        case FHIRDefinedType.Observation:
            return UnitOfWork.ObservationRepository;        
        case FHIRDefinedType.OperationDefinition:
            return UnitOfWork.OperationDefinitionRepository;        
        case FHIRDefinedType.OperationOutcome:
            return UnitOfWork.OperationOutcomeRepository;        
        case FHIRDefinedType.Order:
            return UnitOfWork.OrderRepository;        
        case FHIRDefinedType.OrderResponse:
            return UnitOfWork.OrderResponseRepository;        
        case FHIRDefinedType.OrderSet:
            return UnitOfWork.OrderSetRepository;        
        case FHIRDefinedType.Organization:
            return UnitOfWork.OrganizationRepository;        
        case FHIRDefinedType.Parameters:
            return UnitOfWork.ParametersRepository;        
        case FHIRDefinedType.Patient:
            return UnitOfWork.PatientRepository;        
        case FHIRDefinedType.PaymentNotice:
            return UnitOfWork.PaymentNoticeRepository;        
        case FHIRDefinedType.PaymentReconciliation:
            return UnitOfWork.PaymentReconciliationRepository;        
        case FHIRDefinedType.Person:
            return UnitOfWork.PersonRepository;        
        case FHIRDefinedType.Practitioner:
            return UnitOfWork.PractitionerRepository;        
        case FHIRDefinedType.PractitionerRole:
            return UnitOfWork.PractitionerRoleRepository;        
        case FHIRDefinedType.Procedure:
            return UnitOfWork.ProcedureRepository;        
        case FHIRDefinedType.ProcedureRequest:
            return UnitOfWork.ProcedureRequestRepository;        
        case FHIRDefinedType.ProcessRequest:
            return UnitOfWork.ProcessRequestRepository;        
        case FHIRDefinedType.ProcessResponse:
            return UnitOfWork.ProcessResponseRepository;        
        case FHIRDefinedType.Protocol:
            return UnitOfWork.ProtocolRepository;        
        case FHIRDefinedType.Provenance:
            return UnitOfWork.ProvenanceRepository;        
        case FHIRDefinedType.Questionnaire:
            return UnitOfWork.QuestionnaireRepository;        
        case FHIRDefinedType.QuestionnaireResponse:
            return UnitOfWork.QuestionnaireResponseRepository;        
        case FHIRDefinedType.ReferralRequest:
            return UnitOfWork.ReferralRequestRepository;        
        case FHIRDefinedType.RelatedPerson:
            return UnitOfWork.RelatedPersonRepository;        
        case FHIRDefinedType.RiskAssessment:
            return UnitOfWork.RiskAssessmentRepository;        
        case FHIRDefinedType.Schedule:
            return UnitOfWork.ScheduleRepository;        
        case FHIRDefinedType.SearchParameter:
            return UnitOfWork.SearchParameterRepository;        
        case FHIRDefinedType.Sequence:
            return UnitOfWork.SequenceRepository;        
        case FHIRDefinedType.Slot:
            return UnitOfWork.SlotRepository;        
        case FHIRDefinedType.Specimen:
            return UnitOfWork.SpecimenRepository;        
        case FHIRDefinedType.StructureDefinition:
            return UnitOfWork.StructureDefinitionRepository;        
        case FHIRDefinedType.StructureMap:
            return UnitOfWork.StructureMapRepository;        
        case FHIRDefinedType.Subscription:
            return UnitOfWork.SubscriptionRepository;        
        case FHIRDefinedType.Substance:
            return UnitOfWork.SubstanceRepository;        
        case FHIRDefinedType.SupplyDelivery:
            return UnitOfWork.SupplyDeliveryRepository;        
        case FHIRDefinedType.SupplyRequest:
            return UnitOfWork.SupplyRequestRepository;        
        case FHIRDefinedType.Task:
            return UnitOfWork.TaskRepository;        
        case FHIRDefinedType.TestScript:
            return UnitOfWork.TestScriptRepository;        
        case FHIRDefinedType.ValueSet:
            return UnitOfWork.ValueSetRepository;        
        case FHIRDefinedType.VisionPrescription:
            return UnitOfWork.VisionPrescriptionRepository;        
        default:
          throw new System.ComponentModel.InvalidEnumArgumentException(ResourceType.ToString(), (int)ResourceType, typeof(FHIRDefinedType));
      }      
    }
  }
}

